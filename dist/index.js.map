{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/RESTModel.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/Location.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Upload.ts","webpack:///./src/Band.ts","webpack:///./src/Venue.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Page.ts","webpack:///./src/Post.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Request.ts","webpack:///./src/index.ts","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///./node_modules/cookie/index.js","webpack:///external \"socket.io-client\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","API_1","__importDefault","ModelNameToModel_1","RESTModel","[object Object]","dataMaybe","this","expiration","Date","getTime","changes","document","data","JSON","parse","ModelName","assign","e","console","log","error","dateCreated","dateModified","getField","toJSON","id","setField","_id","Cache","has","cache","isValidId","set","delete","ModelMaybe","Error","Model","modelName","default","getModelName","pattern","RegExp","test","constructor","hasWebSocket","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","CacheSet","isArray","items","forEach","push","map","itemData","item","undefined","valid","toString","toObject","stringify","response","res","CacheRemove","Map","axios_1","cookie_1","SocketIO","__importStar","API","expires","_expires","LocalStorageSupported","localStorage","getItem","dateExpires","setItem","toISOString","token","dateNow","_token","removeItem","cookie","serialize","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","axios","statusText","status","killSocket","webSocket","open","onReady","WebSocket","on","readyState","addEventListener","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","Band_1","Conversation_1","FacebookAccount_1","Gig_1","Location_1","Notification_1","Page_1","Post_1","RESTModel_1","TwitterAccount_1","Upload_1","Venue_1","User","password","confirmPassword","icon","active","admin","firstName","middleName","lastName","birthday","country","bandManager","venueManager","betaFeatureUser","sendAnonymousReports","sendErrorReports","sendEmails","sendPromotions","useCookies","fullName","email","salt","hash","facebook","twitter","description","emailVerified","attempts","lastLoginIP","lastLogin","canContact","canFind","options","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","model","isFinite","Return","results","query","totalFound","bands","venues","users","pages","locations","uploads","async","mName","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","setUser","findByIdBase","location","href","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","maybePassword","lowercaseFirstName","lowercaseLastName","super","isValid","save","remove","agreement","EmailRegex","User_1","FacebookAccount","userId","accountId","userAccessToken","userRefreshToken","profile","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","Gig","startTime","stopTime","venue","toBeAnnounced","bandOwnersAccepted","venueOwnerAccepted","owners","bandId","venueId","gigData","band","times","filtered","filter","time","dayDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","find","GooglePlace_1","Location","type","placeId","address","point","utcOffset","getPlaceDetails","TwitterAccount","accessToken","tokenSecret","Upload","fileName","fileData","title","dataUrl","upload","Band","website","cityName","cityPlaceID","metadata","photos","facebookPageId","facebookPageName","facebookPageToken","google","findByBand","self","every","owner","userIsOwner","Venue","phone","openCloseTimes","findByVenue","Conversation","events","callbackId","conv","cb","message","dateTimePosted","GooglePlace","details","maybeType","Notification","changeCallbacks","label","actions","seenByUser","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","body","timestamp","requestPermission","Page","link","visits","revisions","hide","Boolean","blog","doc","page","Post","network","postText","postDate","coordinates","done","ErrorReport","version","stack","columnNumber","lineNumber","Request","to","emailSent","gig","gigId","option","request","PropTypes_1","GigGizmoPropTypes","ErrorReport_1","Request_1","ModelNameToModel","GigGizmoAPI","PropTypes","shape","string","isRequired","oneOfType","instanceOf","arrayOf","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","symbol","any","element","elementType","node","objectOf","oneOf","exact","checkPropTypes","bandOwnerAccepted","payment","paypal","metaData","closingTime","openingTime","str","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","enc","encode","fieldContentRegExp","maxAge","isNaN","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","import API from \"./API\";\nimport ModelNameToModel from \"./ModelNameToModel\";\n\nexport default abstract class RESTModel {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, RESTModel> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<RESTModel[]>);\n\tpublic static findOne: ((criteria: any) => Promise<RESTModel | null>);\n\tpublic static findById: ((id: string) => Promise<RESTModel | null>);\n\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\tprivate changes: any = new Object();\n\tprivate document: any = new Object();\n\n\tget dateCreated(): Date | null {\n\t\tconst dateCreated = this.document.dateCreated || null;\n\t\treturn dateCreated ? new Date(dateCreated) : dateCreated;\n\t}\n\n\tget dateModified(): Date | null {\n\t\tconst dateModified = this.getField(\"dateModified\") || null;\n\t\treturn dateModified ? new Date(dateModified) : dateModified;\n\t}\n\n\tset dateModified(value: Date | null) {\n\t\tthis.changes.dateModified = (value) ? value.toJSON() : null;\n\t}\n\n\tget id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tget _id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset _id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tpublic static CacheGet(id: string): RESTModel | null {\n\t\tif (typeof id === \"string\" && RESTModel.Cache.has(id)) {\n\t\t\tconst cache: RESTModel | undefined = RESTModel.Cache.get(id);\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet(data: RESTModel): RESTModel | null {\n\t\tif (RESTModel.isValidId(data._id)) {\n\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\treturn data;\n\t\t}\n\t\treturn data;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tRESTModel.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = RESTModel.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static async findByIdBase(\n\t\tModelMaybe: any,\n\t\tid: string,\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel|null> {\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tRESTModel.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: RESTModel[] = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tRESTModel.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(dataMaybe?: any) {\n\t\tthis.document = new Object();\n\t\tthis.changes = new Object();\n\t\tif (typeof dataMaybe === \"string\") {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(dataMaybe);\n\t\t\t\tif (data !== null && typeof data.ModelName !== \"undefined\") {\n\t\t\t\t\tdelete data.ModelName;\n\t\t\t\t}\n\t\t\t\tObject.assign(this.document, data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(dataMaybe);\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else if (dataMaybe) {\n\t\t\tif (typeof dataMaybe.document === \"object\" && dataMaybe.document) {\n\t\t\t\tObject.assign(this.document, dataMaybe.document);\n\t\t\t}\n\t\t\tif (typeof dataMaybe.changes === \"object\" && dataMaybe.changes) {\n\t\t\t\tObject.assign(this.changes, dataMaybe.changes);\n\t\t\t} else {\n\t\t\t\tObject.assign(this.document, dataMaybe);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setField(name: string, value: any): void {\n\t\tif (this) {\n\t\t\tconst currentValue = this.getField(name) || undefined;\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.changes[name] = value;\n\t\t\t\tthis.dateModified = new Date();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getField(name: string): any {\n\t\tif (this) {\n\t\t\tlet data = this.changes[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t\tdata = this.document[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.valid() ? { ...this.changes, ...this.document } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = (object._id.toString() ? object._id : null);\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic valid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\tthrow new Error(`Invalid id: ${this.id}`);\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\tthrow new Error(`Invalid dateModified: ${this.dateModified}`);\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\tthrow new Error(`Invalid dateCreated: ${this.dateCreated}`);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(hasWebSocket?: boolean): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this.document._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this.document[key]) { delete data[key]; }\n\t\t});\n\t\tdata.id = this.changes._id || this.document._id || null;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tthis.document = response;\n\t\t\tthis.changes = {};\n\t\t\tRESTModel.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(hasWebSocket?: boolean): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tlet response: any = null;\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tRESTModel.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport * as SocketIO from \"socket.io-client\";\n\nexport default abstract class API {\n\tpublic static readonly WebSocket = SocketIO;\n\tpublic static readonly axios = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API.LocalStorageSupported) {\n\t\t\tconst expires: any =\n\t\t\t\tlocalStorage.getItem(\"expires\") || null;\n\t\t\tAPI._expires = new Date(expires);\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tlet dateExpires: Date | null = null;\n\t\tif (typeof value === \"string\" || typeof value === \"number\") {\n\n\t\t\t\tdateExpires = new Date(value);\n\t\t} else if (value instanceof Date) {\n\t\t\tdateExpires = value;\n\t\t}\n\t\tif (dateExpires === null) {\n\t\t\tthrow new Error(`value for date expires is invalid, expected string, number, or date. Got: ${value}`);\n\t\t} else {\n\t\t\tAPI._expires = dateExpires;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t\t}\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tAPI._token = JSON.parse(localStorage.getItem(\"token\") || \"\");\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tconst response = await API.axios(fetchRequest);\n\t\tif (response.data) {\n\t\t\treturn response.data;\n\t\t} else if (response.statusText) {\n\t\t\treturn response.statusText;\n\t\t} else if (response.status) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket) {\n\t\t\t\tAPI.webSocket = API.WebSocket.default();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.WebSocket) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.axios !== \"undefined\") {\n\tAPI.axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport API from \"./API\";\nimport Band from \"./Band\";\nimport Conversation from \"./Conversation\";\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport Notification from \"./Notification\";\nimport Page from \"./Page\";\nimport Post from \"./Post\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport Venue from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\nexport default class User extends RESTModel {\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\tpublic static EmailRegex: RegExp = new RegExp(\n\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\"i\");\n\n\tget password(): string | null {\n\t\treturn this.getField(\"password\");\n\t}\n\n\tset password(value: string | null) {\n\t\tthis.setField(\"password\", value);\n\t}\n\n\tget confirmPassword(): string | null {\n\t\treturn this.getField(\"confirmPassword\");\n\t}\n\n\tset confirmPassword(value: string | null) {\n\t\tthis.setField(\"confirmPassword\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tset active(value: boolean) {\n\t\tthis.setField(\"active\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tset admin(value: boolean) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tget admin(): boolean {\n\t\treturn this.getField(\"admin\") === true;\n\t}\n\n\tget firstName(): string {\n\t\treturn this.getField(\"firstName\");\n\t}\n\n\tset firstName(value: string) {\n\t\tthis.setField(\"firstName\", value);\n\t}\n\n\tget middleName(): string {\n\t\treturn this.getField(\"middleName\");\n\t}\n\n\tset middleName(value: string) {\n\t\tthis.setField(\"middleName\", value);\n\t}\n\n\tget lastName(): string {\n\t\treturn this.getField(\"lastName\");\n\t}\n\n\tset lastName(value: string) {\n\t\tthis.setField(\"lastName\", value);\n\t}\n\n\tget birthday(): Date {\n\t\tconst birthday = this.getField(\"birthday\") || null;\n\t\treturn birthday ? new Date(birthday) : birthday;\n\t}\n\n\tset birthday(value: Date) {\n\t\tthis.setField(\"birthday\", (value || new Date()).toJSON());\n\t}\n\n\tget country(): string {\n\t\treturn this.getField(\"country\");\n\t}\n\n\tset country(value: string) {\n\t\tthis.setField(\"country\", value);\n\t}\n\n\tget bandManager(): boolean {\n\t\treturn this.getField(\"bandManager\") === true;\n\t}\n\n\tset bandManager(value: boolean) {\n\t\tthis.setField(\"bandManager\", value);\n\t}\n\n\tget venueManager(): boolean {\n\t\treturn this.getField(\"venueManager\") === true;\n\t}\n\n\tset venueManager(value: boolean) {\n\t\tthis.setField(\"venueManager\", value);\n\t}\n\n\tget betaFeatureUser(): boolean {\n\t\treturn this.getField(\"betaFeatureUser\") === true;\n\t}\n\n\tset betaFeatureUser(value: boolean) {\n\t\tthis.setField(\"betaFeatureUser\", value);\n\t}\n\n\tget sendAnonymousReports(): boolean {\n\t\treturn this.getField(\"sendAnonymousReports\") === true;\n\t}\n\n\tset sendAnonymousReports(value: boolean) {\n\t\tthis.setField(\"sendAnonymousReports\", value);\n\t}\n\n\tget sendErrorReports(): boolean {\n\t\treturn this.getField(\"sendErrorReports\") === true;\n\t}\n\n\tset sendErrorReports(value: boolean) {\n\t\tthis.setField(\"sendErrorReports\", value);\n\t}\n\n\tget sendEmails(): boolean {\n\t\treturn this.getField(\"sendEmails\") === true;\n\t}\n\n\tset sendEmails(value: boolean) {\n\t\tthis.setField(\"sendEmails\", value);\n\t}\n\n\tget sendPromotions(): boolean {\n\t\treturn this.getField(\"sendPromotions\") === true;\n\t}\n\n\tset sendPromotions(value: boolean) {\n\t\tthis.setField(\"sendPromotions\", value);\n\t}\n\n\tget useCookies(): boolean {\n\t\treturn this.getField(\"useCookies\") === true;\n\t}\n\n\tset useCookies(value: boolean) {\n\t\tthis.setField(\"useCookies\", value);\n\t}\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\n\tget email(): string {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget salt(): string {\n\t\treturn this.getField(\"salt\");\n\t}\n\n\tget hash(): string {\n\t\treturn this.getField(\"hash\");\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget emailVerified(): boolean {\n\t\treturn this.getField(\"emailVerified\");\n\t}\n\n\tset emailVerified(value: boolean) {\n\t\tthis.setField(\"emailVerified\", value);\n\t}\n\n\tget attempts(): number {\n\t\treturn this.getField(\"attempts\");\n\t}\n\n\tget lastLoginIP(): string {\n\t\treturn this.getField(\"lastLoginIP\");\n\t}\n\n\tset lastLoginIP(value: string) {\n\t\tthis.setField(\"lastLoginIP\", value);\n\t}\n\n\tget lastLogin(): Date {\n\t\tconst lastLogin = this.getField(\"lastLogin\") || null;\n\t\treturn lastLogin ? new Date(lastLogin) : lastLogin;\n\t}\n\n\tset lastLogin(value: Date) {\n\t\tthis.setField(\"lastLogin\", (value || new Date()).toJSON());\n\t}\n\n\tget canContact(): boolean {\n\t\treturn this.getField(\"canContact\") === true;\n\t}\n\n\tset canContact(value: boolean) {\n\t\tthis.setField(\"canContact\", value);\n\t}\n\n\tget canFind(): boolean {\n\t\treturn this.getField(\"canFind\") === true;\n\t}\n\n\tset canFind(value: boolean) {\n\t\tthis.setField(\"canFind\", value);\n\t}\n\n\tget options(): any {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: any) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(Notification, null, true) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null, true) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<{\n\t\tbands: Band[];\n\t\tlocations: Location[]\n\t\tpages: Page[]\n\t\ttotalFound: number;\n\t\tuploads: Upload[];\n\t\tusers: User[];\n\t\tvenues: Venue[];\n\t}> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"Any\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tconst totalFound = results.totalFound;\n\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tconst bands: Band[] = [];\n\t\t\t\t\tconst venues: Venue[] = [];\n\t\t\t\t\tconst users: User[] = [];\n\t\t\t\t\tconst pages: Page[] = [];\n\t\t\t\t\tconst locations: Location[] = [];\n\t\t\t\t\tconst uploads: Upload[] = [];\n\t\t\t\t\tquery.forEach(async (item: any) => {\n\t\t\t\t\t\tif (item && item.ModelName) {\n\t\t\t\t\t\t\tconst mName = item.ModelName;\n\t\t\t\t\t\t\tif (mName === \"Band\") {\n\t\t\t\t\t\t\t\tbands.push(new Band(item));\n\t\t\t\t\t\t\t} else if (mName === \"Venue\") {\n\t\t\t\t\t\t\t\tvenues.push(new Venue(item));\n\t\t\t\t\t\t\t} else if (mName === \"User\") {\n\t\t\t\t\t\t\t\tusers.push(new User(item));\n\t\t\t\t\t\t\t} else if (mName === \"Page\") {\n\t\t\t\t\t\t\t\tpages.push(new Page(item));\n\t\t\t\t\t\t\t} else if (mName === \"Location\") {\n\t\t\t\t\t\t\t\tlocations.push(new Location(item));\n\t\t\t\t\t\t\t} else if (mName === \"Upload\") {\n\t\t\t\t\t\t\t\tuploads.push(new Upload(item));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconst sorted = {\n\t\t\t\t\t\tbands,\n\t\t\t\t\t\tlocations,\n\t\t\t\t\t\tpages,\n\t\t\t\t\t\ttotalFound,\n\t\t\t\t\t\tuploads,\n\t\t\t\t\t\tusers,\n\t\t\t\t\t\tvenues\n\t\t\t\t\t};\n\t\t\t\t\tresolve(sorted);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn RESTModel.findManyBase(User, criteria, true) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn RESTModel.findOneBase(User, criteria, true) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\tdata = JSON.parse(sessionStorage.getItem(\"user\") || \"\");\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, id, true) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email) {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password) {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token) {\n\t\t\t\tAPI.expires = response.expires;\n\t\t\t\tAPI.token = response.token.toString();\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tlet response = null;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.valid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic valid(): boolean {\n\t\tsuper.valid();\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") {\n\t\t\tthrow new Error(`Invalid firstName: ${this.firstName}`);\n\t\t}\n\t\tif (typeof this.lastName !== \"string\") {\n\t\t\tthrow new Error(`Invalid lastName: ${this.lastName}`);\n\t\t}\n\t\t// Value checks\n\t\tif (this.firstName === \"\") {\n\t\t\tthrow new Error(\"Blank firstName\");\n\t\t}\n\t\tif (this.lastName === \"\") {\n\t\t\tthrow new Error(\"Blank lastName\");\n\t\t}\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class FacebookAccount extends RESTModel {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget userAccessToken(): string {\n\t\treturn this.getField(\"userAccessToken\");\n\t}\n\n\tset userAccessToken(value: string) {\n\t\tthis.setField(\"userAccessToken\", value);\n\t}\n\n\tget userRefreshToken(): string {\n\t\treturn this.getField(\"userRefreshToken\");\n\t}\n\n\tset userRefreshToken(value: string) {\n\t\tthis.setField(\"userRefreshToken\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findOneBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn RESTModel.findManyBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport API from \"./API\";\nimport Band from \"./Band\";\nimport Location from \"./Location\";\nimport RESTModel from \"./RESTModel\";\nimport Venue from \"./Venue\";\n\nexport default class Gig extends RESTModel {\n\tpublic static ModelName: string = \"Gig\";\n\n\tget startTime(): Date {\n\t\tconst startTime = this.getField(\"startTime\");\n\t\treturn startTime ? new Date(startTime) : startTime;\n\t}\n\n\tset startTime(value: Date) {\n\t\tthis.setField(\"startTime\", value);\n\t}\n\n\tget stopTime(): Date {\n\t\tconst stopTime = this.getField(\"stopTime\");\n\t\treturn stopTime ? new Date(stopTime) : stopTime;\n\t}\n\n\tset stopTime(value: Date) {\n\t\tthis.setField(\"stopTime\", value.toJSON());\n\t}\n\n\tget location(): string {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget venue(): string {\n\t\treturn this.getField(\"venue\");\n\t}\n\n\tset venue(value: string) {\n\t\tthis.setField(\"venue\", value);\n\t}\n\n\tget bands(): string[] {\n\t\treturn this.getField(\"bands\");\n\t}\n\n\tset bands(value: string[]) {\n\t\tthis.setField(\"bands\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tget toBeAnnounced(): boolean {\n\t\treturn this.getField(\"toBeAnnounced\");\n\t}\n\n\tset toBeAnnounced(value: boolean) {\n\t\tthis.setField(\"toBeAnnounced\", value);\n\t}\n\n\tget bandOwnersAccepted(): string[] {\n\t\treturn this.getField(\"bandOwnersAccepted\");\n\t}\n\n\tset bandOwnersAccepted(value: string[]) {\n\t\tthis.setField(\"bandOwnersAccepted\", value);\n\t}\n\n\tget venueOwnerAccepted(): string {\n\t\treturn this.getField(\"venueOwnerAccepted\");\n\t}\n\n\tset venueOwnerAccepted(value: string) {\n\t\tthis.setField(\"venueOwnerAccepted\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn RESTModel.findByIdBase(Gig, id, true) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, criteria, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, { _id: this.bands }, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, this.venue, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn RESTModel.findByIdBase(Location, this.location, true) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport API from \"./API\";\nimport GooglePlace from \"./GooglePlace\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Location extends RESTModel {\n\tpublic static ModelName: string = \"Location\";\n\n\tget type(): string {\n\t\treturn this.getField(\"type\") || \"Point\";\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget address(): string {\n\t\treturn this.getField(\"address\");\n\t}\n\n\tset address(value: string) {\n\t\tthis.setField(\"address\", value);\n\t}\n\n\tget point(): number[] {\n\t\treturn this.getField(\"point\");\n\t}\n\n\tset point(value: number[]) {\n\t\tthis.setField(\"point\", value);\n\t}\n\n\tget utcOffset(): number {\n\t\treturn this.getField(\"utcOffset\");\n\t}\n\n\tset utcOffset(value: number) {\n\t\tthis.setField(\"utcOffset\", value);\n\t}\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn RESTModel.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn RESTModel.findManyBase(Location, criteria, false) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class TwitterAccount extends RESTModel {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accessToken(): string {\n\t\treturn this.getField(\"accessToken\");\n\t}\n\n\tset accessToken(value: string) {\n\t\tthis.setField(\"accessToken\", value);\n\t}\n\n\tget tokenSecret(): string {\n\t\treturn this.getField(\"tokenSecret\");\n\t}\n\n\tset tokenSecret(value: string) {\n\t\tthis.setField(\"tokenSecret\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tset profile(value: any) {\n\t\tthis.setField(\"profile\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findOneBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn RESTModel.findManyBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class Upload extends RESTModel {\n\tpublic static ModelName: string = \"Upload\";\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget fileData(): string {\n\t\treturn this.getField(\"fileData\");\n\t}\n\n\tset fileData(value: string) {\n\t\tthis.setField(\"fileData\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static async uploadFile(dataUrl: string, fileName: string): Promise<Upload> {\n\t\tlet upload = new Upload({ fileData: dataUrl, fileName });\n\t\tupload = await upload.save(true);\n\t\treturn upload;\n\t}\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, id) as Promise<Upload | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, criteria, true) as Promise<Upload[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn RESTModel.findOneBase(Upload, criteria) as Promise<Upload | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as Promise<Upload[]>;\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (!this.description) { return false; }\n\t\tif (!this.fileData) { return false; }\n\t\tif (!this.fileName) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\n\nexport default class Band extends RESTModel {\n\tpublic static ModelName: string = \"Band\";\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget website(): string {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget email(): string {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget cityName(): string {\n\t\treturn this.getField(\"cityName\");\n\t}\n\n\tset cityName(value: string) {\n\t\tthis.setField(\"cityName\", value);\n\t}\n\n\tget cityPlaceID(): string {\n\t\treturn this.getField(\"cityPlaceID\");\n\t}\n\n\tset cityPlaceID(value: string) {\n\t\tthis.setField(\"cityPlaceID\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn RESTModel.findOneBase(Band, criteria, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, criteria, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn RESTModel.findByIdBase(Band, id, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn RESTModel.findByIdBase(Upload, this.icon, true) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn RESTModel.findManyBase(\n\t\t\t\t\tUpload,\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: photos\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\n\nexport default class Venue extends RESTModel {\n\tpublic static ModelName: string = \"Venue\";\n\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget email(): string  {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget website(): string {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget phone(): string {\n\t\treturn this.getField(\"phone\");\n\t}\n\n\tset phone(value: string) {\n\t\tthis.setField(\"phone\", value);\n\t}\n\n\tget location(): string | null {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string | null) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget openCloseTimes(): string {\n\t\treturn this.getField(\"openCloseTimes\");\n\t}\n\n\tset openCloseTimes(value: string) {\n\t\tthis.setField(\"openCloseTimes\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn RESTModel.findOneBase(Venue, criteria, true) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, criteria, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, id, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUpload,\n\t\t\t\t{\n\t\t\t\t\t_id: photos\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\", true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\", true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, this.location || \"\", true) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!RESTModel.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\nexport default class Conversation extends RESTModel {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tget events(): ConversationEvent[] {\n\t\treturn this.getField(\"events\") || [];\n\t}\n\n\tset events(value: ConversationEvent[]) {\n\t\tthis.setField(\"events\", value);\n\t}\n\n\tget users(): string[] {\n\t\treturn this.getField(\"users\") || [];\n\t}\n\n\tset users(value: string[]) {\n\t\tthis.setField(\"users\", value);\n\t}\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tRESTModel.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tRESTModel.Cache.set(conv._id, conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn RESTModel.findByIdBase(Conversation, id, true) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn RESTModel.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, criteria, false) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class GooglePlace extends RESTModel {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\") || this.getField(\"place_id\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget details(): string {\n\t\treturn this.getField(\"details\");\n\t}\n\n\tset details(value: string) {\n\t\tthis.setField(\"details\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn RESTModel.findManyBase(GooglePlace, criteria, false) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport default class Notification extends RESTModel {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget label(): string {\n\t\treturn this.getField(\"label\");\n\t}\n\n\tset label(value: string) {\n\t\tthis.setField(\"label\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget actions(): NotificationAction[] {\n\t\treturn this.getField(\"actions\");\n\t}\n\n\tset actions(value: NotificationAction[]) {\n\t\tthis.setField(\"actions\", value);\n\t}\n\n\tget seenByUser(): boolean {\n\t\treturn this.getField(\"seenByUser\");\n\t}\n\n\tset seenByUser(value: boolean) {\n\t\tthis.setField(\"seenByUser\", value);\n\t}\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\treturn Array.from(notes).map((item: any) => new Notification(item));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(\"Notification\", null, true) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn RESTModel.findByIdBase(\"Notification\", id, true) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Page extends RESTModel {\n\tpublic static ModelName: string = \"Page\";\n\n\tget data(): string {\n\t\treturn this.getField(\"data\");\n\t}\n\n\tset data(value: string) {\n\t\tthis.setField(\"data\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget link(): string {\n\t\treturn this.getField(\"link\");\n\t}\n\n\tset link(value: string) {\n\t\tthis.setField(\"link\", value);\n\t}\n\n\tget visits(): number {\n\t\treturn this.getField(\"visits\") || 0;\n\t}\n\n\tset visits(value: number) {\n\t\tthis.setField(\"visits\", value);\n\t}\n\n\tget revisions(): number {\n\t\treturn this.getField(\"revisions\") || 0;\n\t}\n\n\tset revisions(value: number) {\n\t\tthis.setField(\"revisions\", value);\n\t}\n\n\tget hide(): boolean {\n\t\tconst value = this.getField(\"hide\");\n\t\treturn value === null ? true : Boolean(value);\n\t}\n\n\tset hide(value: boolean) {\n\t\tthis.setField(\"hide\", value);\n\t}\n\n\tget blog(): boolean {\n\t\tconst value = this.getField(\"blog\");\n\t\treturn Boolean(value);\n\t}\n\n\tset blog(value: boolean) {\n\t\tthis.setField(\"blog\", value);\n\t}\n\n\tget doc(): boolean {\n\t\tconst value = this.getField(\"doc\");\n\t\treturn Boolean(value);\n\t}\n\n\tset doc(value: boolean) {\n\t\tthis.setField(\"doc\", value);\n\t}\n\n\tget admin(): string {\n\t\treturn this.getField(\"admin\");\n\t}\n\n\tset admin(value: string) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn RESTModel.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn RESTModel.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn RESTModel.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport RESTModel from \"./RESTModel\";\n\nexport default class Post extends RESTModel {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget network(): string {\n\t\treturn this.getField(\"network\");\n\t}\n\n\tset network(value: string) {\n\t\tthis.setField(\"network\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget pageId(): string {\n\t\treturn this.getField(\"pageId\");\n\t}\n\n\tset pageId(value: string) {\n\t\tthis.setField(\"pageId\", value);\n\t}\n\n\tget postText(): string {\n\t\treturn this.getField(\"postText\");\n\t}\n\n\tset postText(value: string) {\n\t\tthis.setField(\"postText\", value);\n\t}\n\n\tget postDate(): string {\n\t\treturn this.getField(\"postDate\");\n\t}\n\n\tset postDate(value: string) {\n\t\tthis.setField(\"postDate\", value);\n\t}\n\n\tget coordinates(): number[] {\n\t\treturn this.getField(\"coordinates\");\n\t}\n\n\tset coordinates(value: number[]) {\n\t\tthis.setField(\"coordinates\", value);\n\t}\n\n\tget error(): string {\n\t\treturn this.getField(\"error\");\n\t}\n\n\tset error(value: string) {\n\t\tthis.setField(\"error\", value);\n\t}\n\n\tget done(): boolean {\n\t\treturn this.getField(\"done\");\n\t}\n\n\tset done(value: boolean) {\n\t\tthis.setField(\"done\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn RESTModel.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn RESTModel.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export default async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).default;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).default;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).default;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).default;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).default;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).default;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).default;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).default;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).default;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).default;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).default;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).default;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).default;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).default;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).default;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport RESTModel from \"./RESTModel\";\n\nexport default class ErrorReport extends RESTModel {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tget version(): string {\n\t\treturn this.getField(\"version\");\n\t}\n\n\tset version(value: string) {\n\t\tthis.setField(\"version\", value);\n\t}\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget stack(): string {\n\t\treturn this.getField(\"stack\");\n\t}\n\n\tset stack(value: string) {\n\t\tthis.setField(\"stack\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget columnNumber(): number {\n\t\treturn this.getField(\"columnNumber\");\n\t}\n\n\tset columnNumber(value: number) {\n\t\tthis.setField(\"columnNumber\", value);\n\t}\n\n\tget lineNumber(): number {\n\t\treturn this.getField(\"lineNumber\");\n\t}\n\n\tset lineNumber(value: number) {\n\t\tthis.setField(\"lineNumber\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn RESTModel.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Request extends RESTModel {\n\tpublic static ModelName: string = \"Request\";\n\n\tget to(): string {\n\t\treturn this.getField(\"to\");\n\t}\n\n\tset to(value: string) {\n\t\tthis.setField(\"to\", value);\n\t}\n\n\tget from(): string {\n\t\treturn this.getField(\"from\");\n\t}\n\n\tset from(value: string) {\n\t\tthis.setField(\"from\", value);\n\t}\n\n\tget status(): string {\n\t\treturn this.getField(\"status\");\n\t}\n\n\tset status(value: string) {\n\t\tthis.setField(\"status\", value);\n\t}\n\n\tget options(): string[] {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: string[]) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tget type(): string {\n\t\treturn this.getField(\"type\");\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget userData(): any {\n\t\treturn this.getField(\"userData\");\n\t}\n\n\tset userData(value: any) {\n\t\tthis.setField(\"userData\", value);\n\t}\n\n\tget emailSent(): boolean {\n\t\treturn this.getField(\"emailSent\");\n\t}\n\n\tset emailSent(value: boolean) {\n\t\tthis.setField(\"emailSent\", value);\n\t}\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn RESTModel.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn RESTModel.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { default as GigGizmoPropTypes } from \"./PropTypes\";\nexport { default as API } from \"./API\";\n\n// Models\nexport { default as Band } from \"./Band\";\nexport {\n\tdefault as Conversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { default as ErrorReport } from \"./ErrorReport\";\nexport { default as FacebookAccount } from \"./FacebookAccount\";\nexport { default as Gig } from \"./Gig\";\nexport { default as GooglePlace } from \"./GooglePlace\";\nexport { default as Location } from \"./Location\";\nexport {\n\tdefault as Notification,\n\tNotificationAction\n} from \"./Notification\";\nexport { default as Page } from \"./Page\";\nexport { default as Post } from \"./Post\";\nexport { default as Request } from \"./Request\";\nexport { default as RESTModel } from \"./RESTModel\";\nexport { default as TwitterAccount } from \"./TwitterAccount\";\nexport { default as Upload } from \"./Upload\";\nexport { default as User } from \"./User\";\nexport { default as Venue } from \"./Venue\";\nexport { default as ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","import Band from \"./Band\";\nimport Conversation from \"./Conversation\";\nimport ErrorReport from \"./ErrorReport\";\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport Notification from \"./Notification\";\nimport Page from \"./Page\";\nimport Post from \"./Post\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Venue from \"./Venue\";\n\nexport default {\n\tBand,\n\tConversation,\n\tErrorReport,\n\tFacebookAccount,\n\tGig,\n\tLocation,\n\tNotification,\n\tPage,\n\tPost,\n\tTwitterAccount,\n\tUpload,\n\tUser,\n\tVenue\n};\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","(function() { module.exports = this[\"socket.io-client\"]; }());"],"sourceRoot":""}