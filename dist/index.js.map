{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/RESTModel.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/Location.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Upload.ts","webpack:///./src/Band.ts","webpack:///./src/Venue.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Page.ts","webpack:///./src/Post.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Request.ts","webpack:///./src/index.ts","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///./node_modules/cookie/index.js","webpack:///external \"socket.io-client\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","API_1","__importDefault","ModelNameToModel_1","RESTModel","dataMaybe","this","expiration","Date","getTime","changes","document","data","JSON","parse","ModelName","assign","e","console","log","error","dateCreated","dateModified","getField","toJSON","setField","CacheGet","id","Cache","has","cache","CacheSet","isValidId","_id","set","CacheRemove","delete","deduceModelAndName","ModelMaybe","Error","Model","modelName","default","_a","sent","getModelName","pattern","RegExp","test","constructor","findByIdBase","hasWebSocket","_b","modelName_1","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","findOneBase","criteria","Array","from","keys","length","route","socket_1","findManyBase","isArray","items_1","forEach","push","map","itemData","item","undefined","toObject","valid","__assign","toString","stringify","isValid","save","response","_this","remove","modelName_2","res","Map","axios_1","cookie_1","SocketIO","__importStar","API","_expires","LocalStorageSupported","expires","localStorage","getItem","dateExpires","setItem","toISOString","dateNow","_token","removeItem","cookie","serialize","path","sameSite","url","secure","hostname","port","securePort","method","headers","x-gig-gizmo-token","token","fetchRequest","toLowerCase","params","responseType","rootURL","xsrfCookieName","xsrfHeaderName","axios","statusText","status","killSocket","webSocket","open","onReady","WebSocket","on","readyState","addEventListener","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","Band_1","Conversation_1","FacebookAccount_1","Gig_1","Location_1","Notification_1","Page_1","Post_1","RESTModel_1","TwitterAccount_1","Upload_1","Venue_1","User","_super","__extends","birthday","firstName","middleName","lastName","lastLogin","verifyEmail","secret","sendEmailVerification","getAllConversations","getAllNotifications","getAllPosts","getAllBands","getAllVenues","getAllGigs","getAllUploads","findFacebookPages","term","search","q","skip","limit","Number","POSITIVE_INFINITY","data_1","model","isFinite","Return_1","results","query","totalFound","bands","venues","users","pages","locations","uploads","__awaiter","mName","findMany","findOne","onChange","callback","now","Callbacks","setUser","Current","sessionStorage","getUser","force","findById","connectFacebook","location","href","facebookLogIn","payPalLogIn","userLogIn","email","password","user","userLogOut","sendPasswordResetEmail","registerUser","userData","join","lowercasePassword","indexOf","rej","NotifyAdminsOfError","getIcon","icon","getTwitterAccount","twitter","getFacebookAccount","facebook","validatePassword","maybePassword","lowercaseFirstName","lowercaseLastName","agreement","EmailRegex","User_1","FacebookAccount","found","account","findPage","pageName","PostToPage","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","userId","userIsOwner","profile","accountId","Gig","startTime","stopTime","findByBand","bandId","findByVenue","venueId","getAllOwned","createGigs","gigData","band","venue","times","filtered","filter","time","dayDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","getAllInDistance","distance","lat","lng","dis","getBands","getVenue","getLocation","owners","userId_1","find","GooglePlace_1","Location","getLocationByPlaceId","placeId","address","utcOffset","point","getPlaceDetails","TwitterAccount","goToTwitterAccount","Upload","uploadFile","dataUrl","fileName","fileData","getOwners","title","description","Band","getPhotos","photos","getGigs","self","cityPlaceID","every","owner","Venue","Conversation","newCallback","callbackId","connectSocket","conv_1","cb","pushMessage","message","events","dateTimePosted","GooglePlace","queryPlace","maybeType","type","Notification","apply","arguments","changeCallbacks","onNewNotification","note","getNewNotifications","returnNew","notes","setUpPushNotifications","PushSupported","webNotification","setup","permission","label","body","timestamp","requestPermission","newChangeCallback","Page","Boolean","findByLink","link","page","admin","Post","canSave","postDate","postText","network","ErrorReport","Request","createBandOwnershipRequest","to","createVenueOwnershipRequest","createGigNegotiation","gig","gigId","execute","option","request","PropTypes_1","GigGizmoPropTypes","ErrorReport_1","Request_1","ModelNameToModel","GigGizmoAPI","PropTypes","shape","string","isRequired","cityName","oneOfType","instanceOf","facebookPageId","facebookPageName","facebookPageToken","google","metadata","arrayOf","website","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","symbol","any","element","elementType","node","objectOf","oneOf","exact","checkPropTypes","columnNumber","lineNumber","stack","version","userAccessToken","userRefreshToken","bandOwnerAccepted","toBeAnnounced","venueOwnerAccepted","actions","seenByUser","blog","doc","hide","revisions","visits","coordinates","done","accessToken","tokenSecret","active","attempts","bandManager","betaFeatureUser","country","emailVerified","lastLoginIP","payment","paypal","sendAnonymousReports","sendEmails","sendErrorReports","sendPromotions","useCookies","venueManager","metaData","openCloseTimes","closingTime","openingTime","phone","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","enc","encode","fieldContentRegExp","maxAge","isNaN","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","import API from \"./API\";\nimport ModelNameToModel from \"./ModelNameToModel\";\n\nexport default abstract class RESTModel {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<RESTModel[]>);\n\tpublic static findOne: ((criteria: any) => Promise<RESTModel | null>);\n\tpublic static findById: ((id: string) => Promise<RESTModel | null>);\n\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\tprivate changes: any = new Object();\n\tprivate document: any = new Object();\n\n\tget dateCreated(): Date | null {\n\t\tconst dateCreated = this.document.dateCreated || null;\n\t\treturn dateCreated ? new Date(dateCreated) : dateCreated;\n\t}\n\n\tget dateModified(): Date | null {\n\t\tconst dateModified = this.getField(\"dateModified\") || null;\n\t\treturn dateModified ? new Date(dateModified) : dateModified;\n\t}\n\n\tset dateModified(value: Date | null) {\n\t\tthis.changes.dateModified = (value) ? value.toJSON() : null;\n\t}\n\n\tget id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tget _id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset _id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tpublic static CacheGet(id: string): RESTModel | null {\n\t\tif (typeof id === \"string\" && RESTModel.Cache.has(id)) {\n\t\t\tconst cache: RESTModel = RESTModel.Cache.get(id);\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet(data: RESTModel): RESTModel | null {\n\t\tif (RESTModel.isValidId(data._id)) {\n\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\treturn data;\n\t\t}\n\t\treturn data;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tRESTModel.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any) {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = RESTModel.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static isValidId(id: any) {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static getModelName(Model: object) {\n\t\tif (Model == null) { return null; }\n\t\tif ((Model as any).ModelName) { return (Model as any).ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t}\n\n\tpublic static async findByIdBase(\n\t\tModelMaybe: any,\n\t\tid: string,\n\t\thasWebSocket: boolean = false\n\t): Promise<RESTModel|null> {\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket: boolean = false\n\t): Promise<RESTModel|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tRESTModel.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket: boolean = false\n\t): Promise<RESTModel[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: RESTModel[] = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tRESTModel.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(dataMaybe?: any) {\n\t\tthis.document = new Object();\n\t\tthis.changes = new Object();\n\t\tif (typeof dataMaybe === \"string\") {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(dataMaybe);\n\t\t\t\tif (data !== null && typeof data.ModelName !== \"undefined\") {\n\t\t\t\t\tdelete data.ModelName;\n\t\t\t\t}\n\t\t\t\tObject.assign(this.document, data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(dataMaybe);\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else if (dataMaybe) {\n\t\t\tif (typeof dataMaybe.document === \"object\" && dataMaybe.document) {\n\t\t\t\tObject.assign(this.document, dataMaybe.document);\n\t\t\t}\n\t\t\tif (typeof dataMaybe.changes === \"object\" && dataMaybe.changes) {\n\t\t\t\tObject.assign(this.changes, dataMaybe.changes);\n\t\t\t} else {\n\t\t\t\tObject.assign(this.document, dataMaybe);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setField(name: string, value: any): void {\n\t\tif (this) {\n\t\t\tconst currentValue = this.getField(name) || undefined;\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.changes[name] = value;\n\t\t\t\tthis.dateModified = new Date();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getField(name: string): any {\n\t\tif (this) {\n\t\t\tlet data = this.changes[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t\tdata = this.document[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic toObject(): {} {\n\t\tconst object = this.valid() ? { ...this.changes, ...this.document } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = (object._id.toString() ? object._id : null);\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic valid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\tthrow new Error(`Invalid id: ${this.id}`);\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\tthrow new Error(`Invalid dateModified: ${this.dateModified}`);\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\tthrow new Error(`Invalid dateCreated: ${this.dateCreated}`);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(hasWebSocket: boolean = false) {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this.document._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this.document[key]) { delete data[key]; }\n\t\t});\n\t\tdata.id = this.changes._id || this.document._id || null;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tthis.document = response;\n\t\t\tthis.changes = {};\n\t\t\tRESTModel.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(hasWebSocket: boolean = false) {\n\t\tconst id = this._id || \"\";\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tlet response: any = null;\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tRESTModel.CacheRemove(id);\n\t\t\treturn response;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport * as SocketIO from \"socket.io-client\";\n\nexport default abstract class API {\n\tpublic static readonly WebSocket = SocketIO;\n\tpublic static readonly axios = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires() {\n\t\tif (!API._expires && API.LocalStorageSupported) {\n\t\t\tconst expires: any =\n\t\t\t\tlocalStorage.getItem(\"expires\") || null;\n\t\t\tAPI._expires = new Date(expires);\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: any) {\n\t\tlet dateExpires: Date | null = null;\n\t\tif (typeof value === \"string\" || typeof value === \"number\") {\n\n\t\t\t\tdateExpires = new Date(value);\n\t\t} else if (value instanceof Date) {\n\t\t\tdateExpires = value;\n\t\t}\n\t\tif (dateExpires === null) {\n\t\t\tthrow new Error(`value for date expires is invalid, expected string, number, or date. Got: ${value}`);\n\t\t} else {\n\t\t\tAPI._expires = dateExpires;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t\t}\n\t\t}\n\t}\n\tpublic static get token() {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tAPI._token = JSON.parse(localStorage.getItem(\"token\") || \"\");\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: any) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tconst response = await API.axios(fetchRequest);\n\t\tif (response.data) {\n\t\t\treturn response.data;\n\t\t} else if (response.statusText) {\n\t\t\treturn response.statusText;\n\t\t} else if (response.status) {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket) {\n\t\t\t\tAPI.webSocket = API.WebSocket.default();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.WebSocket) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.axios !== \"undefined\") {\n\tAPI.axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport API from \"./API\";\nimport Band from \"./Band\";\nimport Conversation from \"./Conversation\";\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport Notification from \"./Notification\";\nimport Page from \"./Page\";\nimport Post from \"./Post\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport Venue from \"./Venue\";\n\nexport default class User extends RESTModel {\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: any = null;\n\tpublic static Callbacks: Map<number, (user: User | null) => any> = new Map();\n\tpublic static agreement: any = null;\n\tpublic static EmailRegex: RegExp = new RegExp(\n\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\"i\");\n\n\tget password(): string | null {\n\t\treturn this.getField(\"password\");\n\t}\n\n\tset password(value: string | null) {\n\t\tthis.setField(\"password\", value);\n\t}\n\n\tget confirmPassword(): string | null {\n\t\treturn this.getField(\"confirmPassword\");\n\t}\n\n\tset confirmPassword(value: string | null) {\n\t\tthis.setField(\"confirmPassword\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tset active(value: boolean) {\n\t\tthis.setField(\"active\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tset admin(value: boolean) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tget admin(): boolean {\n\t\treturn this.getField(\"admin\") === true;\n\t}\n\n\tget firstName(): string | null {\n\t\treturn this.getField(\"firstName\");\n\t}\n\n\tset firstName(value: string | null) {\n\t\tthis.setField(\"firstName\", value);\n\t}\n\n\tget middleName(): string | null {\n\t\treturn this.getField(\"middleName\");\n\t}\n\n\tset middleName(value: string | null) {\n\t\tthis.setField(\"middleName\", value);\n\t}\n\n\tget lastName(): string | null {\n\t\treturn this.getField(\"lastName\");\n\t}\n\n\tset lastName(value: string | null) {\n\t\tthis.setField(\"lastName\", value);\n\t}\n\n\tget birthday(): Date | null {\n\t\tconst birthday = this.getField(\"birthday\") || null;\n\t\treturn birthday ? new Date(birthday) : birthday;\n\t}\n\n\tset birthday(value: Date | null) {\n\t\tthis.setField(\"birthday\", (value || new Date()).toJSON());\n\t}\n\n\tget country(): string | null {\n\t\treturn this.getField(\"country\");\n\t}\n\n\tset country(value: string | null) {\n\t\tthis.setField(\"country\", value);\n\t}\n\n\tget bandManager(): boolean {\n\t\treturn this.getField(\"bandManager\") === true;\n\t}\n\n\tset bandManager(value: boolean) {\n\t\tthis.setField(\"bandManager\", value);\n\t}\n\n\tget venueManager(): boolean {\n\t\treturn this.getField(\"venueManager\") === true;\n\t}\n\n\tset venueManager(value: boolean) {\n\t\tthis.setField(\"venueManager\", value);\n\t}\n\n\tget betaFeatureUser(): boolean {\n\t\treturn this.getField(\"betaFeatureUser\") === true;\n\t}\n\n\tset betaFeatureUser(value: boolean) {\n\t\tthis.setField(\"betaFeatureUser\", value);\n\t}\n\n\tget sendAnonymousReports(): boolean {\n\t\treturn this.getField(\"sendAnonymousReports\") === true;\n\t}\n\n\tset sendAnonymousReports(value: boolean) {\n\t\tthis.setField(\"sendAnonymousReports\", value);\n\t}\n\n\tget sendErrorReports(): boolean {\n\t\treturn this.getField(\"sendErrorReports\") === true;\n\t}\n\n\tset sendErrorReports(value: boolean) {\n\t\tthis.setField(\"sendErrorReports\", value);\n\t}\n\n\tget sendEmails(): boolean {\n\t\treturn this.getField(\"sendEmails\") === true;\n\t}\n\n\tset sendEmails(value: boolean) {\n\t\tthis.setField(\"sendEmails\", value);\n\t}\n\n\tget sendPromotions(): boolean {\n\t\treturn this.getField(\"sendPromotions\") === true;\n\t}\n\n\tset sendPromotions(value: boolean) {\n\t\tthis.setField(\"sendPromotions\", value);\n\t}\n\n\tget useCookies(): boolean {\n\t\treturn this.getField(\"useCookies\") === true;\n\t}\n\n\tset useCookies(value: boolean) {\n\t\tthis.setField(\"useCookies\", value);\n\t}\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\n\tget email(): string | null {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string | null) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget salt(): string | null {\n\t\treturn this.getField(\"salt\");\n\t}\n\n\tget hash(): string | null {\n\t\treturn this.getField(\"hash\");\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget description(): string | null {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string | null) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget emailVerified(): boolean {\n\t\treturn this.getField(\"emailVerified\");\n\t}\n\n\tset emailVerified(value: boolean) {\n\t\tthis.setField(\"emailVerified\", value);\n\t}\n\n\tget attempts(): number {\n\t\treturn this.getField(\"attempts\");\n\t}\n\n\tget lastLoginIP(): string | null {\n\t\treturn this.getField(\"lastLoginIP\");\n\t}\n\n\tset lastLoginIP(value: string | null) {\n\t\tthis.setField(\"lastLoginIP\", value);\n\t}\n\n\tget lastLogin(): Date | null {\n\t\tconst lastLogin = this.getField(\"lastLogin\") || null;\n\t\treturn lastLogin ? new Date(lastLogin) : lastLogin;\n\t}\n\n\tset lastLogin(value: Date | null) {\n\t\tthis.setField(\"lastLogin\", (value || new Date()).toJSON());\n\t}\n\n\tget canContact(): boolean {\n\t\treturn this.getField(\"canContact\") === true;\n\t}\n\n\tset canContact(value: boolean) {\n\t\tthis.setField(\"canContact\", value);\n\t}\n\n\tget canFind(): boolean {\n\t\treturn this.getField(\"canFind\") === true;\n\t}\n\n\tset canFind(value: boolean) {\n\t\tthis.setField(\"canFind\", value);\n\t}\n\n\tget options(): any {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: any) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(Notification, null, true) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null, true) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<{\n\t\tbands: Band[];\n\t\tlocations: Location[]\n\t\tpages: Page[]\n\t\ttotalFound: number;\n\t\tuploads: Upload[];\n\t\tusers: User[];\n\t\tvenues: Venue[];\n\t}> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"Any\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tconst totalFound = results.totalFound;\n\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tconst bands: Band[] = [];\n\t\t\t\t\tconst venues: Venue[] = [];\n\t\t\t\t\tconst users: User[] = [];\n\t\t\t\t\tconst pages: Page[] = [];\n\t\t\t\t\tconst locations: Location[] = [];\n\t\t\t\t\tconst uploads: Upload[] = [];\n\t\t\t\t\tquery.forEach(async (item: any) => {\n\t\t\t\t\t\tif (item && item.ModelName) {\n\t\t\t\t\t\t\tconst mName = item.ModelName;\n\t\t\t\t\t\t\tif (mName === \"Band\") {\n\t\t\t\t\t\t\t\tbands.push(new Band(item));\n\t\t\t\t\t\t\t} else if (mName === \"Venue\") {\n\t\t\t\t\t\t\t\tvenues.push(new Venue(item));\n\t\t\t\t\t\t\t} else if (mName === \"User\") {\n\t\t\t\t\t\t\t\tusers.push(new User(item));\n\t\t\t\t\t\t\t} else if (mName === \"Page\") {\n\t\t\t\t\t\t\t\tpages.push(new Page(item));\n\t\t\t\t\t\t\t} else if (mName === \"Location\") {\n\t\t\t\t\t\t\t\tlocations.push(new Location(item));\n\t\t\t\t\t\t\t} else if (mName === \"Upload\") {\n\t\t\t\t\t\t\t\tuploads.push(new Upload(item));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconst sorted = {\n\t\t\t\t\t\tbands,\n\t\t\t\t\t\tlocations,\n\t\t\t\t\t\tpages,\n\t\t\t\t\t\ttotalFound,\n\t\t\t\t\t\tuploads,\n\t\t\t\t\t\tusers,\n\t\t\t\t\t\tvenues\n\t\t\t\t\t};\n\t\t\t\t\tresolve(sorted);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn RESTModel.findManyBase(User, criteria, true) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn RESTModel.findOneBase(User, criteria, true) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void) {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\tdata = JSON.parse(sessionStorage.getItem(\"user\") || \"\");\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, id, true) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User> {\n\t\tif (!email) {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password) {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token) {\n\t\t\t\tAPI.expires = response.expires;\n\t\t\t\tAPI.token = response.token.toString();\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User> {\n\t\tlet response = null;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.valid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic valid(): boolean {\n\t\tsuper.valid();\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") {\n\t\t\tthrow new Error(`Invalid firstName: ${this.firstName}`);\n\t\t}\n\t\tif (typeof this.lastName !== \"string\") {\n\t\t\tthrow new Error(`Invalid lastName: ${this.lastName}`);\n\t\t}\n\t\t// Value checks\n\t\tif (this.firstName === \"\") {\n\t\t\tthrow new Error(\"Blank firstName\");\n\t\t}\n\t\tif (this.lastName === \"\") {\n\t\t\tthrow new Error(\"Blank lastName\");\n\t\t}\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class FacebookAccount extends RESTModel {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget userAccessToken(): string {\n\t\treturn this.getField(\"userAccessToken\");\n\t}\n\n\tset userAccessToken(value: string) {\n\t\tthis.setField(\"userAccessToken\", value);\n\t}\n\n\tget userRefreshToken(): string {\n\t\treturn this.getField(\"userRefreshToken\");\n\t}\n\n\tset userRefreshToken(value: string) {\n\t\tthis.setField(\"userRefreshToken\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport API from \"./API\";\nimport Band from \"./Band\";\nimport Location from \"./Location\";\nimport RESTModel from \"./RESTModel\";\nimport Venue from \"./Venue\";\n\nexport default class Gig extends RESTModel {\n\tpublic static ModelName: string = \"Gig\";\n\n\tget startTime(): string {\n\t\tconst startTime = this.getField(\"startTime\");\n\t\treturn startTime ? new Date(startTime) : startTime;\n\t}\n\n\tset startTime(value: string) {\n\t\tthis.setField(\"startTime\", value);\n\t}\n\n\tget stopTime(): Date {\n\t\tconst stopTime = this.getField(\"stopTime\");\n\t\treturn stopTime ? new Date(stopTime) : stopTime;\n\t}\n\n\tset stopTime(value: Date) {\n\t\tthis.setField(\"stopTime\", value.toJSON());\n\t}\n\n\tget location(): string {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget venue(): string {\n\t\treturn this.getField(\"venue\");\n\t}\n\n\tset venue(value: string) {\n\t\tthis.setField(\"venue\", value);\n\t}\n\n\tget bands(): string[] {\n\t\treturn this.getField(\"bands\");\n\t}\n\n\tset bands(value: string[]) {\n\t\tthis.setField(\"bands\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tget toBeAnnounced(): boolean {\n\t\treturn this.getField(\"toBeAnnounced\");\n\t}\n\n\tset toBeAnnounced(value: boolean) {\n\t\tthis.setField(\"toBeAnnounced\", value);\n\t}\n\n\tget bandOwnersAccepted(): string[] {\n\t\treturn this.getField(\"bandOwnersAccepted\");\n\t}\n\n\tset bandOwnersAccepted(value: string[]) {\n\t\tthis.setField(\"bandOwnersAccepted\", value);\n\t}\n\n\tget venueOwnerAccepted(): string {\n\t\treturn this.getField(\"venueOwnerAccepted\");\n\t}\n\n\tset venueOwnerAccepted(value: string) {\n\t\tthis.setField(\"venueOwnerAccepted\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn RESTModel.findByIdBase(Gig, id, true) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, criteria, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, { _id: this.bands }, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, this.venue, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn RESTModel.findByIdBase(Location, this.location, true) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport API from \"./API\";\nimport GooglePlace from \"./GooglePlace\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Location extends RESTModel {\n\tpublic static ModelName: string = \"Location\";\n\n\tget type(): string {\n\t\treturn this.getField(\"type\") || \"Point\";\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget address(): string {\n\t\treturn this.getField(\"address\");\n\t}\n\n\tset address(value: string) {\n\t\tthis.setField(\"address\", value);\n\t}\n\n\tget point(): number[] {\n\t\treturn this.getField(\"point\");\n\t}\n\n\tset point(value: number[]) {\n\t\tthis.setField(\"point\", value);\n\t}\n\n\tget utcOffset(): number {\n\t\treturn this.getField(\"utcOffset\");\n\t}\n\n\tset utcOffset(value: number) {\n\t\tthis.setField(\"utcOffset\", value);\n\t}\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn RESTModel.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn RESTModel.findManyBase(Location, criteria, false) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class TwitterAccount extends RESTModel {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accessToken(): string {\n\t\treturn this.getField(\"accessToken\");\n\t}\n\n\tset accessToken(value: string) {\n\t\tthis.setField(\"accessToken\", value);\n\t}\n\n\tget tokenSecret(): string {\n\t\treturn this.getField(\"tokenSecret\");\n\t}\n\n\tset tokenSecret(value: string) {\n\t\tthis.setField(\"tokenSecret\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tset profile(value: any) {\n\t\tthis.setField(\"profile\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport RESTModel from \"./RESTModel\";\nimport User from \"./User\";\n\nexport default class Upload extends RESTModel {\n\tpublic static ModelName: string = \"Upload\";\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget fileData(): string {\n\t\treturn this.getField(\"fileData\");\n\t}\n\n\tset fileData(value: string) {\n\t\tthis.setField(\"fileData\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static async uploadFile(dataUrl: string, fileName: string): Promise<Upload> {\n\t\tlet upload = new Upload({ fileData: dataUrl, fileName });\n\t\tupload = await upload.save(true);\n\t\treturn upload;\n\t}\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, id) as Promise<Upload | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, criteria, true) as Promise<Upload[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn RESTModel.findOneBase(Upload, criteria) as Promise<Upload | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as Promise<Upload[]>;\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (!this.description) { return false; }\n\t\tif (!this.fileData) { return false; }\n\t\tif (!this.fileName) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\n\nexport default class Band extends RESTModel {\n\tpublic static ModelName: string = \"Band\";\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget website(): string {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget email(): string {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget cityName(): string {\n\t\treturn this.getField(\"cityName\");\n\t}\n\n\tset cityName(value: string) {\n\t\tthis.setField(\"cityName\", value);\n\t}\n\n\tget cityPlaceID(): string {\n\t\treturn this.getField(\"cityPlaceID\");\n\t}\n\n\tset cityPlaceID(value: string) {\n\t\tthis.setField(\"cityPlaceID\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn RESTModel.findOneBase(Band, criteria, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, criteria, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn RESTModel.findByIdBase(Band, id, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn RESTModel.findByIdBase(Upload, this.icon, true) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn RESTModel.findManyBase(\n\t\t\t\t\tUpload,\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: photos\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport RESTModel from \"./RESTModel\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\n\nexport default class Venue extends RESTModel {\n\tpublic static ModelName: string = \"Venue\";\n\n\tget name(): string | null {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string | null) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget description(): string | null {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string | null) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget email(): string | null {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string | null) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget website(): string | null {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string | null) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget phone(): string | null {\n\t\treturn this.getField(\"phone\");\n\t}\n\n\tset phone(value: string | null) {\n\t\tthis.setField(\"phone\", value);\n\t}\n\n\tget location(): string | null {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string | null) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget openCloseTimes(): string {\n\t\treturn this.getField(\"openCloseTimes\");\n\t}\n\n\tset openCloseTimes(value: string) {\n\t\tthis.setField(\"openCloseTimes\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn RESTModel.findOneBase(Venue, criteria, true) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, criteria, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, id, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUpload,\n\t\t\t\t{\n\t\t\t\t\t_id: photos\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\", true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\", true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, this.location || \"\", true) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!RESTModel.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\nexport default class Conversation extends RESTModel {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks = new Map();\n\tget events(): ConversationEvent[] {\n\t\treturn this.getField(\"events\") || [];\n\t}\n\n\tset events(value: ConversationEvent[]) {\n\t\tthis.setField(\"events\", value);\n\t}\n\n\tget users(): string[] {\n\t\treturn this.getField(\"users\") || [];\n\t}\n\n\tset users(value: string[]) {\n\t\tthis.setField(\"users\", value);\n\t}\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv = RESTModel.Cache.get(data._id) || null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tRESTModel.Cache.set(conv._id, conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn RESTModel.findByIdBase(Conversation, id, true) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn RESTModel.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, criteria, false) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid() {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string) {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class GooglePlace extends RESTModel {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\") || this.getField(\"place_id\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget details(): string {\n\t\treturn this.getField(\"details\");\n\t}\n\n\tset details(value: string) {\n\t\tthis.setField(\"details\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn RESTModel.findManyBase(GooglePlace, criteria, false) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\nexport default class Notification extends RESTModel {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks = new Map();\n\tprivate changeCallbacks = new Map();\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget label(): string {\n\t\treturn this.getField(\"label\");\n\t}\n\n\tset label(value: string) {\n\t\tthis.setField(\"label\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget actions(): NotificationAction[] {\n\t\treturn this.getField(\"actions\");\n\t}\n\n\tset actions(value: NotificationAction[]) {\n\t\tthis.setField(\"actions\", value);\n\t}\n\n\tget seenByUser(): boolean {\n\t\treturn this.getField(\"seenByUser\");\n\t}\n\n\tset seenByUser(value: boolean) {\n\t\tthis.setField(\"seenByUser\", value);\n\t}\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): () => void {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\treturn Array.from(notes).map((item: any) => new Notification(item));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(\"Notification\", null, true) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn RESTModel.findByIdBase(\"Notification\", id, true) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any) {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => this.changeCallbacks.delete(i);\n\t}\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Page extends RESTModel {\n\tpublic static ModelName: string = \"Page\";\n\n\tget data(): string {\n\t\treturn this.getField(\"data\");\n\t}\n\n\tset data(value: string) {\n\t\tthis.setField(\"data\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget link(): string {\n\t\treturn this.getField(\"link\");\n\t}\n\n\tset link(value: string) {\n\t\tthis.setField(\"link\", value);\n\t}\n\n\tget visits(): number {\n\t\treturn this.getField(\"visits\") || 0;\n\t}\n\n\tset visits(value: number) {\n\t\tthis.setField(\"visits\", value);\n\t}\n\n\tget revisions(): number {\n\t\treturn this.getField(\"revisions\") || 0;\n\t}\n\n\tset revisions(value: number) {\n\t\tthis.setField(\"revisions\", value);\n\t}\n\n\tget hide(): boolean {\n\t\tconst value = this.getField(\"hide\");\n\t\treturn value === null ? true : Boolean(value);\n\t}\n\n\tset hide(value: boolean) {\n\t\tthis.setField(\"hide\", value);\n\t}\n\n\tget blog(): boolean {\n\t\tconst value = this.getField(\"blog\");\n\t\treturn Boolean(value);\n\t}\n\n\tset blog(value: boolean) {\n\t\tthis.setField(\"blog\", value);\n\t}\n\n\tget doc(): boolean {\n\t\tconst value = this.getField(\"doc\");\n\t\treturn Boolean(value);\n\t}\n\n\tset doc(value: boolean) {\n\t\tthis.setField(\"doc\", value);\n\t}\n\n\tget admin(): string {\n\t\treturn this.getField(\"admin\");\n\t}\n\n\tset admin(value: string) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn RESTModel.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn RESTModel.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn RESTModel.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport RESTModel from \"./RESTModel\";\n\nexport default class Post extends RESTModel {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget network(): string {\n\t\treturn this.getField(\"network\");\n\t}\n\n\tset network(value: string) {\n\t\tthis.setField(\"network\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget pageId(): string {\n\t\treturn this.getField(\"pageId\");\n\t}\n\n\tset pageId(value: string) {\n\t\tthis.setField(\"pageId\", value);\n\t}\n\n\tget postText(): string {\n\t\treturn this.getField(\"postText\");\n\t}\n\n\tset postText(value: string) {\n\t\tthis.setField(\"postText\", value);\n\t}\n\n\tget postDate(): string {\n\t\treturn this.getField(\"postDate\");\n\t}\n\n\tset postDate(value: string) {\n\t\tthis.setField(\"postDate\", value);\n\t}\n\n\tget coordinates(): number[] {\n\t\treturn this.getField(\"coordinates\");\n\t}\n\n\tset coordinates(value: number[]) {\n\t\tthis.setField(\"coordinates\", value);\n\t}\n\n\tget error(): string {\n\t\treturn this.getField(\"error\");\n\t}\n\n\tset error(value: string) {\n\t\tthis.setField(\"error\", value);\n\t}\n\n\tget done(): boolean {\n\t\treturn this.getField(\"done\");\n\t}\n\n\tset done(value: boolean) {\n\t\tthis.setField(\"done\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn RESTModel.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn RESTModel.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export default async function ModelNameToModel(name: string) {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).default;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).default;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).default;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).default;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).default;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).default;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).default;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).default;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).default;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).default;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).default;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).default;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).default;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).default;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).default;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport RESTModel from \"./RESTModel\";\n\nexport default class ErrorReport extends RESTModel {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tget version(): string {\n\t\treturn this.getField(\"version\");\n\t}\n\n\tset version(value: string) {\n\t\tthis.setField(\"version\", value);\n\t}\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget stack(): string {\n\t\treturn this.getField(\"stack\");\n\t}\n\n\tset stack(value: string) {\n\t\tthis.setField(\"stack\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget columnNumber(): number {\n\t\treturn this.getField(\"columnNumber\");\n\t}\n\n\tset columnNumber(value: number) {\n\t\tthis.setField(\"columnNumber\", value);\n\t}\n\n\tget lineNumber(): number {\n\t\treturn this.getField(\"lineNumber\");\n\t}\n\n\tset lineNumber(value: number) {\n\t\tthis.setField(\"lineNumber\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null) {\n\t\treturn RESTModel.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport API from \"./API\";\nimport RESTModel from \"./RESTModel\";\n\nexport default class Request extends RESTModel {\n\tpublic static ModelName: string = \"Request\";\n\n\tget to(): string {\n\t\treturn this.getField(\"to\");\n\t}\n\n\tset to(value: string) {\n\t\tthis.setField(\"to\", value);\n\t}\n\n\tget from(): string {\n\t\treturn this.getField(\"from\");\n\t}\n\n\tset from(value: string) {\n\t\tthis.setField(\"from\", value);\n\t}\n\n\tget status(): string {\n\t\treturn this.getField(\"status\");\n\t}\n\n\tset status(value: string) {\n\t\tthis.setField(\"status\", value);\n\t}\n\n\tget options(): string[] {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: string[]) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tget type(): string {\n\t\treturn this.getField(\"type\");\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget userData(): any {\n\t\treturn this.getField(\"userData\");\n\t}\n\n\tset userData(value: any) {\n\t\tthis.setField(\"userData\", value);\n\t}\n\n\tget emailSent(): boolean {\n\t\treturn this.getField(\"emailSent\");\n\t}\n\n\tset emailSent(value: boolean) {\n\t\tthis.setField(\"emailSent\", value);\n\t}\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn RESTModel.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn RESTModel.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { default as GigGizmoPropTypes } from \"./PropTypes\";\nexport { default as API } from \"./API\";\n\n// Models\nexport { default as Band } from \"./Band\";\nexport { default as Conversation } from \"./Conversation\";\nexport { default as ErrorReport } from \"./ErrorReport\";\nexport { default as FacebookAccount } from \"./FacebookAccount\";\nexport { default as Gig } from \"./Gig\";\nexport { default as GooglePlace } from \"./GooglePlace\";\nexport { default as Location } from \"./Location\";\nexport { default as Notification } from \"./Notification\";\nexport { default as Page } from \"./Page\";\nexport { default as Post } from \"./Post\";\nexport { default as Request } from \"./Request\";\nexport { default as RESTModel } from \"./RESTModel\";\nexport { default as TwitterAccount } from \"./TwitterAccount\";\nexport { default as Upload } from \"./Upload\";\nexport { default as User } from \"./User\";\nexport { default as Venue } from \"./Venue\";\nexport { default as ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","import Band from \"./Band\";\nimport Conversation from \"./Conversation\";\nimport ErrorReport from \"./ErrorReport\";\nimport FacebookAccount from \"./FacebookAccount\";\nimport Gig from \"./Gig\";\nimport Location from \"./Location\";\nimport Notification from \"./Notification\";\nimport Page from \"./Page\";\nimport Post from \"./Post\";\nimport TwitterAccount from \"./TwitterAccount\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Venue from \"./Venue\";\n\nexport default {\n\tBand,\n\tConversation,\n\tErrorReport,\n\tFacebookAccount,\n\tGig,\n\tLocation,\n\tNotification,\n\tPage,\n\tPost,\n\tTwitterAccount,\n\tUpload,\n\tUser,\n\tVenue\n};\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","(function() { module.exports = this[\"socket.io-client\"]; }());"],"sourceRoot":""}