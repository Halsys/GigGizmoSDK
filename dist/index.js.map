{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/Model.ts","webpack:///./src/API.ts","webpack:///./node_modules/ts-transformer-keys/index.js","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","ModelClass","_API__WEBPACK_IMPORTED_MODULE_0__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_1__","[object Object]","propNames","props","this","expiration","Date","getTime","self","changes","document","forEach","undefined","set","dateModified","toISOString","configurable","id","_id","Cache","has","cache","data","isValidId","delete","ModelMaybe","Error","Model","modelName","getModelName","ModelName","constructor","pattern","RegExp","test","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","e","CacheSet","isArray","items","push","map","itemData","item","isValid","toObject","JSON","stringify","isNaN","parse","dateCreated","superError","anyErrors","assign","response","clearChanges","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","console","error","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_API__WEBPACK_IMPORTED_MODULE_1__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_4__","_Gig__WEBPACK_IMPORTED_MODULE_5__","_Model__WEBPACK_IMPORTED_MODULE_6__","_Notification__WEBPACK_IMPORTED_MODULE_7__","_Post__WEBPACK_IMPORTED_MODULE_8__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_9__","_Upload__WEBPACK_IMPORTED_MODULE_10__","_Venue__WEBPACK_IMPORTED_MODULE_11__","super","fullName","firstName","middleName","lastName","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","email","password","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","icon","twitter","facebook","connections","findById","blocked","maybePassword","lowercaseFirstName","lowercaseLastName","includes","confirmPassword","validatePassword","agreement","EmailRegex","Upload","_Model__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","owners","userId","find","description","fileData","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","hash","bytes","FacebookAccount","_Model__WEBPACK_IMPORTED_MODULE_2__","_User__WEBPACK_IMPORTED_MODULE_3__","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","profile","accountId","Gig","_Location__WEBPACK_IMPORTED_MODULE_3__","_Model__WEBPACK_IMPORTED_MODULE_4__","_Venue__WEBPACK_IMPORTED_MODULE_5__","bandId","venueId","gigData","band","venue","times","filtered","filter","time","dayDate","startTime","stopTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","bands","TwitterAccount","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_1__","_Gig__WEBPACK_IMPORTED_MODULE_2__","_Model__WEBPACK_IMPORTED_MODULE_3__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","photos","findByBand","cityPlaceID","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_2__","placeId","address","utcOffset","point","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_5__","_Upload__WEBPACK_IMPORTED_MODULE_6__","_User__WEBPACK_IMPORTED_MODULE_7__","findByVenue","owner","userIsOwner","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","callbackId","conv","cb","message","events","dateTimePosted","save","maybeType","type","changeCallbacks","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","label","body","timestamp","requestPermission","postDate","postText","network","link","page","title","admin","to","gig","gigId","option","request","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","cityName","facebookPageId","facebookPageName","facebookPageToken","google","metadata","website","users","columnNumber","fileName","lineNumber","stack","version","userAccessToken","userRefreshToken","bandOwnerAccepted","toBeAnnounced","venueOwnerAccepted","actions","seenByUser","blog","doc","hide","revisions","visits","coordinates","done","accessToken","tokenSecret","active","attempts","bandManager","betaFeatureUser","birthday","country","emailVerified","lastLogin","lastLoginIP","payment","paypal","sendAnonymousReports","sendEmails","sendErrorReports","sendPromotions","useCookies","venueManager","metaData","openCloseTimes","closingTime","openingTime","phone","_PropTypes__WEBPACK_IMPORTED_MODULE_0__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Notification__WEBPACK_IMPORTED_MODULE_9__","_Page__WEBPACK_IMPORTED_MODULE_10__","_Post__WEBPACK_IMPORTED_MODULE_11__","_Request__WEBPACK_IMPORTED_MODULE_12__","_Model__WEBPACK_IMPORTED_MODULE_13__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_14__","_Upload__WEBPACK_IMPORTED_MODULE_15__","_User__WEBPACK_IMPORTED_MODULE_16__","_Venue__WEBPACK_IMPORTED_MODULE_17__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_18__","GigGizmoAPI","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"0DACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,sBCjEAhC,EAAAD,QAAmBF,EAAQ,GAARA,iCCjBnBA,EAAAU,EAAA0B,EAAA,sBAAAC,IAAA,IAAAC,EAAAtC,EAAA,GAAAuC,EAAAvC,EAAA,IAUO,MAAMqC,EAoNZG,YAAmBC,EAA4CC,GAjMvDC,KAAAC,YACP,IAAKC,MACJC,UACD,KA+LA,MAAMC,EAAOJ,KACbA,KAAKK,QAAU,IAAIlC,OACnB6B,KAAKM,SAAYP,GAAgB,IAAI5B,OACrC2B,EAAUS,QAASvB,IAClBb,OAAOC,eAAegC,EAAMpB,EAAK,CAChCV,IAAK,KACJ,MAAMI,EAAQ0B,EAAKC,QAAQrB,GAC3B,YAAcwB,IAAV9B,EAA8BA,EAC3B0B,EAAKE,SAAStB,IAEtByB,IAAM/B,IACD0B,EAAKE,SAAStB,KAASN,IAC1B0B,EAAKC,QAAQrB,GAAON,EACpB0B,EAAKC,QAAQK,cAAe,IAAKR,MAAQS,gBAG3CtC,YAAY,EACZuC,cAAc,MA9NjBC,SACC,OAAOb,KAAKK,QAAQS,KAAOd,KAAKc,IAEjCD,OAAcnC,GACTsB,KAAKc,MAAQpC,GAASA,IACzBsB,KAAKK,QAAQS,IAAMpC,EACnBsB,KAAKK,QAAQK,cAAe,IAAKR,MAAQS,eAcpCd,gBAAgDgB,GACtD,GAAkB,iBAAPA,GAAmBnB,EAAWqB,MAAMC,IAAIH,GAAK,CACvD,MAAMI,EAA4BvB,EAAWqB,MAAMzC,IAAIuC,GACvD,GAAII,GAAS,IAAIf,KAAKe,EAAMhB,YAAc,IAAIC,KAC7C,OAAOe,EAGT,OAAO,KAGDpB,gBAAgDqB,GACtD,OAAIA,EAAKJ,KAAOpB,EAAWyB,UAAUD,EAAKJ,MACzCpB,EAAWqB,MAAMN,IAAIS,EAAKJ,IAAKI,GACxBA,GAEDA,EAGDrB,mBAAmBgB,GACzBnB,EAAWqB,MAAMK,OAAOP,GAGlBhB,gCAAgCwB,GAItC,GAAmB,OAAfA,EACH,MAAM,IAAIC,MAAM,+BAGjB,IAAIC,EAAa,KACbC,EAA2B,KAC/B,GAA0B,iBAAfH,EACVE,QAAcpD,OAAAyB,EAAA,EAAAzB,CAAiBkD,GAC/BG,EAAYH,MACN,IAA0B,mBAAfA,EAIjB,MAAM,IAAIC,iEAAiED,KAH3EE,EAAQF,EACRG,EAAY9B,EAAW+B,aAAaJ,GAKrC,GAAyB,iBAAdG,EACV,MAAM,IAAIF,iCAAiCC,KAG5C,GAAqB,mBAAVA,EACV,MAAM,IAAID,qBAAqBE,iCAGhC,MAAO,CACND,QACAC,aAIK3B,oBAAoB0B,GAC1B,OAAIA,GAASA,EAAMG,UAAoBH,EAAMG,UACzCH,GAASA,EAAMI,aAAiBJ,EAAMI,YAA6B,UAC9DJ,EAAMI,YAAoBD,UAE5B,GAGD7B,iBAAiBgB,GACvB,MAAMe,EAAUC,OAAO,sCAAuC,KAC9D,MACe,iBAAPhB,GAAmBe,EAAQE,KAAKjB,GAIlChB,0BAEJwB,EAAiBR,GAEnB,GAAInB,EAAWyB,UAAUN,GAAK,CAC7B,MAAMI,EAAQvB,EAAWqC,SAASlB,GAClC,GAAII,EACH,OAAOA,EACD,CACN,IAAIC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAgBjE,GAdI1B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,oBAC1BhB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,IAClC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,aAAsBX,EAAIuB,IAGhDC,KAGEnB,IACJA,QAAavB,EAAA,EAAI/B,KAAK,cAAe4D,KAAaX,IAAM,OAErDK,GAAQxB,EAAWyB,UAAUD,EAAKJ,KAGrC,OAFAI,EAAO,IAAIK,EAAML,GACjBxB,EAAWqB,MAAMN,IAAIS,EAAKJ,IAAKI,GACxBA,GAIV,OAAO,KAGDrB,yBAEJwB,EAAiBqB,EAAgB,IAGnC,GADiB,OAAbA,IAAqBA,EAAW,IACa,IAA7CC,MAAMC,KAAKzE,OAAO0E,KAAKH,IAAWI,QAAwC,iBAAjBJ,EAAS5B,IAAkB,CACvF,MAAMD,EAAK6B,EAAS5B,IACdG,EAAQvB,EAAWqC,SAASlB,GAClC,GAAII,EACH,OAAOA,EAGT,IAAIC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAC3D0B,UAAgBvB,YACtB,GAAI7B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,kBAAmB,CAC7C,MAAMM,QAAoB7C,EAAA,EAAI2C,YAC1BE,IACHtB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,KAClC,IACCG,EAAOC,KAAKM,EAAOL,EAAUN,GAC5B,MAAOY,GACRX,EAAOW,OAMX,OADK9B,IAAQA,QAAavB,EAAA,EAAI/B,KAAK,MAAOmF,EAAOL,IAC7CxB,GAAQxB,EAAWyB,UAAUD,EAAKJ,MACrCI,EAAO,IAAIK,EAAML,GACjBxB,EAAWuD,SAAS/B,GACbA,GAED,KAGDrB,0BAEJwB,EAAiBqB,EAAgB,IAGnC,GADiB,OAAbA,IAAqBA,EAAW,IACa,IAA7CC,MAAMC,KAAKzE,OAAO0E,KAAKH,IAAWI,QAAgBH,MAAMO,QAASR,EAAS5B,KAAO4B,EAAS7B,IAAM,CACnG,MAAMsC,EAAgC,GAOtC,IANCT,EAAS5B,KAAO4B,EAAS7B,IAAIN,QAASM,IACtC,MAAMI,EAAQvB,EAAWqC,SAASlB,GAC9BI,GACHkC,EAAMC,KAAKnC,KAGTkC,EAAML,UAAYJ,EAAS5B,KAAO4B,EAAS7B,IAAO,OAAOsC,EAE9D,IAAIjC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAC3D0B,UAAgBvB,aActB,OAbI7B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,oBAC1BhB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,IAClC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAKM,EAAOL,EAAUN,IAG/BC,KAGHK,EAAWA,GAAY,GAClBxB,IAAQA,QAAavB,EAAA,EAAI/B,KAAK,MAAOmF,EAAOL,IAC7CC,MAAMO,QAAQhC,GACVA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIhC,EAAM+B,GAEvB,OADA5D,EAAWuD,SAASM,GACbA,IAGF,GA0BD1D,eACNG,KAAKK,QAAU,IAAIlC,OAGb0B,WACN,MAAMV,EAASa,KAAKwD,UAAY,IAAKxD,KAAKM,YAAaN,KAAKK,SAAY,KAMxE,MALsB,iBAAXlB,GAAuBA,QACP,IAAfA,EAAO2B,MACjB3B,EAAO2B,OAAS3B,EAAO2B,OAGlB3B,EAGDU,WACN,MAAMV,EAASa,KAAKyD,WACpB,OAAOC,KAAKC,UAAUxE,GAGhBU,YACN,YAAiC,IAAtBG,KAAKM,SAASQ,IACjB,IAAIQ,MAAM,oBAGdtB,KAAKM,SAASQ,MAAQpB,EAAWyB,UAAUnB,KAAKM,SAASQ,KACrD,IAAIQ,qBAAqBtB,KAAKM,SAASQ,YAGL,IAA/Bd,KAAKM,SAASI,aACjB,IAAIY,MAAM,6BAGdtB,KAAKM,SAASI,cACjBkD,MAAM1D,KAAK2D,MAAM7D,KAAKM,SAASI,eACxB,IAAIY,+BAA+BtB,KAAKM,SAASI,qBAGhB,IAA9BV,KAAKM,SAASwD,YACjB,IAAIxC,MAAM,4BAGdtB,KAAKM,SAASwD,aACjBF,MAAM1D,KAAK2D,MAAM7D,KAAKM,SAASwD,cACxB,IAAIxC,8BAA8BtB,KAAKM,SAASwD,eAGpD9D,KAAKK,QAAQS,MACfpB,EAAWyB,UAAUnB,KAAKK,QAAQS,KAC5B,IAAIQ,qBAAqBtB,KAAKK,QAAQS,OAG1Cd,KAAKK,QAAQK,cAAgBkD,MAAM1D,KAAK2D,MAAM7D,KAAKK,QAAQK,eACvD,IAAIY,+BAA+BtB,KAAKK,QAAQK,gBAGpDV,KAAKK,QAAQyD,aAAeF,MAAM1D,KAAK2D,MAAM7D,KAAKK,QAAQyD,cACtD,IAAIxC,8BAA8BtB,KAAKK,QAAQyD,eAGhD,KAGDjE,UACN,IACC,MAAMkE,EAAa/D,KAAKgE,YACxB,GAAID,EAAc,MAAMA,EACvB,MAAOf,GACR,OAAO,EAER,OAAO,EAGDnD,OAAOqB,EAAe,IAE5B,OADA/C,OAAO8F,OAAOjE,KAAKK,QAASa,GACrBlB,KAGDH,aACN,MAAM2B,EAAaxB,KAAK2B,YAAoBD,UAC5C,IAAIwC,EAAgB,KACpB,MAAMrD,EAAKb,KAAKc,KAAO,KACjBI,EAAOlB,KAAKK,QAkClB,GAjCAlC,OAAO0E,KAAK7C,KAAKK,SAASE,QAASvB,IAC9BkC,EAAKlC,KAASgB,KAAKhB,WAAekC,EAAKlC,KAE5CkC,EAAKJ,OAASd,KAAKK,QAAQS,KAAOd,KAAKc,KAAO,QAG5CoD,EAFEvE,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,kBACtBxC,EAAWyB,UAAUN,SACP,IAAIsB,QAAQ,CAACC,EAASC,IACtC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,WAAoBN,EAAMkB,IAGhDC,UAGe,IAAIF,QAAQ,CAACC,EAASC,IACtC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,WAAoBN,EAAMkB,IAGhDC,IAIC3C,EAAWyB,UAAUN,SACPlB,EAAA,EAAI/B,KAAK,cAAe4D,KAAaX,IAAMK,SAE3CvB,EAAA,EAAI/B,KAAK,eAAgB4D,KAAcN,KAG1CgD,EAASpD,IAIxB,OAHA3C,OAAO8F,OAAOjE,KAAMkE,GACpBlE,KAAKmE,eACLzE,EAAWuD,SAASjD,MACbA,KAER,MAAM,IAAIsB,kBAAkB4C,KAGtBrE,eACN,MAAMgB,EAAKb,KAAKc,KAAO,GACvB,GAAIpB,EAAWyB,UAAUN,GAAK,CAC7B,MAAMW,EAAaxB,KAAK2B,YAAoBD,UAiB5C,OAhBI/B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,wBACpB,IAAIC,QAAQ,CAACC,EAASC,IAC3B1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,WAAoBX,EAAKuD,GAC5ChC,EAAQgC,KAGX/B,UAGI1C,EAAA,EAAI/B,KAAK,iBAAkB4D,KAAaX,IAAM,MAGrDnB,EAAW2E,YAAYxD,GAChBb,KAER,MAAM,IAAIsB,qBAAqBT,MA5XlBnB,EAAAgC,UAAoB,YACpBhC,EAAAqB,MAAsC,IAAIuD,kCCZzDjH,EAAAU,EAAA0B,EAAA,sBAAA8E,IAAA,IAAAC,EAAAnH,EAAA,IAAAoH,EAAApH,EAAA6B,EAAAsF,GAAAE,EAAArH,EAAA,IAAAsH,EAAAtH,EAAA,IAAAuH,EAAAvH,EAAA6B,EAAAyF,GAAAE,EAAAxH,EAAA,IAQO,MAAekH,EA4RrB1E,cACC,MAAM,IAAIyB,MAAM,uBA5QVwD,qBACN,IAAKP,EAAIQ,UAAYR,EAAIS,OAAQ,CAChC,IAAItG,EAAuB,KACvB6F,EAAIU,wBACPvG,EAAQwG,aAAaC,QAAQ,YAE9BZ,EAAIQ,SAAW,EAAU,IAAI7E,KAAKxB,GAAS,IAAIwB,KAEhD,OAAOqE,EAAIQ,SAELD,mBAAmBpG,GACzB6F,EAAIQ,SAAWrG,EACD,OAAVA,GAAkB6F,EAAIU,sBACzBC,aAAaE,WAAW,WACdb,EAAIU,uBAAyBV,EAAIQ,UAC3CG,aAAaG,QAAQ,UAAWd,EAAIQ,SAASpE,eAGxC2E,mBACN,MAAMC,EAAU,IAAIrF,KACpB,GAAIqE,EAAIO,SAAWS,EAAUhB,EAAIO,QAKhC,OAJAP,EAAIS,OAAS,KACTT,EAAIU,uBACPC,aAAaE,WAAW,SAElB,KAER,IAAKb,EAAIS,QAAUT,EAAIU,sBAAuB,CAE7C,MAAMvG,EAAQwG,aAAaC,QAAQ,SAC/BzG,GAAmB,KAAVA,IACZ6F,EAAIS,OAAStB,KAAKG,MAAMnF,IAW1B,OARK6F,EAAIS,QAA8B,oBAAb1E,UAA4BA,SAASkF,SAE9DjB,EAAIS,OAAS7G,OAAAuG,EAAA,MAAAvG,CAAYmC,SAASkF,QAAQ,oBAEvCjB,EAAIS,QAAUT,EAAIU,uBAErBC,aAAaG,QAAQ,QAAS3B,KAAKC,UAAUY,EAAIS,SAE3CT,EAAIS,OAELM,iBAAiB5G,GACvB,GAAqB,iBAAVA,GAAuC,MAAjBA,EAAMoE,QAA4B,OAAVpE,EACxD,MAAM,IAAI4C,6BAA6B5C,KAElB,iBAAVA,GAAuC,IAAjBA,EAAMoE,QAClCyB,EAAIU,uBACPC,aAAaG,QAAQ,QAAS3B,KAAKC,UAAUjF,IAE9C6F,EAAIS,OAAStG,IAET6F,EAAIU,uBACPC,aAAaE,WAAW,SAEzBb,EAAIS,OAAS,MAEU,oBAAb1E,WACVA,SAASkF,OAASrH,OAAAuG,EAAA,UAAAvG,CAAgB,kBAAmBoG,EAAIS,QAAU,GAAI,CACtES,KAAM,IACNC,SAAU,YAMPC,qBACN,IAAIC,EAAM,GAYV,OAXIrB,EAAIsB,OACPD,GAAO,WAEPA,GAAO,UAERA,MAAUrB,EAAIuB,WACG,KAAbvB,EAAIwB,MAAgBxB,EAAIsB,OAEE,MAAnBtB,EAAIyB,YAAsBzB,EAAIsB,SACxCD,OAAWrB,EAAIyB,cAFfJ,OAAWrB,EAAIwB,OAITH,EAGDK,8BACN,IAAIL,EAAM,GAYV,OAXIrB,EAAIsB,OACPD,GAAO,SAEPA,GAAO,QAERA,MAAUrB,EAAIuB,WACG,KAAbvB,EAAIwB,MAAgBxB,EAAIsB,OAEE,MAAnBtB,EAAIyB,YAAsBzB,EAAIsB,SACxCD,OAAWrB,EAAIyB,cAFfJ,OAAWrB,EAAIwB,OAITH,EAGD/F,6BAA6BqB,GACnC,IACC,GACiB,iBAATA,GAAqBA,GACR,iBAAbA,EAAKJ,KACc,iBAAnBI,EAAKQ,UAEZ,OAAO,UAAWvD,OAAA0G,EAAA,EAAA1G,CAAiB+C,EAAKQ,YAAYR,GAEpD,MAAO8B,GACRkD,QAAQC,MAAMnD,GAGf,IACC,GACCL,MAAMO,QAAQhC,IACdA,EAAK4B,OAAS,GACd5B,EAAKkF,MAAOC,GACX1D,MAAMO,QAAQmD,IACC,IAAfA,EAAIvD,QACc,iBAAXuD,EAAI,IACO,iBAAXA,EAAI,IAAmBA,EAAI,IACZ,iBAAfA,EAAI,GAAGvF,KACc,iBAArBuF,EAAI,GAAG3E,WACX,CACJ,MAAM4E,EAA4B,IAAIhC,IAChCiC,EACLrF,EAAKmC,IAAImD,MAAOH,IACf,MAAOrH,EAAKN,GAAS2H,EACrB,IAAI9C,EAAY,KACK,iBAAV7E,GAAsBA,IAChC6E,QAAagB,EAAIkC,gBAAgB/H,IAElC4H,EAAQ7F,IAAIzB,EAAKuE,KAGnB,aADMpB,QAAQuE,IAAIH,GACXD,GAEP,MAAOtD,GACRkD,QAAQC,MAAMnD,GAGf,IACC,GACCL,MAAMO,QAAQhC,IACdA,EAAK4B,OAAS,GACd5B,EAAKkF,MAAO7C,GACK,iBAATA,GAAqBA,GACR,iBAAbA,EAAKzC,KACc,iBAAnByC,EAAK7B,WAEb,OAAOS,QAAQuE,IACdxF,EAAKmC,IAAKE,GACFgB,EAAIkC,gBAAgBlD,KAI7B,MAAOP,GACRkD,QAAQC,MAAMnD,GAGf,IACC,GACiB,iBAAT9B,GAAqBA,IAASyB,MAAMO,QAAQhC,GAClD,CACD,MAAM/B,EAAS,GACToH,EAAiC,GAWvC,OAVApI,OAAOwI,QAAQzF,GAAMX,QAAQ,EAAEvB,EAAKN,MACd,iBAAVA,GAAsBA,EAChC6F,EAAIkC,gBAAgB/H,GAAO6D,KAAMqE,IAChCzH,EAAOH,GAAO4H,IAGfzH,EAAOH,GAAON,UAGVyD,QAAQuE,IAAIH,GACXpH,GAEP,MAAO6D,GACRkD,QAAQC,MAAMnD,GAGf,OAAO9B,EAGDrB,kBAAkBgH,EAAgB9D,EAAe7B,GACvD,MAGM4F,EAAmC,CACxC5F,KAAM,KACN6F,QALe,CACfC,oBAAqBzC,EAAIe,MAAQf,EAAIS,OAAS,MAK9C6B,OAAQA,EAAOI,cACfC,OAAQ,KACRC,aAAc,OACdvB,OAAQrB,EAAIoB,UAAU5C,IACtBqE,eAAgB,kBAChBC,eAAgB,qBAUjB,GARInG,IACY,SAAX2F,GAAgC,QAAXA,EACxBC,EAAaI,OAAShG,EAEtB4F,EAAa5F,KAAOA,IAIlBqD,EAAI+C,MAeP,MAAM,IAAIhG,MAAM,8BAdhB,IACC,MAAM4C,QAAiBK,EAAI+C,MAAMR,GACjC,GAAI5C,EAAShD,KACZ,OAAOgD,EAAShD,KACV,GAAIgD,EAASqD,WACnB,OAAOrD,EAASqD,WACV,GAAIrD,EAASsD,OACnB,OAAO,KAEP,MAAOxE,GAER,OADAkD,QAAQC,MAAMnD,GACP,MAOHnD,yBACN,MAAM4H,EAActB,IACfA,GACHD,QAAQC,MAAMA,GAEX5B,EAAImD,WACPnD,EAAImD,UAAUC,QAGVC,EAAU,MACVrD,EAAImD,WAAanD,EAAIsD,WACzBtD,EAAImD,UAAYnD,EAAIsD,WACpBtD,EAAImD,UAAUI,GAAG,kBAAmBL,GACpClD,EAAImD,UAAUI,GAAG,gBAAiBL,GAClClD,EAAImD,UAAUI,GAAG,aAAcL,GAC/BlD,EAAImD,UAAUI,GAAG,QAASL,GAC1BlD,EAAImD,UAAUC,QAERpD,EAAImD,WAEZ,GAAInD,EAAIsD,SAAU,CACjB,GAAwB,oBAAbvH,SAcV,OAAOsH,IAbP,OAAQtH,SAASyH,YAChB,IAAK,UAIJ,aAHM,IAAI5F,QAASC,IAClB9B,SAAS0H,iBAAiB,mBAAoB5F,KAExCwF,IACR,IAAK,cACL,IAAK,WACJ,OAAOA,IACR,QACC,MAAM,IAAItG,gCAAgChB,SAASyH,eAMvD,OAAO,MAzRMxD,EAAAsD,SAAwCjD,EAAAqD,EACxC1D,EAAA+C,MAA4B7C,EAAAwD,EACnB1D,EAAA2D,wBACH,oBAAZC,QACe5D,EAAAU,sBACJ,oBAAXmD,aAAyD,IAAxBA,OAAOlD,aACzBX,EAAArC,mBAAoB,EAC7BqC,EAAA8D,KAAM,EACN9D,EAAAsB,QAAUtB,EAAI8D,IACd9D,EAAAwB,KAAO,GACPxB,EAAAyB,WAAa,IACbzB,EAAAuB,SAAW,eACVvB,EAAAS,OAAwB,KACxBT,EAAAQ,SAAwB,KACzBR,EAAAtC,aAAc,EACbsC,EAAAmD,UAA0C,UAiRjC,IAAdnD,EAAI+C,OAAyB/C,EAAI+C,QAC3C/C,EAAI+C,MAAMgB,SAASC,iBAAkB,iCCzStCpK,OAAAC,eAAAb,EAAA,cAA8CmB,OAAA,kCCD9CrB,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA+I,IAAAnL,EAAA,OAAAoL,EAAApL,EAAA,GAAAqL,EAAArL,EAAA,GAAAsL,EAAAtL,EAAA,IAAAuL,EAAAvL,EAAA,GAAAwL,EAAAxL,EAAA,GAAAyL,EAAAzL,EAAA,GAAA0L,EAAA1L,EAAA,IAAA2L,EAAA3L,EAAA,IAAA4L,EAAA5L,EAAA,GAAA6L,EAAA7L,EAAA,GAAA8L,EAAA9L,EAAA,IA+DO,MAAMmL,UAAaM,EAAA,EAuXzBjJ,YAAmBE,GAClBqJ,MAAK,ofAAgBrJ,GAtXtBsJ,eACC,SAAUrJ,KAAKsJ,WAAa,MAAMtJ,KAAKuJ,YAAc,MAAMvJ,KAAKwJ,UAC/D,KAUK3J,mBAAmBgB,EAAY4I,GACrC,OAAOhB,EAAA,EAAI7K,KAAK,MAAO,mBAAoB,CAC1CiD,KACA4I,WAIK5J,+BACN,OAAO4I,EAAA,EAAI7K,KAAK,OAAQ,mBAAoB,MAGtCiC,6BACN,OAAOiJ,EAAA,EAAWY,aAAaf,EAAA,aAAc,MAIvC9I,6BACN,OAAOiJ,EAAA,EAAWY,aAAaX,EAAA,aAAc,MAIvClJ,qBACN,OAAOiJ,EAAA,EAAWY,aAAaV,EAAA,KAAM,MAI/BnJ,qBACN,OAAOiJ,EAAA,EAAWY,aAAahB,EAAA,KAAM,MAI/B7I,sBACN,OAAOiJ,EAAA,EAAWY,aAAaP,EAAA,MAAO,MAIhCtJ,oBACN,OAAOiJ,EAAA,EAAWY,aAAab,EAAA,IAAK,MAI9BhJ,uBACN,OAAOiJ,EAAA,EAAWY,aAAaR,EAAA,OAAQ,MAIjCrJ,yBAAyB8J,GAC/B,OAAO,IAAIxH,QAAQ,CAACC,EAASC,KACf,KAATsH,EACHvH,IAEAqG,EAAA,EAAI7K,KAAK,MAAO,iCAAkC,CAAE+L,SAAQpH,KAC3DH,EACAC,KAMGxC,cACN+J,EACApI,EAA2B,KAC3BqI,EAAe,EACfC,EAAgBC,OAAOC,mBAEvB,OAAO,IAAI7H,QACV,CAACC,EACAC,KACD,GAAU,KAANuH,QAAkBpJ,IAANoJ,EACfxH,EAAQ,QACF,CACN,MAAMlB,EAKF,CACH4I,WAAOtJ,EACPyJ,WAAOzJ,EACPoJ,OAAGpJ,EACHqJ,UAAMrJ,GAEPU,EAAK0I,EAAIA,EACS,OAAdpI,GAAoC,SAAdA,IACzBN,EAAK+I,MAAQzI,GAGD,IAATqI,GAAcE,OAAOG,SAASH,OAAOF,MACxC3I,EAAK2I,KAAOE,OAAOF,IAGhBE,OAAOG,SAASH,OAAOD,MAC1B5I,EAAK4I,MAAQC,OAAOD,IAGrB,MAAMK,EAAUC,IACf,MAAMC,EAAQD,EAAQC,MACjBA,GAAShI,EAAOgI,GACrB5B,EAAA,EAAIhC,gBAAgB4D,GAAO9H,KAAKH,EAASC,IAEtCoG,EAAA,EAAIxG,aAAewG,EAAA,EAAIvG,kBAC1BuG,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,kBAAmBvB,EAAMiJ,IAGvC9H,GAEDoG,EAAA,EAAI7K,KAAK,MAAO,kBAAmBsD,GAAMqB,KAAK4H,EAAQ9H,MAMnDxC,gBAAgB6C,GACtB,OAAOoG,EAAA,EAAWY,aAAalB,EAAM9F,GAG/B7C,eAAe6C,GACrB,OAAOoG,EAAA,EAAWwB,YAAY9B,EAAM9F,GAG9B7C,gBAAgB0K,GAEtB,MAAM1J,EAAKX,KAAKsK,MAEhB,OADAhC,EAAKiC,UAAUhK,IAAII,EAAI0J,GAChB,KACN/B,EAAKiC,UAAUrJ,OAAOP,IAIjBhB,qBAAqBqB,GAC3B,IACqB,iBAATA,GAAqBA,GAC/BsH,EAAKkC,QAAU,IAAIlC,EAAKtH,GACpBuH,EAAA,EAAIP,yBACPyC,eAAetF,QAAQ,OAAQ3B,KAAKC,UAAUzC,IAE/CsH,EAAKiC,UAAUlK,QAASgK,GAAkBA,EAAS/B,EAAKkC,YAExDlC,EAAKkC,QAAU,KACfjC,EAAA,EAAInD,MAAQ,KACZmD,EAAA,EAAI3D,QAAU,KACV2D,EAAA,EAAIP,yBAA2ByC,eAAevF,WAAW,QAC7DoD,EAAKiC,UAAUlK,QAASgK,GAAkBA,EAAS,QAEnD,MAAOvH,GACRkD,QAAQC,MAAMnD,GAEf,OAAOwF,EAAKkC,QAGN7K,qBAAqB+K,GAC3B,IAAI1J,EAAO,KACX,MAAMqE,EAAU,IAAIrF,KACpB,IAAK0K,GAASnC,EAAA,EAAI3D,SAAWS,EAAUkD,EAAA,EAAI3D,QAAS,CACnD,GAAqB,OAAjB0D,EAAKkC,QAER,OAAOlC,EAAKkC,QACN,GAAIjC,EAAA,EAAIP,wBAAyB,CAEvC,IACC,MAAM2C,EAAQF,eAAexF,QAAQ,SAAW,GAChDjE,EAAOwC,KAAKG,MAAMgH,GACjB,MAAO7H,GACR9B,EAAO,GAER,GAAIA,EAAQ,OAAOsH,EAAKsC,QAAQ5J,IAelC,OAVCA,EADGuH,EAAA,EAAIxG,aAAewG,EAAA,EAAIvG,wBACb,IAAIC,QAAQ,CAACC,EAASC,KAClCoG,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,qBAAsBL,IAGpCC,WAEmBoG,EAAA,EAAI7K,KAAK,MAAO,YAAa,OAChC4K,EAAKsC,QAAQ5J,GACzBsH,EAAKsC,QAAQ,MAGdjL,gBAAgBgB,GACtB,OAAOiI,EAAA,EAAWiC,aAAavC,EAAM3H,GAG/BhB,yBACNuI,OAAO4C,SAASC,QAAUxC,EAAA,EAAI9C,4BAGxB9F,uBACNuI,OAAO4C,SAASC,QAAUxC,EAAA,EAAI9C,6BAGxB9F,qBACNuI,OAAO4C,SAASC,QAAUxC,EAAA,EAAI9C,0BAGxB9F,uBAAuBqL,EAAeC,GAC5C,GAAKD,GAAmB,KAAVA,EAEP,IAAKC,GAAyB,KAAbA,EAEjB,CACN,IAAIjH,EAAW,KAuBf,IArBCA,EADGuE,EAAA,EAAIxG,aAAewG,EAAA,EAAIvG,wBACT,IAAIC,QAAQ,CAACC,EAASC,KACtCoG,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KACN,mBAAoB,CACnByI,QACAC,YAED/I,IAGHC,WAGeoG,EAAA,EAAI7K,KAAK,OAAQ,mBAAoB,CACrDsN,QACAC,eAIcjH,EAASkH,MAAQlH,EAASoB,OAASpB,EAASY,QAG3D,OAFA2D,EAAA,EAAI3D,QAAU,IAAI5E,KAAKgE,EAASY,SAChC2D,EAAA,EAAInD,MAAQpB,EAASoB,MACdkD,EAAKsC,QAAQ5G,EAASkH,MACrB,MAAM,IAAI9J,MAAM,gBA7BzB,MAAM,IAAIA,MAAM,eAFhB,MAAM,IAAIA,MAAM,YAmCXzB,0BACF4I,EAAA,EAAIxG,aAAewG,EAAA,EAAIvG,wBACpB,IAAIC,QAAQ,CAACC,EAASC,KAC3BoG,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,oBAAqB,KAAML,IAGzCC,WAGIoG,EAAA,EAAI7K,KAAK,OAAQ,oBAAqB,MAE7C,MAAMwN,QAAa5C,EAAKsC,QAAQ,MAChC,GAAIM,GAAQA,EAAK5H,UAChB,MAAM,IAAIlC,SAASoC,KAAKC,UAAUyH,mCAC1B,OAAOA,EAGVvL,8BAA8BqL,GACpC,OAAOzC,EAAA,EAAI7K,KAAK,OAAQ,cAAe,CAAEsN,UAGnCrL,oBAAoBwL,GAC1B,OAAO,IAAIlJ,QAAQ,CAACC,EAASC,KAC5B,IAAIgJ,GAAgC,iBAAbA,EA8Dd,OAAOhJ,EAAO,IAAIf,MAAM,+BA7DhC,IAAI+J,EAASH,MAUJ,OAAO7I,EAAO,IAAIf,MAAM,sBAHhC,GAA0C,IAN/B,IAAIO,OACd,CAAC,uBACA,iCACA,0BACA,0BAA4ByJ,KAAK,IAClC,KACM9M,OAAO+M,QAAQF,EAASH,OAC9B,OAAO7I,EAAO,IAAIf,MAAM,0BAG1B,IAAI+J,EAASF,SAiCJ,OAAO9I,EAAO,IAAIf,MAAM,yBAjCV,CACtB,MAAMkK,EAAa,iBACbC,EAAa,SACbC,EAAoBL,EAASF,SAASlE,cAC5C,GAA0B,KAAtBoE,EAASF,SACZ,OAAO9I,EAAO,IAAIf,MAAM,yBAClB,GAAI+J,EAASF,SAASrI,OAAS,EACrC,OAAOT,EAAO,IAAIf,MAAM,0BAClB,GAAI+J,EAASF,SAASrI,OAAS,IACrC,OAAOT,EAAO,IAAIf,MAAM,yBAClB,IAAKkK,EAAW1J,KAAKuJ,EAASF,UACpC,OAAO9I,EACN,IAAIf,MAAM,kDAEL,IAAKmK,EAAW3J,KAAKuJ,EAASF,UACpC,OAAO9I,EACN,IAAIf,MAAM,kDAEL,GACN+J,EAAS/B,WACqB,IAA9B+B,EAAS/B,UAAUxG,SAC8C,IAAjE4I,EAAkBC,QAAQN,EAAS/B,UAAUrC,eAE7C,OAAO5E,EACN,IAAIf,MAAM,6CAEL,GACN+J,EAAS7B,UACoB,IAA7B6B,EAAS7B,SAAS1G,SAC8C,IAAhE4I,EAAkBC,QAAQN,EAAS7B,SAASvC,eAE5C,OAAO5E,EAAO,IAAIf,MAAM,4CAI1B,OAAI+J,EAAS/B,UACsB,IAA9B+B,EAAS/B,UAAUxG,OAIPT,EAAO,IAAIf,MAAM,2BAH5B+J,EAAS/B,UAAU,KAAO+B,EAAS/B,UAAU,GAAGrC,cAC5C5E,EAAO,IAAIf,MAAM,iCAKvB+J,EAAS7B,SACqB,IAA7B6B,EAAS7B,SAAS1G,OAINT,EAAO,IAAIf,MAAM,0BAH5B+J,EAAS7B,SAAS,KAAO6B,EAAS7B,SAAS,GAAGvC,cAC1C5E,EAAO,IAAIf,MAAM,gCAMxBmH,EAAA,EAAIxG,aAAewG,EAAA,EAAIvG,kBACnB,IAAIC,QAAQ,CAACiC,EAAKwH,KACxBnD,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,mBAAoB4I,EAAUjH,IAG5CwH,KAGInD,EAAA,EAAI7K,KAAK,OAAQ,YAAayN,GAAU9I,KAC7CrB,IACIA,EACHsH,EAAKsC,QAAQ5J,GAAMqB,KACjB6I,IACAhJ,EAAQgJ,IAET/I,GAEDA,EAAO,IAAIf,SAASoC,KAAKC,UAAUzC,iBAGrCmB,GA1BgBA,EAAO,IAAIf,MAAM,0BARjBe,EAAO,IAAIf,MAAM,6BAsC7BzB,6BACNqG,QAAQC,MAAM,wBAORtG,UACN,OAAOiJ,EAAA,EAAWiC,aAAa7B,EAAA,OAAQlJ,KAAK6L,MAAQ,IAI9ChM,oBACN,OAAOiJ,EAAA,EAAWiC,aAAa9B,EAAA,eAAgBjJ,KAAK8L,SAAW,IAIzDjM,qBACN,OAAOiJ,EAAA,EAAWiC,aAAanC,EAAA,gBAAiB5I,KAAK+L,UAAY,IAI3DlM,iBACN,OAAOsC,QAAQuE,IACd1G,KAAKgM,YAAY3I,IAAKxC,GAAe2H,EAAKyD,SAASpL,KAI9ChB,aACN,OAAOsC,QAAQuE,IACd1G,KAAKkM,QAAQ7I,IAAKxC,GAAe2H,EAAKyD,SAASpL,KAI1ChB,iBAAiBsM,GACvB,MAAMhB,EAAWgB,GAAiB,GAG5BT,EAAoBP,EAASlE,cAC7BmF,EACLpM,KAAKsJ,UAAYtJ,KAAKsJ,UAAUrC,cAAgB,GAC3CoF,EACLrM,KAAKwJ,SAAWxJ,KAAKwJ,SAASvC,cAAgB,GAC/C,MAAiB,KAAbkE,EACI,IAAI7J,MAAM,oBACP6J,EAASrI,OAAS,EACrB,IAAIxB,MAAM,yBACP6J,EAASrI,OAAS,IACrB,IAAIxB,MAAM,wBAZE,KAaIQ,KAAKqJ,GAZV,KAcIrJ,KAAKqJ,IAEkC,IAAnDO,EAAkBC,QAAQS,GAC7B,IAAI9K,MAAM,4CAC2C,IAAlDoK,EAAkBC,QAAQU,GAC7B,IAAI/K,MAAM,0CAEX,KANC,IAAIA,MAAM,6CAFV,IAAIA,MAAM,6CAWZzB,UACN,QAAKuJ,MAAM5F,YAEmB,iBAAnBxD,KAAKsJ,YACa,iBAAlBtJ,KAAKwJ,WACU,iBAAfxJ,KAAKkL,QAEO,KAAnBlL,KAAKsJ,YACa,KAAlBtJ,KAAKwJ,UACU,KAAfxJ,KAAKkL,WAKHrL,YACN,MAAMkE,EAAaqF,MAAMpF,YACzB,GAAID,EAAc,OAAOA,EAEzB,GAAI/D,KAAKa,GAAI,CAEZ,IAAK,CAAC,SAAU,aAAayL,gBAAgBtM,KAAKK,QAAQiJ,WACzD,OAAO,IAAIhI,4BAA4BtB,KAAKK,QAAQiJ,aAErD,IAAK,CAAC,SAAU,aAAagD,gBAAgBtM,KAAKK,QAAQmJ,UACzD,OAAO,IAAIlI,2BAA2BtB,KAAKK,QAAQmJ,YAEpD,IAAK,CAAC,SAAU,aAAa8C,gBAAgBtM,KAAKK,QAAQ8K,UACzD,OAAO,IAAI7J,2BAA2BtB,KAAKK,QAAQ8K,YAEpD,IAAK,CAAC,SAAU,aAAamB,gBAAgBtM,KAAKK,QAAQkM,iBACzD,OAAO,IAAIjL,kCAAkCtB,KAAKK,QAAQkM,mBAE3D,IAAK,CAAC,SAAU,aAAaD,gBAAgBtM,KAAKK,QAAQ6K,OACzD,OAAO,IAAI5J,wBAAwBtB,KAAKK,QAAQ6K,SAGjD,GAA+B,KAA3BlL,KAAKK,QAAQiJ,UAChB,OAAO,IAAIhI,MAAM,mBAElB,GAA8B,KAA1BtB,KAAKK,QAAQmJ,SAChB,OAAO,IAAIlI,MAAM,kBAElB,GAAItB,KAAKK,QAAQ8K,SAAU,CAC1B,MAAMhF,EAAQnG,KAAKwM,iBAAiBxM,KAAKK,QAAQ8K,UACjD,GAAIhF,EAAS,OAAOA,EAErB,GAAInG,KAAKK,QAAQ8K,WAAanL,KAAKK,QAAQkM,gBAC1C,OAAO,IAAIjL,MAAM,8BAEZ,CAEN,GAAsC,iBAA3BtB,KAAKK,QAAQiJ,UACvB,OAAO,IAAIhI,4BAA4BtB,KAAKK,QAAQiJ,aAErD,GAAqC,iBAA1BtJ,KAAKK,QAAQmJ,SACvB,OAAO,IAAIlI,2BAA2BtB,KAAKK,QAAQmJ,YAEpD,GAAqC,iBAA1BxJ,KAAKK,QAAQ8K,SACvB,OAAO,IAAI7J,2BAA2BtB,KAAKK,QAAQ8K,YAEpD,GAA4C,iBAAjCnL,KAAKK,QAAQkM,gBACvB,OAAO,IAAIjL,kCAAkCtB,KAAKK,QAAQkM,mBAG3D,GAA+B,KAA3BvM,KAAKK,QAAQiJ,UAChB,OAAO,IAAIhI,MAAM,mBAElB,GAA8B,KAA1BtB,KAAKK,QAAQmJ,SAChB,OAAO,IAAIlI,MAAM,kBAElB,GAAItB,KAAKK,QAAQ8K,SAAU,CAC1B,MAAMhF,EAAQnG,KAAKwM,iBAAiBxM,KAAKK,QAAQ8K,UACjD,GAAIhF,EAAS,OAAOA,EAErB,GAAInG,KAAKK,QAAQ8K,WAAanL,KAAKK,QAAQkM,gBAC1C,OAAO,IAAIjL,MAAM,0BAKnB,OAAO,MA3fMkH,EAAA9G,UAAoB,OACpB8G,EAAAkC,QAAuB,KACvBlC,EAAAiC,UAAuC,IAAInG,IAC3CkE,EAAAiE,UAAiB,KAEjBjE,EAAAkE,WACb,uLC3EFrP,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,2BAAAkN,IAAAtP,EAAA,OAAAuP,EAAAvP,EAAA,GAAAwP,EAAAxP,EAAA,GAwBO,MAAMsP,UAAeC,EAAA,EAmB3B/M,YAAmBE,GAClBqJ,MAAK,yMAAkBrJ,GAjBjBF,gBAAgBgB,GACtB,OAAO+L,EAAA,EAAW7B,aAAqB4B,EAAQ9L,GAGzChB,gBAAgB6C,GACtB,OAAOkK,EAAA,EAAWlD,aAAqBiD,EAAQjK,GAGzC7C,eAAe6C,GACrB,OAAOkK,EAAA,EAAWtC,YAAoBqC,EAAQjK,GAGxC7C,qBACN,OAAO+M,EAAA,EAAWlD,aAAqBiD,EAAQ,MAOzC9M,YACN,MAAMiN,EAASnK,MAAMC,KAAK5C,KAAK8M,QAC/B,OAAsB,IAAlBA,EAAOhK,OACH8J,EAAA,EAAWlD,aACjBmD,EAAA,KAAM,CAAE/L,IAAKgM,IAGR3K,QAAQC,QAAQ,IAGjBvC,YAAYuL,GAClB,GAAIzI,MAAMO,QAAQlD,KAAK8M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT3B,EACV2B,EAAS3B,EACiB,iBAATA,GAAqBA,IACtC2B,EAAS3B,EAAKtK,UAE4CN,IAApDR,KAAK8M,OAAOE,KAAMnM,GAAeA,IAAOkM,GAEhD,OAAO,EAGDlN,YACN,MAAMkE,EAAaqF,MAAMpF,YACzB,OAAID,IAEC/D,KAAKiN,YACLjN,KAAKkN,SACLlN,KAAKmN,MACLnN,KAAKoN,OACLpN,KAAKqN,YACLrN,KAAKsN,aACqB,iBAApBtN,KAAKuN,YACfvN,KAAKuN,WAAa,EACV,IAAIjM,6BAA6BtB,KAAKuN,cAEjB,iBAAnBvN,KAAKwN,WACfxN,KAAKwN,UAAY,EACV,IAAIlM,4BAA4BtB,KAAKwN,aAGxCxN,KAAKM,SAASmN,KACdzN,KAAKM,SAASoN,MACd/K,MAAMO,QAAQlD,KAAKM,SAASwM,SACA,IAAhC9M,KAAKM,SAASwM,OAAOhK,OAIf,KAHC,IAAIxB,yBAAyBtB,KAAKM,SAASwM,UAHhB,IAAIxL,wBAAwBtB,KAAKM,SAASoN,SAD3C,IAAIpM,uBAAuBtB,KAAKM,SAASmN,QAV1C,IAAInM,+BAA+BtB,KAAKsN,gBADzC,IAAIhM,8BAA8BtB,KAAKqN,eAD5C,IAAI/L,yBAAyBtB,KAAKoN,UADnC,IAAI9L,wBAAwBtB,KAAKmN,SAD9B,IAAI7L,2BAA2BtB,KAAKkN,YADjC,IAAI5L,8BAA8BtB,KAAKiN,iBAjD1DN,EAAAjL,UAAoB,uCCzBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,oCAAAkO,IAAAtQ,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAAAwQ,EAAAxQ,EAAA,GAkBO,MAAMsQ,UAAwBC,EAAA,EA8DpC/N,YAAmBE,GAClBqJ,MAAK,iIAA2BrJ,GA5D1BF,eAAe6C,GACrB,OAAOkL,EAAA,EAAWtD,YAAYqD,EAAiBjL,GAIzC7C,gBAAgB6C,GACtB,OAAOkL,EAAA,EAAWlE,aAAaiE,EAAiBjL,GAI1C7C,gBAAgBgB,GAEtB,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KACV,iBAAPxB,GAA0B,KAAPA,EAC7B4H,EAAA,EAAI7K,KAAK,8BAA+BiD,IAAM,MAAM0B,KAClDuL,IACA,MAAMC,EAAUD,GAAS,KACrBC,EACH3L,EAAQ,IAAIuL,EAAgBI,IAE5B1L,EAAO,IAAIf,SAASyM,gBAGtB1L,GAGDD,MAKIvC,gBAAgBmO,GACtB,OAAO,IAAI7L,QAAQ,CAACC,EAASC,KACJ,iBAAb2L,EACV3L,EAAO,IAAIf,MAAM,8BAEjBmH,EAAA,EAAI7K,KAAK,MAAO,0BAA2B,CAC1CI,KAAMgQ,IACJzL,KAAKH,EAASC,KAKbxC,kBACNoO,EACAC,EACAC,EACAC,GAEA,OAAO,IAAIjM,QAAQ,CAACC,EAASC,KAC5BoG,EAAA,EAAI7K,KAAK,OAAQ,0BAA2B,CAC3CyQ,WAAYF,EACZG,YAAaL,EACbM,UAAWL,EACXM,aAAcJ,IACZ7L,KAAKH,EAASC,KAQZxC,UACN,OAAO+N,EAAA,EAAW7C,aAAa8C,EAAA,KAAM7N,KAAK+M,QAIpClN,YAAYuL,GAClB,MAAoB,iBAATA,EACHA,IAASpL,KAAK+M,SACK,iBAAT3B,IAAqBA,IAC/BA,EAAKtK,MAAQd,KAAK+M,OAKpBlN,UACN,QAAKuJ,MAAM5F,eACNxD,KAAK+M,QAAiC,iBAAhB/M,KAAK+M,aAC3B/M,KAAKyO,SAAmC,iBAAjBzO,KAAKyO,aAC5BzO,KAAK0O,WAAuC,iBAAnB1O,KAAK0O,cAnFtBf,EAAAjM,UAAoB,gDCnBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,wBAAAkP,IAAAtR,EAAA,OAAAoL,EAAApL,EAAA,GAAAqL,EAAArL,EAAA,GAAAuR,EAAAvR,EAAA,IAAAwR,EAAAxR,EAAA,GAAAyR,EAAAzR,EAAA,IAuBO,MAAMsR,UAAYE,EAAA,EAyIxBhP,YAAmBE,GAClBqJ,MAAK,sKAAerJ,GAvIdF,gBAAgBgB,GACtB,OAAOgO,EAAA,EAAW9D,aAAa4D,EAAK9N,GAG9BhB,wBAAwBkP,GAC9B,MAAM7N,QAAauH,EAAA,EAAI7K,KAAK,mBAAoBmR,SAAe,MAC/D,GAAI7N,GAAQyB,MAAMO,QAAQhC,GACzB,OAAOA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIoL,EAAIrL,GAErB,OADAuL,EAAA,EAAW5L,SAAcM,GAClBA,IAGT,MAAM,IAAIjC,6BAA6BJ,KAGjCrB,yBAAyBmP,GAC/B,MAAM9N,QAAauH,EAAA,EAAI7K,KAAK,oBAAqBoR,SAAgB,MACjE,GAAI9N,GAAQyB,MAAMO,QAAQhC,GACzB,OAAOA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIoL,EAAIrL,GAErB,OADAuL,EAAA,EAAW5L,SAAcM,GAClBA,IAGT,MAAM,IAAIjC,6BAA6BJ,KAGjCrB,qBACN,OAAOgP,EAAA,EAAWnF,aAAaiF,EAAK,MAG9B9O,gBAAgB6C,GACtB,OAAOmM,EAAA,EAAWnF,aAAaiF,EAAKjM,GAG9B7C,kBAAkBoP,GACxB,OAAO,IAAI9M,QAAQ,CAACC,EAASC,KAC5B,MAAMnB,EAAY+N,GAAW,GAC7B,GAAI/N,GAAwB,iBAATA,EAAmB,CACrC,IAAKA,EAAKgO,MAAsB,KAAdhO,EAAKgO,KACtB,OAAO7M,EAAO,IAAIf,MAAM,qBAEzB,IAAKJ,EAAKiO,OAAwB,KAAfjO,EAAKiO,MACvB,OAAO9M,EAAO,IAAIf,MAAM,sBAEzB,IAAKJ,EAAKkO,OAA+B,IAAtBlO,EAAKkO,MAAMtM,OAC7B,OAAOT,EAAO,IAAIf,MAAM,sBAEzB,MAAM+N,EAAWnO,EAAKkO,MAAME,OAC3B,CACCC,EACA9R,KAEA,GAAI8R,EAAKC,SAAWD,EAAKE,WAAaF,EAAKG,SAAU,CACpD,MAAMF,EAAU,IAAItP,KAAKqP,EAAKC,SAExBC,EAAY,IAAIvP,KAAKqP,EAAKE,WAChCA,EAAUE,YAAYH,EAAQI,eAC9BH,EAAUI,SAASL,EAAQM,YAC3BL,EAAUM,QAAQP,EAAQQ,UAE1B,MAAMN,EAAW,IAAIxP,KAAKqP,EAAKG,UAQ/B,OAPAA,EAASC,YAAYH,EAAQI,eAC7BF,EAASG,SAASL,EAAQM,YAC1BJ,EAASK,QAAQP,EAAQQ,UACzB9O,EAAKkO,MAAM3R,GAAK,CACfgS,UAAWF,EAAKE,UAChBC,SAAUH,EAAKG,WAET,EACD,SAAIH,EAAKE,YAAaF,EAAKG,YACjCxO,EAAKkO,MAAM3R,GAAK,CACfgS,UAAWF,EAAKE,UAChBC,SAAUH,EAAKG,WAET,KAKV,OAAIL,EAASvM,SAAW5B,EAAKkO,MAAMtM,OAC3BT,EAAO,IAAIf,MAAM,8BAEzBJ,EAAKkO,MAAQC,EACG5G,EAAA,EAAI7K,KAAK,OAAQ,WAAYsD,GAC9BqB,KACZ2B,IACD,IAAI+L,EAAc,GAClBA,EAAOtN,MAAMC,KAAKsB,GAAY,IAAIb,IAAKC,IAEtC,OADY,IAAIqL,EAAIrL,KAGrBlB,EAAQ6N,IAET5N,IAEF,OAAO,OAIFxC,wBACNmL,EACAkF,GAEA,OAAO,IAAI/N,QAAQ,CAACC,EAASC,IACJ,iBAAb2I,EACH3I,EAAO,IAAIf,MAAM,8BAEG,iBAAjB0J,EAASmF,KACK,iBAAjBnF,EAASoF,IACT/N,EAAO,IAAIf,MAAM,0CAED,iBAAb4O,EACH7N,EAAO,IAAIf,MAAM,4BAGlBmH,EAAA,EAAI7K,KAAK,MAAO,sBAAuB,CAC7CyS,IAAKH,EACLC,IAAKnF,EAASmF,IACdC,IAAKpF,EAASoF,MACZ7N,KACA0N,IACD7N,EACCO,MAAMC,KAAKqN,GAAM5M,IAAKE,IAErB,OADY,IAAIoL,EAAIpL,OAKvBlB,IAQIxC,WACN,OAAOgP,EAAA,EAAWnF,aAAahB,EAAA,KAAM,CAAE5H,IAAKd,KAAKsQ,QAI3CzQ,WACN,OAAOgP,EAAA,EAAW9D,aAAa+D,EAAA,MAAO9O,KAAKmP,OAIrCtP,cACN,OAAOgP,EAAA,EAAW9D,aAAa6D,EAAA,SAAU5O,KAAKgL,UAIxCnL,UACN,QAAKuJ,MAAM5F,cACNb,MAAMO,QAAQlD,KAAK8M,SACG,IAAvB9M,KAAK8M,OAAOhK,QAIVjD,YAAYuL,GAClB,GAAIzI,MAAMO,QAAQlD,KAAK8M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT3B,EACV2B,EAAS3B,EACiB,iBAATA,GAAqBA,IACtC2B,EAAS3B,EAAKtK,UAE4CN,IAApDR,KAAK8M,OAAOE,KAAMnM,GAAeA,IAAOkM,GAEhD,OAAO,GA5KM4B,EAAAjN,UAAoB,oCCxBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,mCAAA8Q,IAAAlT,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAAAwQ,EAAAxQ,EAAA,GAiBO,MAAMkT,UAAuB3C,EAAA,EAiCnC/N,YAAmBE,GAClBqJ,MAAK,4GAA0BrJ,GA/BzBF,eAAe6C,GACrB,OAAOkL,EAAA,EAAWtD,YAAYiG,EAAgB7N,GAIxC7C,gBAAgB6C,GACtB,OAAOkL,EAAA,EAAWlE,aAAa6G,EAAgB7N,GAIzC7C,gBAAgBgB,GACtB,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KACV,iBAAPxB,GAA0B,KAAPA,EAC7B4H,EAAA,EAAI7K,KAAK,6BAA8BiD,IAAM,MAAM0B,KACjD2B,IACA,MAAM6J,EAAU7J,GAAY,KACxB6J,EACH3L,EAAQ,IAAImO,EAAexC,IAE3B1L,EAAO,IAAIf,SAASyM,gBAGtB1L,GAGDD,MASIvC,UACN,OAAO+N,EAAA,EAAW7C,aAAa8C,EAAA,KAAM7N,KAAK+M,QAIpClN,YAAYuL,GAClB,MAAoB,iBAATA,EAA4BA,IAASpL,KAAK+M,OACjC,mBAAT3B,GAA8BA,EAAKtK,MAAQd,KAAK+M,OAIrDlN,qBACgB,oBAAXuI,SAEVA,OAAO4C,SAASC,uCAAyCjL,KAAK0O,aAIzD7O,UACN,QAAKuJ,MAAM5F,eACNxD,KAAK+M,QAAiC,iBAAhB/M,KAAK+M,YAC3B/M,KAAKyO,SAAmC,iBAAjBzO,KAAKyO,WAzDpB8B,EAAA7O,UAAoB,+CClBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA+Q,IAAAnT,EAAA,OAAAoT,EAAApT,EAAA,GAAAqT,EAAArT,EAAA,GAAAsT,EAAAtT,EAAA,GAAAuT,EAAAvT,EAAA,GAAAwT,EAAAxT,EAAA,GAAAyT,EAAAzT,EAAA,GA+BO,MAAMmT,UAAaG,EAAA,EAuBzB9Q,YAAmBE,GAClBqJ,MAAK,2OAAgBrJ,GArBfF,eAAe6C,GACrB,OAAOiO,EAAA,EAAWrG,YAAYkG,EAAM9N,GAI9B7C,gBAAgB6C,GACtB,OAAOiO,EAAA,EAAWjH,aAAa8G,EAAM9N,GAI/B7C,gBAAgBgB,GACtB,OAAO8P,EAAA,EAAW5F,aAAayF,EAAM3P,GAI/BhB,qBACN,OAAO8Q,EAAA,EAAWjH,aAAa8G,EAAM,MAQ/B3Q,UACN,OAAIG,KAAK6L,KACD8E,EAAA,EAAW5F,aAAa8F,EAAA,OAAQ7Q,KAAK6L,MAGtC1J,QAAQC,QAAQ,MAGjBvC,YACN,MAAMkR,EAASpO,MAAMC,KAAK5C,KAAK+Q,QAC/B,OAAsB,IAAlBA,EAAOjO,OACF6N,EAAA,EAAWjH,aACjBmH,EAAA,OAAQ,CAAE/P,IAAKiQ,IAGX5O,QAAQC,QAAQ,IAGjBvC,YACN,MAAMiN,EAASnK,MAAMC,KAAK5C,KAAK8M,QAC/B,OAAsB,IAAlBA,EAAOhK,OACH6N,EAAA,EAAWjH,aACjBoH,EAAA,KAAM,CAAEhQ,IAAKgM,IAGR3K,QAAQC,QAAQ,IAGjBvC,UACN,OAAO6Q,EAAA,IAAIM,WAAWhR,KAAKc,KAAO,IAG5BjB,oBACN,OAAKG,KAAK8L,QACH6E,EAAA,EAAW5F,aAAa6F,EAAA,eAAgB5Q,KAAK8L,SADxB3J,QAAQC,QAAQ,MAKtCvC,qBACN,OAAKG,KAAK+L,SACH4E,EAAA,EAAW5F,aAAa0F,EAAA,gBAAiBzQ,KAAK+L,UADxB5J,QAAQC,QAAQ,MAKvCvC,YACN,MAAMsG,EAAQiD,MAAMpF,YACpB,OAAImC,IAE4B,iBAArBnG,KAAKiR,YACR,IAAI3P,kDAAkDtB,KAAKiR,uBAE1C,KAArBjR,KAAKiR,YACD,IAAI3P,MAAM,wBAGO,iBAAdtB,KAAKhC,KACR,IAAIsD,MAAM,wBAEA,KAAdtB,KAAKhC,KACD,IAAIsD,MAAM,iBAGc,iBAArBtB,KAAKiN,YACR,IAAI3L,MAAM,+BAEO,KAArBtB,KAAKiN,YACD,IAAI3L,MAAM,wBAEO,gBAArBtB,KAAKiN,YACD,IAAI3L,MAAM,oCAGbqB,MAAMO,QAAQlD,KAAK8M,QAGG,IAAvB9M,KAAK8M,OAAOhK,OACR,IAAIxB,MAAM,uCAGX,KANC,IAAIA,MAAM,2BASZzB,YAAYuL,GAClB,GAAIzI,MAAMO,QAAQlD,KAAK8M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT3B,EACV2B,EAAS3B,EACiB,iBAATA,GAAqBA,IACtC2B,EAAS3B,EAAKtK,UAE4CN,IAApDR,KAAK8M,OAAOE,KAAMnM,GAAeA,IAAOkM,GAEhD,OAAO,GAtHMyD,EAAA9O,UAAoB,qCChCnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,6BAAAyR,IAAA7T,EAAA,OAAAoL,EAAApL,EAAA,GAAA8T,EAAA9T,EAAA,IAAAsT,EAAAtT,EAAA,GAmBO,MAAM6T,UAAiBP,EAAA,EAoC7B9Q,YAAmBE,GAClBqJ,MAAK,gGAAoBrJ,GAlCnBF,4BAA4BuR,GAClC,OAAO,IAAIjP,QAAQ,CAACC,EAASC,KACvB+O,EAGJ3I,EAAA,EAAI7K,KAAK,oBAAqBwT,IAAW,MAAM7O,KAC5CyI,IACGA,EACH5I,EAAQ,IAAI8O,EAASlG,IAErB3I,EAAO,IAAIf,SAAS0J,gBAGtB3I,GAVDA,EAAO,IAAIf,0BAA0B8P,QAejCvR,gBAAgBgB,GACtB,OAAO8P,EAAA,EAAW5F,aAAamG,EAAUrQ,GAInChB,eAAe6C,GACrB,OAAOiO,EAAA,EAAWrG,YAAY4G,EAAUxO,GAIlC7C,gBAAgB6C,GACtB,OAAOiO,EAAA,EAAWjH,aAAawH,EAAUxO,GAQnC7C,UACN,QAAKuJ,MAAM5F,cACNxD,KAAKoR,YACLpR,KAAKqR,YACLrR,KAAKsR,aACL3O,MAAMO,QAAQlD,KAAKuR,UAIlB1R,kBACN,OAAOsR,EAAA,YAAYK,gBAAgBxR,KAAKoR,UAjD3BF,EAAAxP,UAAoB,yCCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,0BAAAgS,IAAApU,EAAA,OAAAoT,EAAApT,EAAA,GAAAqT,EAAArT,EAAA,GAAAuR,EAAAvR,EAAA,IAAAwR,EAAAxR,EAAA,GAAAqU,EAAArU,EAAA,GAAAsU,EAAAtU,EAAA,GAAAuU,EAAAvU,EAAA,GAqCO,MAAMoU,UAAc5C,EAAA,EAuB1BhP,YAAmBE,GAClBqJ,MAAK,sPAAiBrJ,GArBhBF,eAAe6C,GACrB,OAAOmM,EAAA,EAAWvE,YAAYmH,EAAO/O,GAI/B7C,gBAAgB6C,GACtB,OAAOmM,EAAA,EAAWnF,aAAa+H,EAAO/O,GAIhC7C,gBAAgBgB,GACtB,OAAOgO,EAAA,EAAW9D,aAAa0G,EAAO5Q,GAIhChB,qBACN,OAAOgP,EAAA,EAAWnF,aAAa+H,EAAO,MAQhC5R,UACN,OAAOgP,EAAA,EAAW9D,aAAa4G,EAAA,OAAQ3R,KAAK6L,MAAQ,IAI9ChM,YACN,MAAMkR,EAASpO,MAAMC,KAAK5C,KAAK+Q,QAC/B,OAAsB,IAAlBA,EAAOjO,OACH+L,EAAA,EAAWnF,aACjBiI,EAAA,OAAQ,CAAE7Q,IAAKiQ,IAGV5O,QAAQC,QAAQ,IAGjBvC,YACN,MAAMiN,EAASnK,MAAMC,KAAK5C,KAAK8M,QAC/B,OAAsB,IAAlBA,EAAOhK,OACH+L,EAAA,EAAWnF,aACjBkI,EAAA,KAAM,CAAE9Q,IAAKgM,IAGR3K,QAAQC,QAAQ,IAGjBvC,UACN,OAAO6Q,EAAA,IAAImB,YAAY7R,KAAKc,KAAO,IAG7BjB,oBACN,OAAOgP,EAAA,EAAW9D,aAAa2G,EAAA,eAAgB1R,KAAK8L,SAAW,IAIzDjM,qBACN,OAAOgP,EAAA,EAAW9D,aAAa0F,EAAA,gBAAiBzQ,KAAK+L,UAAY,IAI3DlM,cACN,OAAOgP,EAAA,EAAW9D,aAAa6D,EAAA,SAAU5O,KAAKgL,UAAY,IAIpDnL,UACN,MAAMO,EAAOJ,KACb,QAAKoJ,MAAM5F,cAENqL,EAAA,EAAW1N,UAAUnB,KAAKgL,YACT,KAAlBhL,KAAKgL,WAEgB,iBAAdhL,KAAKhC,OACE,KAAdgC,KAAKhC,OAEuB,iBAArBgC,KAAKiN,cACS,KAArBjN,KAAKiN,cACgB,gBAArBjN,KAAKiN,gBAEJtK,MAAMO,QAAQlD,KAAK8M,UACG,IAAvB9M,KAAK8M,OAAOhK,UACX9C,KAAK8M,OAAO1G,MAAO0L,GAAU1R,EAAK2R,YAAYD,aAO7CjS,YAAYuL,GAClB,GAAIzI,MAAMO,QAAQlD,KAAK8M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT3B,EACV2B,EAAS3B,EACiB,iBAATA,GAAqBA,IACtC2B,EAAS3B,EAAKtK,UAE4CN,IAApDR,KAAK8M,OAAOE,KAAMnM,GAAeA,IAAOkM,GAEhD,OAAO,GAvGM0E,EAAA/P,UAAoB,sCCtC5B8E,eAAewL,EAAiBhU,GAEtC,OAAQA,GACP,IAAK,OACJ,aAAcmE,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAkBuR,KACjC,IAAK,eACJ,aAAcrO,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAA0BgT,aACzC,IAAK,cACJ,aAAc9P,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAyBiT,YACxC,IAAK,kBACJ,aAAc/P,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAA6B0O,gBAC5C,IAAK,MACJ,aAAcxL,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAiB0P,IAChC,IAAK,cACJ,aAAcxM,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAyBkT,YACxC,IAAK,WACJ,aAAchQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAsBiS,SACrC,IAAK,eACJ,aAAc/O,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAA0BmT,aACzC,IAAK,OACJ,aAAcjQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAkBoT,KACjC,IAAK,OACJ,aAAclQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAkBqT,KACjC,IAAK,UACJ,aAAcnQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAqBsT,QACpC,IAAK,iBACJ,aAAcpQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAA4BsR,eAC3C,IAAK,SACJ,aAAcpO,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAoB0N,OACnC,IAAK,OACJ,aAAcxK,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAkBuJ,KACjC,IAAK,QACJ,aAAcrG,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAmBwS,MAClC,QACC,OAAOtP,QAAQC,QAAQ,OAlC1B/E,EAAAU,EAAA0B,EAAA,sBAAAuS,kCCAA3U,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,iCAAAwS,IAAA5U,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAsBO,MAAM4U,UAAqBrE,EAAA,EAsDjC/N,YAAmBE,GAClBqJ,MAAK,kEAAwBrJ,GAlDvBF,mBAAmB0K,GAEzB,MAAMiI,EAAatS,KAAKsK,MAExB,OADAyH,EAAaxH,UAAUhK,IAAI+R,EAAYjI,GAChC,IAAM0H,EAAaxH,UAAUrJ,OAAOoR,GAGrC3S,uBACN4I,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOsF,GAAG,2BAA6B5G,IACtC,GAAIA,EAAM,CACT,IAAIuR,EACH7E,EAAA,EAAW7L,SAASb,EAAKJ,KACtB2R,EACHtU,OAAO8F,OAAOwO,EAAMvR,GAEpBuR,EAAO,IAAIR,EAAa/Q,GAEzB0M,EAAA,EAAW3K,SAAuBwP,GAClCR,EAAaxH,UAAUlK,QAASmS,GAAOA,EAAGD,QAK9CvM,QAAQC,OAGHtG,gBAAgBgB,GACtB,OAAO+M,EAAA,EAAW7C,aAAakH,EAAcpR,GAIvChB,eAAe6C,GACrB,OAAOkL,EAAA,EAAWtD,YAAY2H,EAAcvP,GAItC7C,gBAAgB6C,GACtB,OAAOkL,EAAA,EAAWlE,aAAauI,EAAcvP,GAIvC7C,qBACN,OAAO+N,EAAA,EAAWlE,aAAauI,EAAc,MAQvCpS,UACN,QAAKuJ,MAAM5F,UAKL3D,YAAYuL,EAAcuH,GAOhC,OALA3S,KAAK4S,OAAOxP,KAAK,CAChByP,eAAgB,IAAI3S,KACpByS,UACAvH,SAEMpL,KAAK8S,QAtECb,EAAAvQ,UAAoB,eACpBuQ,EAAAxH,UACuB,IAAInG,kCCzB1CjH,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,gCAAA0S,IAAA9U,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAaO,MAAM8U,UAAoBvE,EAAA,EA+ChC/N,YAAmBE,GAClBqJ,MAAK,qEAAuBrJ,GA7CtBF,gBAAgBgB,GACtB,OAAO+M,EAAA,EAAW7C,aAAaoH,EAAatR,GAItChB,eAAe6C,GACrB,OAAOkL,EAAA,EAAWtD,YAAY6H,EAAazP,GAIrC7C,gBAAgB6C,GACtB,OAAOkL,EAAA,EAAWlE,aAAayI,EAAazP,GAItC7C,uBAAuBuR,GAC7B,OAAO,IAAIjP,QAAQ,CAACC,EAASC,IACL,iBAAZ+O,EACH/O,EAAO,IAAIf,MAAM,6BAElBmH,EAAA,EAAI7K,KAAK,MAAO,mBAAoB,CAAEwT,YAAW7O,KACvDH,EACAC,IAKIxC,kBAAkBqO,EAAc6E,GAEtC,OAAO,IAAI5Q,QAAQ,CAACC,EAASC,KAC5B,MAAM2Q,EAAOD,GAAa,WAC1B,MAAoB,iBAAT7E,EACH7L,EAAO,IAAIf,MAAM,0BAEL,IAAhB4M,EAAKpL,OACDT,EAAO,IAAIf,MAAM,kBAElBmH,EAAA,EAAI7K,KAAK,MAAO,yBAA0B,CAChD+L,KAAMuE,EACN8E,SACEzQ,KAAKH,EAASC,MA1CL8P,EAAAzQ,UAAoB,4CCdnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,iCAAA2S,IAAA/U,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAyBO,MAAM+U,UAAqBxE,EAAA,EAyEjC/N,YAAmBE,GAClBqJ,MAAK,mGAAwBrJ,GAvEtBC,KAAAiT,gBAAqD,IAAI3O,IAE1DzE,yBAAyBqT,GAC/Bd,EAAa3H,UAAUlK,QAASgK,GAAkBA,EAAS2I,IAGrDrT,mBAAmB0K,GACzB,MAAMiI,EAAatS,KAAKsK,MAExB,OADA4H,EAAa3H,UAAUhK,IAAI+R,EAAYjI,GAChC,IAAM6H,EAAa3H,UAAUrJ,OAAOoR,GAGrC3S,mCACN,GAAkB,OAAd4I,EAAA,EAAInD,MAAgB,CACvB,MAAM6N,QAAc1K,EAAA,EAAI7K,KAAK,MAAO,oBAAqB,CACxDwV,WAAW,IAEZ,GAAIzQ,MAAMO,QAAQiQ,GACjB,OAAOA,EAAM9P,IAAKE,GAAc,IAAI6O,EAAa7O,IAGnD,MAAO,GAGD1D,qBACN,OAAO+N,EAAA,EAAWlE,aAAa,eAAgB,MAGzC7J,gBAAgBgB,GACtB,OAAO+M,EAAA,EAAW7C,aAAa,eAAgBlK,GAGzChB,uBACN4I,EAAA,EAAInG,YAAYC,KACdC,IACIA,GACHA,EAAOsF,GAAG,eAAiB5G,GAC1BkR,EAAaiB,kBAAkB,IAAIjB,EAAalR,MAInDgF,QAAQC,OAGHtG,gCACN,MAAMyT,EACa,oBAAXlL,aACiC,IAAhCA,OAAegK,aAClBmB,EAAkB,EAAmBnL,OAAegK,aAAe,KACzE,GAAIkB,EAAe,CAClB,MAAME,EAASC,IACK,YAAfA,GACHrB,EAAaiB,kBAAmBH,GACxB,IAAIK,EAAgBL,EAAKQ,MAAO,CACtCC,KAAMT,EAAKP,QACXzR,KAAMgS,EACNrH,KAAM,iBACN+H,UAAWV,EAAKpP,gBAKe,YAA/ByP,EAAgBE,WACnBD,EAAMD,EAAgBE,YAEtBF,EAAgBM,kBAAkBL,IAS9B3T,kBAAkB0K,GACxB,MAAM9M,EAAIyC,KAAKsK,MAEf,OADAxK,KAAKiT,gBAAgBxS,IAAIhD,EAAG8M,GACrB,KAAQvK,KAAKiT,gBAAgB7R,OAAO3D,KA/E9B2U,EAAA1Q,UAAoB,eACpB0Q,EAAA3H,UAA+C,IAAInG,kCC3BlEjH,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA6S,IAAAjV,EAAA,OAAAuP,EAAAvP,EAAA,GAmBO,MAAMiV,UAAa1F,EAAA,EAmBzB/M,YAAmBE,GAClBqJ,MAAK,4IAAgBrJ,GAjBfF,gBAAgBgB,GACtB,OAAO+L,EAAA,EAAW7B,aAAauH,EAAMzR,GAG/BhB,eAAe6C,GACrB,OAAOkK,EAAA,EAAWtC,YAAYgI,EAAM5P,GAG9B7C,qBACN,OAAO+M,EAAA,EAAWlD,aAAa4I,EAAM,MAG/BzS,gBAAgB6C,GACtB,OAAOkK,EAAA,EAAWlD,aAAa4I,EAAM5P,GAO/B7C,UACN,QAAKuJ,MAAM5F,UAIL3D,UACN,QAAKG,KAAK8T,cACL9T,KAAK+T,UAA8B,KAAlB/T,KAAK+T,aACtB/T,KAAKgU,SAOJnU,YAAYuL,GAClB,MAAoB,iBAATA,EAA4BA,IAASpL,KAAK+M,SACjC,mBAAT3B,IAAuBA,IAAQA,EAAK5H,YACvC4H,EAAKtK,MAAQd,KAAK+M,QAxCbuF,EAAA5Q,UAAoB,qCCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,gCAAAyS,IAAA7U,EAAA,OAAAuP,EAAAvP,EAAA,GAmBO,MAAM6U,UAAoBtF,EAAA,EAmBhC/M,YAAmBE,GAClBqJ,MAAK,qJAAuBrJ,GAjBtBF,gBAAgBgB,GACtB,OAAO+L,EAAA,EAAW7B,aAAamH,EAAarR,GAItChB,eAAe6C,GACrB,OAAOkK,EAAA,EAAWtC,YAAY4H,EAAaxP,GAIrC7C,gBAAgB6C,GAEtB,OAAOkK,EAAA,EAAWlD,aAAawI,EAAaxP,GAQtC7C,UACN,QAAKuJ,MAAM5F,WAvBE0O,EAAAxQ,UAAoB,4CCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA4S,IAAAhV,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAqBO,MAAMgV,UAAazE,EAAA,EA8BzB/N,YAAmBE,GAClBqJ,MAAK,mIAAgBrJ,GA5BfF,gBAAgB6C,EAAemH,EAAeC,GAMpD,OAJIpH,IACHA,EAASmH,KAAOnH,EAASmH,MAAQA,EACjCnH,EAASoH,MAAQpH,EAASoH,OAASA,GAE7B8D,EAAA,EAAWlE,aAAa2I,EAAM3P,GAG/B7C,eAAe6C,GACrB,OAAOkL,EAAA,EAAWtD,YAAY+H,EAAM3P,GAG9B7C,gBAAgBgB,GACtB,OAAO+M,EAAA,EAAW7C,aAAasH,EAAMxR,GAG/BhB,kBAAkBoU,GACxB,OAAO,IAAI9R,QAAQ,CAACC,EAASC,KAC5BoG,EAAA,EAAI7K,KAAK,mBAAoBqW,IAAQ,MAAM1R,KACzC2R,IACA9R,EAAQ,IAAIiQ,EAAK6B,KAElB7R,KAQIxC,UACN,QAAKuJ,MAAM5F,cACNxD,KAAKmU,OACS,KAAfnU,KAAKmU,OAIHtU,YAAYuL,GAClB,MAAoB,iBAATA,EAA4BA,IAASpL,KAAKoU,QACjC,mBAAThJ,IAAuBA,IAAQA,EAAK5H,aACvC4H,EAAKtK,MAAQd,KAAKoU,OAAShJ,EAAKgJ,QA3C3B/B,EAAA3Q,UAAoB,qCCtBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,4BAAA8S,IAAAlV,EAAA,OAAAoL,EAAApL,EAAA,GAAAuQ,EAAAvQ,EAAA,GAkBO,MAAMkV,UAAgB3E,EAAA,EA8D5B/N,YAAmBE,GAClBqJ,MAAK,8GAAmBrJ,GA5DlBF,kCAAkCqP,EAActM,EAAcyR,GACpE,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BoG,EAAA,EAAI7K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACArB,KAAM,gBACN3H,SAAU,CACT0D,OAAQG,KAEP3M,KACDrB,IACAkB,EAAQ,IAAImQ,EAAQrR,KAErBmB,KAIIxC,mCAAmCsP,EAAevM,EAAcyR,GACtE,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BoG,EAAA,EAAI7K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACArB,KAAM,iBACN3H,SAAU,CACT2D,QAASG,KAER5M,KACDrB,IACAkB,EAAQ,IAAImQ,EAAQrR,KAErBmB,KAIIxC,4BAA4ByU,EAAa1R,EAAcyR,GAC7D,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BoG,EAAA,EAAI7K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACArB,KAAM,iBACN3H,SAAU,CACTkJ,MAAOD,KAEN/R,KACDrB,IACAkB,EAAQ,IAAImQ,EAAQrR,KAErBmB,KAIIxC,qBACN,OAAO+N,EAAA,EAAWlE,aAAa6I,EAAS,MAGlC1S,gBAAgBgB,GACtB,OAAO+M,EAAA,EAAW7C,aAAawH,EAAS1R,GAOlChB,cAAc2U,GACpB,MAAMC,QAAgBhM,EAAA,EAAI7K,KACzB,uBACgBoC,KAAKc,OAAO0T,IAC5B,MAGD,OADAxU,KAAKiE,OAAOwQ,GACLzU,MAxEMuS,EAAA7Q,UAAoB;;;;;;GCLnCnE,EAAAsG,MAkCA,SAAA6Q,EAAAC,GACA,oBAAAD,EACA,UAAAE,UAAA,iCAQA,IALA,IAAAC,EAAA,GACAC,EAAAH,GAAA,GACAI,EAAAL,EAAAM,MAAAC,GACAC,EAAAJ,EAAAK,UAEA1X,EAAA,EAAiBA,EAAAsX,EAAAjS,OAAkBrF,IAAA,CACnC,IAAA2X,EAAAL,EAAAtX,GACA4X,EAAAD,EAAAzJ,QAAA,KAGA,KAAA0J,EAAA,IAIA,IAAArW,EAAAoW,EAAAE,OAAA,EAAAD,GAAAE,OACAC,EAAAJ,EAAAE,SAAAD,EAAAD,EAAAtS,QAAAyS,OAGA,KAAAC,EAAA,KACAA,IAAAC,MAAA,OAIAjV,MAAAqU,EAAA7V,KACA6V,EAAA7V,GAAA0W,EAAAF,EAAAN,KAIA,OAAAL,GAlEAtX,EAAAoY,UAqFA,SAAA3X,EAAAwX,EAAAb,GACA,IAAAG,EAAAH,GAAA,GACAiB,EAAAd,EAAAe,UAEA,sBAAAD,EACA,UAAAhB,UAAA,4BAGA,IAAAkB,EAAAhU,KAAA9D,GACA,UAAA4W,UAAA,4BAGA,IAAAlW,EAAAkX,EAAAJ,GAEA,GAAA9W,IAAAoX,EAAAhU,KAAApD,GACA,UAAAkW,UAAA,2BAGA,IAAAF,EAAA1W,EAAA,IAAAU,EAEA,SAAAoW,EAAAiB,OAAA,CACA,IAAAA,EAAAjB,EAAAiB,OAAA,EACA,GAAAnS,MAAAmS,GAAA,UAAAzU,MAAA,6BACAoT,GAAA,aAAasB,KAAAC,MAAAF,GAGb,GAAAjB,EAAAoB,OAAA,CACA,IAAAJ,EAAAhU,KAAAgT,EAAAoB,QACA,UAAAtB,UAAA,4BAGAF,GAAA,YAAaI,EAAAoB,OAGb,GAAApB,EAAArP,KAAA,CACA,IAAAqQ,EAAAhU,KAAAgT,EAAArP,MACA,UAAAmP,UAAA,0BAGAF,GAAA,UAAaI,EAAArP,KAGb,GAAAqP,EAAAhQ,QAAA,CACA,sBAAAgQ,EAAAhQ,QAAAqR,YACA,UAAAvB,UAAA,6BAGAF,GAAA,aAAaI,EAAAhQ,QAAAqR,cAGbrB,EAAAsB,WACA1B,GAAA,cAGAI,EAAAjP,SACA6O,GAAA,YAGA,GAAAI,EAAApP,SAAA,CACA,IAAAA,EAAA,iBAAAoP,EAAApP,SACAoP,EAAApP,SAAAuB,cAAA6N,EAAApP,SAEA,OAAAA,GACA,OACAgP,GAAA,oBACA,MACA,UACAA,GAAA,iBACA,MACA,aACAA,GAAA,oBACA,MACA,QACA,UAAAE,UAAA,+BAIA,OAAAF,GA3JA,IAAAS,EAAAkB,mBACAR,EAAAS,mBACArB,EAAA,MAUAa,EAAA,wCA0JA,SAAAJ,EAAAhB,EAAAS,GACA,IACA,OAAAA,EAAAT,GACG,MAAA1R,GACH,OAAA0R,mBChMAlX,EAAAD,QAAA,SAAAgZ,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAhZ,EAAAW,OAAAY,OAAAwX,GAEA/Y,EAAAiZ,WAAAjZ,EAAAiZ,SAAA,IACAtY,OAAAC,eAAAZ,EAAA,UACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAE,KAGAS,OAAAC,eAAAZ,EAAA,MACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAC,KAGAU,OAAAC,eAAAZ,EAAA,WACAa,YAAA,IAEAb,EAAAgZ,gBAAA,EAEA,OAAAhZ,kCCtBA,SAAAA,GAAAH,EAAAU,EAAA0B,EAAA,sBAAAiX,IAAArZ,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAcO,MAAMqZ,EAAoBlZ,EAAOD,4DCdxC,IAAAoZ,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBC,SAAUF,EAAA,OACV1F,YAAa0F,EAAA,OACb7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH3J,YAAa0J,EAAA,OACbzL,MAAOyL,EAAA,OACP5K,SAAU4K,EAAA,OACVG,eAAgBH,EAAA,OAChBI,iBAAkBJ,EAAA,OAClBK,kBAAmBL,EAAA,OACnBM,OAAQN,EAAA,OACR9K,KAAM8K,EAAA,OACNO,SAAUP,EAAA,OACV3Y,KAAM2Y,EAAA,OAAiBC,WACvB9J,OAAQ6J,EAAA,QAAkBA,EAAA,QAC1B5F,OAAQ4F,EAAA,QAAkBA,EAAA,QAC1B7K,QAAS6K,EAAA,OACTQ,QAASR,EAAA,uCC3BV,IAAAA,EAAAtZ,EAAA,GAE4BsZ,EAAA,MAAgB,CAC3C7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHhE,OAAQ+D,EAAA,QACPA,EAAA,MAAgB,CACf9D,eAAgB8D,EAAA,OAAiBC,WACjCjE,QAASgE,EAAA,OAAiBC,WAC1BxL,KAAMuL,EAAA,OAAiBC,cAGzBQ,MAAOT,EAAA,QAAkBA,EAAA,OAAiBC,4CCnB3C,IAAAD,EAAAtZ,EAAA,GAE2BsZ,EAAA,MAAgB,CAC1C7V,IAAK6V,EAAA,OAAiBC,WACtBS,aAAcV,EAAA,OACd7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHU,SAAUX,EAAA,OACVY,WAAYZ,EAAA,OACZhE,QAASgE,EAAA,OAAiBC,WAC1B5Y,KAAM2Y,EAAA,OAAiBC,WACvBY,MAAOb,EAAA,OAAiBC,WACxB7J,OAAQ4J,EAAA,OAAiBC,WACzBa,QAASd,EAAA,OAAiBC,2CCnB3B,IAAAD,EAAAtZ,EAAA,GAE+BsZ,EAAA,MAAgB,CAC9C7V,IAAK6V,EAAA,OAAiBC,WACtBlI,UAAWiI,EAAA,OAAiBC,WAC5B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHnI,QAASkI,EAAA,IACTe,gBAAiBf,EAAA,OACjB5J,OAAQ4J,EAAA,OAAiBC,WACzBe,iBAAkBhB,EAAA,uCChBnB,IAAAA,EAAAtZ,EAAA,GAEmBsZ,EAAA,MAAgB,CAClC7V,IAAK6V,EAAA,OAAiBC,WACtBgB,kBAAmBjB,EAAA,OACnBrG,MAAOqG,EAAA,QAAkBA,EAAA,QAAkBC,WAC3C9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH5L,SAAU2L,EAAA,OAAiBC,WAC3B9J,OAAQ6J,EAAA,QAAkBA,EAAA,QAC1BlH,UAAWkH,EAAA,UAAoB,CAC9BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlH,SAAUiH,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHiB,cAAelB,EAAA,KACfxH,MAAOwH,EAAA,OAAiBC,WACxBkB,mBAAoBnB,EAAA,uCC1BrB,IAAAA,EAAAtZ,EAAA,GAEwBsZ,EAAA,MAAgB,CACvC7V,IAAK6V,EAAA,OAAiBC,WACtBvF,QAASsF,EAAA,OAAiBC,WAC1B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHxF,QAASuF,EAAA,OAAiBC,WAC1BrF,MAAOoF,EAAA,QAAkBA,EAAA,QAAkBC,WAC3C5D,KAAM2D,EAAA,OAAiBC,WACvBtF,UAAWqF,EAAA,OAAiBC,2CChB7B,IAAAD,EAAAtZ,EAAA,GAE4BsZ,EAAA,MAAgB,CAC3C7V,IAAK6V,EAAA,OAAiBC,WACtBmB,QAASpB,EAAA,QACRA,EAAA,MAAgB,CACfjD,MAAOiD,EAAA,OAAiBC,WACxB3C,KAAM0C,EAAA,OACNlC,QAASkC,EAAA,UAGX7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlD,MAAOiD,EAAA,OAAiBC,WACxBjE,QAASgE,EAAA,OAAiBC,WAC1BoB,WAAYrB,EAAA,KACZ5J,OAAQ4J,EAAA,OAAiBC,2CCtB1B,IAAAD,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBqB,KAAMtB,EAAA,KACNzV,KAAMyV,EAAA,OACN7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHsB,IAAKvB,EAAA,KACLwB,KAAMxB,EAAA,KACN1C,KAAM0C,EAAA,OACNO,SAAUP,EAAA,OACVyB,UAAWzB,EAAA,OACXxC,MAAOwC,EAAA,OACP0B,OAAQ1B,EAAA,uCCpBT,IAAAA,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBlI,UAAWiI,EAAA,OAAiBC,WAC5B0B,YAAa3B,EAAA,QAAkBA,EAAA,QAC/B7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH2B,KAAM5B,EAAA,KAAeC,WACrBzQ,MAAOwQ,EAAA,IACP3C,QAAS2C,EAAA,OAAiBC,WAC1BzI,OAAQwI,EAAA,OAAiBC,WACzB9C,SAAU6C,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH7C,SAAU4C,EAAA,OAAiBC,WAC3B7J,OAAQ4J,EAAA,OAAiBC,2CCvB1B,IAAAD,EAAAtZ,EAAA,GAE8BsZ,EAAA,MAAgB,CAC7C7V,IAAK6V,EAAA,OAAiBC,WACtB4B,YAAa7B,EAAA,OACbjI,UAAWiI,EAAA,OAAiBC,WAC5B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHnI,QAASkI,EAAA,IACT8B,YAAa9B,EAAA,OACb5J,OAAQ4J,EAAA,OAAiBC,2CChB1B,IAAAD,EAAAtZ,EAAA,GAEsBsZ,EAAA,MAAgB,CACrC7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH3J,YAAa0J,EAAA,OACbzJ,SAAUyJ,EAAA,OAAiBC,WAC3BU,SAAUX,EAAA,OAAiBC,WAC3B9J,OAAQ6J,EAAA,QAAkBA,EAAA,QAAkBC,WAC5CzC,MAAOwC,EAAA,OAAiBC,2CChBzB,IAAAD,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtB8B,OAAQ/B,EAAA,KACRvC,MAAOuC,EAAA,KACPgC,SAAUhC,EAAA,OACViC,YAAajC,EAAA,KACbkC,gBAAiBlC,EAAA,KACjBmC,SAAUnC,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHmC,QAASpC,EAAA,OAAiBC,WAC1B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH3J,YAAa0J,EAAA,OACbzL,MAAOyL,EAAA,OACPqC,cAAerC,EAAA,KACf5K,SAAU4K,EAAA,OACVrN,UAAWqN,EAAA,OAAiBC,WAC5B/K,KAAM8K,EAAA,OACNsC,UAAWtC,EAAA,UAAoB,CAC9BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHsC,YAAavC,EAAA,OAAiBC,WAC9BpN,SAAUmN,EAAA,OAAiBC,WAC3BrN,WAAYoN,EAAA,OACZwC,QAASxC,EAAA,OACTyC,OAAQzC,EAAA,OACR0C,qBAAsB1C,EAAA,KACtB2C,WAAY3C,EAAA,KACZ4C,iBAAkB5C,EAAA,KAClB6C,eAAgB7C,EAAA,KAChB7K,QAAS6K,EAAA,OACT8C,WAAY9C,EAAA,KACZ+C,aAAc/C,EAAA,qCC3Cf,IAAAA,EAAAtZ,EAAA,GAEqBsZ,EAAA,MAAgB,CACpC7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH3J,YAAa0J,EAAA,OAAiBC,WAC9B1L,MAAOyL,EAAA,OACP5K,SAAU4K,EAAA,OACVG,eAAgBH,EAAA,OAChBI,iBAAkBJ,EAAA,OAClBK,kBAAmBL,EAAA,OACnBM,OAAQN,EAAA,OACR9K,KAAM8K,EAAA,OACN3L,SAAU2L,EAAA,OAAiBC,WAC3B+C,SAAUhD,EAAA,OACV3Y,KAAM2Y,EAAA,OAAiBC,WACvBgD,eAAgBjD,EAAA,QACfA,EAAA,MAAgB,CACfkD,YAAalD,EAAA,OACbhP,KAAMgP,EAAA,KACNmD,YAAanD,EAAA,UAGf7J,OAAQ6J,EAAA,QAAkBA,EAAA,QAC1BoD,MAAOpD,EAAA,OACP5F,OAAQ4F,EAAA,QAAkBA,EAAA,QAC1B7K,QAAS6K,EAAA,OACTQ,QAASR,EAAA,yBClCV,WAAanZ,EAAAD,QAAAyC,KAAA,MAAb,mBCAA,WAAaxC,EAAAD,QAAAyC,KAAA,oBAAb,iCCAA3C,EAAAkB,EAAAkB,GAAA,SAAAjC,GAAA,IAAAwc,EAAA3c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,sCAAAua,EAAA,QAAAvR,EAAApL,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,wBAAAgJ,EAAA,QAAAC,EAAArL,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,yBAAAiJ,EAAA,WAAAC,EAAAtL,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAAkJ,EAAA,mBAAAsR,EAAA5c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,gCAAAwa,EAAA,kBAAAC,EAAA7c,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,oCAAAya,EAAA,sBAAAC,EAAA9c,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,wBAAA0a,EAAA,UAAAC,EAAA/c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,gCAAA2a,EAAA,kBAAAC,EAAAhd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,6BAAA4a,EAAA,eAAAC,EAAAjd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAA6a,EAAA,mBAAAC,EAAAld,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,yBAAA8a,EAAA,WAAAC,EAAAnd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,yBAAA+a,EAAA,WAAAC,EAAApd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,4BAAAgb,EAAA,cAAAC,EAAArd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,+BAAAib,EAAA,QAAAC,EAAAtd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,mCAAAkb,EAAA,qBAAAC,EAAAvd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,2BAAAmb,EAAA,aAAAC,EAAAxd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,yBAAAob,EAAA,WAAAC,EAAAzd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,0BAAAqb,EAAA,YAAAC,EAAA1d,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,qCAAAsb,EAAA,IAiCsB,oBAAX3S,SACTA,OAAe4S,YAAcxd,EAAOD,4DCzBtC,IAAA0d,EAA2B5d,EAAQ,IAEnC,SAAA6d,KACA,SAAAC,KACAA,EAAAC,kBAAAF,EAEA1d,EAAAD,QAAA,WACA,SAAA8d,EAAAtb,EAAAub,EAAAC,EAAAvQ,EAAAwQ,EAAA/R,GACA,GAAAA,IAAAwR,EAAA,CAIA,IAAAQ,EAAA,IAAAna,MACA,mLAKA,MADAma,EAAAzd,KAAA,sBACAyd,GAGA,SAAAC,IACA,OAAAL,EAFAA,EAAAzE,WAAAyE,EAMA,IAAAM,EAAA,CACAC,MAAAP,EACAQ,KAAAR,EACAS,KAAAT,EACAU,OAAAV,EACAlc,OAAAkc,EACAW,OAAAX,EACAY,OAAAZ,EAEAa,IAAAb,EACAc,QAAAT,EACAU,QAAAf,EACAgB,YAAAhB,EACAiB,WAAAZ,EACAa,KAAAlB,EACAmB,SAAAd,EACAe,MAAAf,EACAgB,UAAAhB,EACAiB,MAAAjB,EACAkB,MAAAlB,EAEAmB,eAAA1B,EACAC,kBAAAF,GAKA,OAFAS,EAAAmB,UAAAnB,EAEAA,iCCnDAne,EAAAD,QAFA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport interface DocumentI {\n\tModelName: string;\n\t_id: string;\n\treadonly dateCreated: string;\n\tdateModified: string;\n}\n\nexport class ModelClass<D extends DocumentI> {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, ModelClass<any>> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<Array<ModelClass<any>>>);\n\tpublic static findOne: ((criteria: any) => Promise<ModelClass<any> | null>);\n\tpublic static findById: ((id: string) => Promise<ModelClass<any> | null>);\n\n\t[propName: string]: any;\n\tpublic get id(): string | null {\n\t\treturn this.changes._id || this._id;\n\t}\n\tpublic set id(value: string | null) {\n\t\tif (this._id !== value && value) {\n\t\t\tthis.changes._id = value;\n\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t}\n\t}\n\tpublic changes: D;\n\tpublic readonly document: D;\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\n\tpublic static CacheGet<ModelT extends ModelClass<any>>(id: string): ModelT | null {\n\t\tif (typeof id === \"string\" && ModelClass.Cache.has(id)) {\n\t\t\tconst cache: ModelT | undefined = ModelClass.Cache.get(id) as ModelT;\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet<ModelT extends ModelClass<any>>(data: ModelClass<any>): ModelT | null {\n\t\tif (data._id && ModelClass.isValidId(data._id)) {\n\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\treturn data as ModelT;\n\t\t}\n\t\treturn data as ModelT;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tModelClass.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = ModelClass.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model && Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static async findByIdBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, id: string):\n\t\t\tPromise<ModelT|null> {\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tModelClass.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: Array<ModelClass<any>> = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items as ModelT[]; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tModelClass.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(propNames: Array<string | symbol | number>, props?: D) {\n\t\tconst self = this;\n\t\tthis.changes = new Object() as D;\n\t\tthis.document = (props ? props : new Object()) as D;\n\t\tpropNames.forEach((key) => {\n\t\t\tObject.defineProperty(self, key, {\n\t\t\t\tget: () => {\n\t\t\t\t\tconst value = self.changes[key];\n\t\t\t\t\tif (value !== undefined) { return value; }\n\t\t\t\t\treturn self.document[key];\n\t\t\t\t},\n\t\t\t\tset: (value: any) => {\n\t\t\t\t\tif (self.document[key] !== value) {\n\t\t\t\t\t\tself.changes[key] = value;\n\t\t\t\t\t\tself.changes.dateModified = (new Date()).toISOString();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.changes = new Object() as D;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.isValid() ? { ...this.document, ...this.changes } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = `${object._id}`;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tif (typeof this.document._id === \"undefined\") {\n\t\t\treturn new Error(\"_id is undefined\");\n\t\t}\n\n\t\tif (this.document._id && !ModelClass.isValidId(this.document._id)) {\n\t\t\treturn new Error(`Invalid id: ${this.document._id}`);\n\t\t}\n\n\t\tif (typeof this.document.dateModified === \"undefined\") {\n\t\t\treturn new Error(\"dateModified is undefined\");\n\t\t}\n\n\t\tif (this.document.dateModified &&\n\t\t\tisNaN(Date.parse(this.document.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.document.dateModified}`);\n\t\t}\n\n\t\tif (typeof this.document.dateCreated === \"undefined\") {\n\t\t\treturn new Error(\"dateCreated is undefined\");\n\t\t}\n\n\t\tif (this.document.dateCreated &&\n\t\t\tisNaN(Date.parse(this.document.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.document.dateCreated}`);\n\t\t}\n\n\t\tif (this.changes._id &&\n\t\t\t!ModelClass.isValidId(this.changes._id)) {\n\t\t\treturn new Error(`Invalid id: ${this.changes._id}`);\n\t\t}\n\n\t\tif (this.changes.dateModified && isNaN(Date.parse(this.changes.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.changes.dateModified}`);\n\t\t}\n\n\t\tif (this.changes.dateCreated && isNaN(Date.parse(this.changes.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.changes.dateCreated}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\ttry {\n\t\t\tconst superError = this.anyErrors();\n\t\t\tif (superError) { throw superError; }\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this[key]) { delete data[key]; }\n\t\t});\n\t\tdata._id = `${this.changes._id || this._id || null}`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tObject.assign(this, response);\n\t\t\tthis.clearChanges();\n\t\t\tModelClass.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tModelClass.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.SocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\ntype OnlineStatusTypes = \"default\" | \"offline\" | \"busy\";\n\ninterface UserI extends DocumentI {\n\ticon: string | null;\n\tfirstName: string;\n\tmiddleName: string;\n\tlastName: string;\n\tbirthday: Date;\n\tcountry: string;\n\tbandManager: boolean;\n\tvenueManager: boolean;\n\tpassword?: string;\n\tconfirmPassword?: string;\n\tbetaFeatureUser: boolean;\n\tsendAnonymousReports: boolean;\n\tsendErrorReports: boolean;\n\tsendEmails: boolean;\n\tsendPromotions: boolean;\n\tuseCookies: boolean;\n\tdescription: string;\n\tactive: boolean;\n\tpaypal: string | null;\n\tfacebook: string | null;\n\ttwitter: string | null;\n\temailVerified: boolean;\n\tcanFind: boolean;\n\tpayment: string | null;\n\tverificationSecret: string | null;\n\tadmin: boolean;\n\tattempts: number;\n\tlastLogin: Date;\n\tlastLoginIP: string;\n\toptions: any;\n\tconnections: string[];\n\tblocked: string[];\n\temail: string;\n\thash: string;\n\tsalt: string;\n\tonlineStatus: OnlineStatusTypes;\n}\n\nexport class User extends ModelClass<UserI> {\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(Notification, null) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase(Upload, null) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<Array<Band | Location | Page | Upload | User | Venue>> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: Array<Band | Location | Page | Upload | User | Venue>) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve([]);\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"null\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (skip !== 0 && Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn ModelClass.findManyBase(User, criteria) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn ModelClass.findOneBase(User, criteria) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: UserI | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, id) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.isValid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic constructor(props: UserI) {\n\t\tsuper(keys<UserI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getConnections(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.connections.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic getBlocked(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.blocked.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (this.id) {\n\t\t\t// Type checks\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.firstName)) {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.lastName)) {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.password)) {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.confirmPassword)) {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.email)) {\n\t\t\t\treturn new Error(`Invalid email: ${this.changes.email}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Type checks\n\t\t\tif (typeof this.changes.firstName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.lastName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.password !== \"string\") {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.confirmPassword !== \"string\") {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: More validation checks?\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface UploadI extends DocumentI {\n\tfileData: string;\n\tsrcMIMEType: string;\n\tcroppedFileData: string;\n\towners: string[];\n\tdescription: string;\n\thash: string;\n\tbytes: number;\n\twidth: number;\n\theight: number;\n\toffsetWidth: number;\n\toffsetHeight: number;\n\toffsetLeft: number;\n\toffsetTop: number;\n}\n\nexport class Upload extends ModelClass<UploadI> {\n\tpublic static ModelName: string = \"Upload\";\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase<Upload>(Upload, id);\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn ModelClass.findOneBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, null);\n\t}\n\n\tpublic constructor(props: UploadI) {\n\t\tsuper(keys<UploadI>(), props);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase<User>(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (!this.description) { return new Error(`Invalid description: ${this.description}`); }\n\t\tif (!this.fileData) { return new Error(`Invalid fileData: ${this.fileData}`); }\n\t\tif (!this.width) { return new Error(`Invalid width: ${this.width}`); }\n\t\tif (!this.height) { return new Error(`Invalid height: ${this.height}`); }\n\t\tif (!this.offsetWidth) { return new Error(`Invalid offsetWidth: ${this.offsetWidth}`); }\n\t\tif (!this.offsetHeight) { return new Error(`Invalid offsetHeight: ${this.offsetHeight}`); }\n\t\tif (typeof this.offsetLeft !== \"number\" ||\n\t\t\tthis.offsetLeft < 0) {\n\t\t\t\treturn new Error(`Invalid offsetLeft: ${this.offsetLeft}`);\n\t\t\t}\n\t\tif (typeof this.offsetTop !== \"number\" ||\n\t\t\tthis.offsetTop < 0) {\n\t\t\treturn new Error(`Invalid offsetTop: ${this.offsetTop}`);\n\t\t}\n\n\t\tif (!this.document.hash) { return new Error(`Invalid hash: ${this.document.hash}`); }\n\t\tif (!this.document.bytes) { return new Error(`Invalid bytes: ${this.document.bytes}`); }\n\t\tif (!Array.isArray(this.document.owners) ||\n\t\t\tthis.document.owners.length === 0) {\n\t\t\treturn new Error(`Invalid owners: ${this.document.owners}`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface FacebookAccountI extends DocumentI {\n\taccountId: string;\n\tpageToken: string;\n\tprofile: any;\n\tuserAccessToken: string;\n\tuserRefreshToken: string;\n\tuserId: string;\n}\n\nexport class FacebookAccount extends ModelClass<FacebookAccountI> {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findOneBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn ModelClass.findManyBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic constructor(props: FacebookAccountI) {\n\t\tsuper(keys<FacebookAccountI>(), props);\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Venue } from \"./Venue\";\n\ninterface GigI extends DocumentI {\n\tstartTime: Date;\n\tstopTime: Date;\n\tlocation: string;\n\tvenue: string;\n\tbands: string[];\n\ttoBeAnnounced: boolean;\n\tbandOwnersAccepted: string[];\n\tvenueOwnerAccepted: string;\n\towners: string[];\n}\n\nexport class Gig extends ModelClass<GigI> {\n\tpublic static ModelName: string = \"Gig\";\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn ModelClass.findByIdBase(Gig, id) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, criteria) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic constructor(props: GigI) {\n\t\tsuper(keys<GigI>(), props);\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, { _id: this.bands }) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, this.venue) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn ModelClass.findByIdBase(Location, this.location) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface TwitterAccountI extends DocumentI {\n\tuserId: string;\n\taccountId: string;\n\taccessToken: string;\n\ttokenSecret: string;\n\tprofile: any;\n}\n\nexport class TwitterAccount extends ModelClass<TwitterAccountI> {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findOneBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn ModelClass.findManyBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic constructor(props: TwitterAccountI) {\n\t\tsuper(keys<TwitterAccountI>(), props);\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface BandI extends DocumentI {\n\tname: string;\n\twebsite: string;\n\temail: string;\n\tcityName: string;\n\tcityPlaceID: string;\n\tdescription: string;\n\tmetadata: string;\n\ticon: string | null;\n\tphotos: string[];\n\towners: string[];\n\tfacebook: string | null;\n\tfacebookPageId: string | null;\n\tfacebookPageName: string | null;\n\tfacebookPageToken: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n}\n\nexport class Band extends ModelClass<BandI> {\n\tpublic static ModelName: string = \"Band\";\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn ModelClass.findOneBase(Band, criteria) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, criteria) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn ModelClass.findByIdBase(Band, id) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic constructor(props: BandI) {\n\t\tsuper(keys<BandI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn ModelClass.findByIdBase(Upload, this.icon) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn ModelClass.findManyBase(\n\t\t\t\t\tUpload, { _id: photos }\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst error = super.anyErrors();\n\t\tif (error) { return error; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") {\n\t\t\treturn new Error(`cityPlaceID is not a string, it's ${typeof this.cityPlaceID} instead`);\n\t\t}\n\t\tif (this.cityPlaceID === \"\") {\n\t\t\treturn new Error(\"cityPlaceID is empty\");\n\t\t}\n\n\t\tif (typeof this.name !== \"string\") {\n\t\t\treturn new Error(\"name is not a string\");\n\t\t}\n\t\tif (this.name === \"\") {\n\t\t\treturn new Error(\"name is empty\");\n\t\t}\n\n\t\tif (typeof this.description !== \"string\") {\n\t\t\treturn new Error(\"description is not a string\");\n\t\t}\n\t\tif (this.description === \"\") {\n\t\t\treturn new Error(\"description is empty\");\n\t\t}\n\t\tif (this.description === \"<p><br></p>\") {\n\t\t\treturn new Error(\"description is practically empty\");\n\t\t}\n\n\t\tif (!Array.isArray(this.owners)) {\n\t\t\treturn new Error(\"owners is not an array\");\n\t\t}\n\t\tif (this.owners.length === 0) {\n\t\t\treturn new Error(\"owners does not contain a single id\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ntype LocationType = \"Point\" | \"LineString\" | \"Polygon\";\n\ninterface LocationI extends DocumentI {\n\ttype: LocationType;\n\tplaceId: string;\n\taddress: string;\n\tpoint: number[];\n\tutcOffset: number;\n}\n\nexport class Location extends ModelClass<LocationI> {\n\tpublic static ModelName: string = \"Location\";\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn ModelClass.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn ModelClass.findManyBase(Location, criteria) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic constructor(props: LocationI) {\n\t\tsuper(keys<LocationI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface VenueI extends DocumentI {\n\towners: string[];\n\tname: string;\n\tdescription: string;\n\twebsite: string;\n\tphone: string;\n\temail: string;\n\tlocation: string;\n\topenCloseTimes: Array<{\n\t\topen: boolean;\n\t\topeningTime: string;\n\t\tclosingTime: string;\n\t}>;\n\ticon: string | null;\n\tphotos: string[];\n\tfacebook: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n\tmetadata: string;\n\tfacebookPageId: string;\n\tfacebookPageName: string;\n\tfacebookPageToken: string;\n}\n\nexport class Venue extends ModelClass<VenueI> {\n\tpublic static ModelName: string = \"Venue\";\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn ModelClass.findOneBase(Venue, criteria) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, criteria) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, id) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic constructor(props: VenueI) {\n\t\tsuper(keys<VenueI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUpload, { _id: photos }\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, this.location || \"\") as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!ModelClass.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\ninterface ConversationI extends DocumentI {\n\tevents: ConversationEvent[];\n\tusers: string[];\n}\n\nexport class Conversation extends ModelClass<ConversationI> {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tModelClass.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tModelClass.CacheSet<Conversation>(conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn ModelClass.findByIdBase(Conversation, id) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn ModelClass.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, criteria) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic constructor(props: ConversationI) {\n\t\tsuper(keys<ConversationI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface GooglePlaceI extends DocumentI {\n\tplaceId: string;\n\tdetails: any;\n}\n\nexport class GooglePlace extends ModelClass<GooglePlaceI> {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn ModelClass.findManyBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic constructor(props: GooglePlaceI) {\n\t\tsuper(keys<GooglePlaceI>(), props);\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\ninterface NotificationI extends DocumentI {\n\tactions: NotificationAction[];\n\tlabel: string;\n\tmessage: string;\n\tseenByUser: boolean;\n\tuserId: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends ModelClass<NotificationI> {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(\"Notification\", null) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn ModelClass.findByIdBase(\"Notification\", id) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic constructor(props: NotificationI) {\n\t\tsuper(keys<NotificationI>(), props);\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PostI extends DocumentI {\n\taccountId: string;\n\tcoordinates: number[];\n\tdone: boolean;\n\terror: any;\n\tnetwork: string;\n\tpageId: string;\n\tpostDate: Date;\n\tpostText: string;\n\tuserId: string;\n}\n\nexport class Post extends ModelClass<PostI> {\n\tpublic static ModelName: string = \"Post\";\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn ModelClass.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn ModelClass.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic constructor(props: PostI) {\n\t\tsuper(keys<PostI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface ErrorReportI extends DocumentI {\n\tworthReporting: boolean;\n\tuserId: string | null;\n\tversion: string;\n\tstack: string;\n\tmessage: string;\n\tname: string;\n\tfileName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport class ErrorReport extends ModelClass<ErrorReportI> {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn ModelClass.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic constructor(props: ErrorReportI) {\n\t\tsuper(keys<ErrorReportI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PageI extends DocumentI {\n\tadmin: string;\n\tmetadata: string;\n\tdata: string;\n\ttitle: string;\n\tlink: string;\n\tvisits: number;\n\trevisions: number;\n\thide: boolean;\n\tblog: boolean;\n\tdoc: boolean;\n}\n\nexport class Page extends ModelClass<PageI> {\n\tpublic static ModelName: string = \"Page\";\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn ModelClass.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn ModelClass.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn ModelClass.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic constructor(props: PageI) {\n\t\tsuper(keys<PageI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface RequestI extends DocumentI {\n\tto: string;\n\tfrom: string;\n\temailSent: boolean;\n\tstatus: string;\n\toptions: string[];\n\ttype: string;\n\tuserData: any;\n}\n\nexport class Request extends ModelClass<RequestI> {\n\tpublic static ModelName: string = \"Request\";\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn ModelClass.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn ModelClass.findByIdBase(Request, id);\n\t}\n\n\tpublic constructor(props: RequestI) {\n\t\tsuper(keys<RequestI>(), props);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { GigGizmoPropTypes } from \"./PropTypes\";\nexport { API } from \"./API\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport {\n\tNotification,\n\tNotificationAction\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { DocumentI, ModelClass } from \"./Model\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}