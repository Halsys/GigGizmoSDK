{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/Model.ts","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/ts-transformer-keys/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","ModelClass","_API__WEBPACK_IMPORTED_MODULE_1__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_2__","[object Object]","props","this","expiration","Date","getTime","self","changes","keysOfProps","document","set","dateModified","toISOString","id","_id","Cache","has","cache","data","isValidId","delete","ModelMaybe","Error","Model","modelName","getModelName","ModelName","constructor","pattern","RegExp","test","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","e","CacheSet","isArray","items","forEach","push","map","itemData","item","isValid","toObject","JSON","stringify","isNaN","parse","dateCreated","superError","anyErrors","assign","response","clearChanges","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","console","error","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_API__WEBPACK_IMPORTED_MODULE_0__","_Band__WEBPACK_IMPORTED_MODULE_1__","_Conversation__WEBPACK_IMPORTED_MODULE_2__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_3__","_Gig__WEBPACK_IMPORTED_MODULE_4__","_Model__WEBPACK_IMPORTED_MODULE_5__","_Notification__WEBPACK_IMPORTED_MODULE_6__","_Post__WEBPACK_IMPORTED_MODULE_7__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_8__","_Upload__WEBPACK_IMPORTED_MODULE_9__","_Venue__WEBPACK_IMPORTED_MODULE_10__","dataMaybe","super","fullName","firstName","middleName","lastName","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","undefined","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","email","password","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","icon","twitter","facebook","connections","findById","blocked","maybePassword","lowercaseFirstName","lowercaseLastName","includes","confirmPassword","validatePassword","agreement","EmailRegex","Upload","_Model__WEBPACK_IMPORTED_MODULE_0__","_User__WEBPACK_IMPORTED_MODULE_1__","owners","userId","find","description","fileData","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","hash","bytes","FacebookAccount","_Model__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","profile","accountId","Gig","_Location__WEBPACK_IMPORTED_MODULE_2__","_Model__WEBPACK_IMPORTED_MODULE_3__","_Venue__WEBPACK_IMPORTED_MODULE_4__","bandId","venueId","gigData","band","venue","times","filtered","filter","time","dayDate","startTime","stopTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","bands","TwitterAccount","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_0__","_Gig__WEBPACK_IMPORTED_MODULE_1__","_Model__WEBPACK_IMPORTED_MODULE_2__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_3__","_Upload__WEBPACK_IMPORTED_MODULE_4__","_User__WEBPACK_IMPORTED_MODULE_5__","photos","findByBand","cityPlaceID","owner","userIsOwner","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_1__","placeId","address","utcOffset","point","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","findByVenue","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","callbackId","conv","cb","message","events","dateTimePosted","save","maybeType","type","changeCallbacks","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","label","body","timestamp","requestPermission","getField","setField","network","postText","postDate","coordinates","done","link","page","title","admin","to","gig","gigId","option","request","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","cityName","facebookPageId","facebookPageName","facebookPageToken","google","metadata","website","users","columnNumber","fileName","lineNumber","stack","version","userAccessToken","userRefreshToken","bandOwnerAccepted","toBeAnnounced","venueOwnerAccepted","actions","seenByUser","blog","doc","hide","revisions","visits","accessToken","tokenSecret","active","attempts","bandManager","betaFeatureUser","birthday","country","emailVerified","lastLogin","lastLoginIP","payment","paypal","sendAnonymousReports","sendEmails","sendErrorReports","sendPromotions","useCookies","venueManager","metaData","openCloseTimes","closingTime","openingTime","phone","_PropTypes__WEBPACK_IMPORTED_MODULE_0__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Notification__WEBPACK_IMPORTED_MODULE_9__","_Page__WEBPACK_IMPORTED_MODULE_10__","_Post__WEBPACK_IMPORTED_MODULE_11__","_Request__WEBPACK_IMPORTED_MODULE_12__","_Model__WEBPACK_IMPORTED_MODULE_13__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_14__","_Upload__WEBPACK_IMPORTED_MODULE_15__","_User__WEBPACK_IMPORTED_MODULE_16__","_Venue__WEBPACK_IMPORTED_MODULE_17__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_18__","GigGizmoAPI","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport interface DocumentI {\n\tModelName: string;\n\t_id: string;\n\treadonly dateCreated: string;\n\tdateModified: string;\n}\n\nexport class ModelClass<D extends DocumentI> {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, ModelClass<any>> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<Array<ModelClass<any>>>);\n\tpublic static findOne: ((criteria: any) => Promise<ModelClass<any> | null>);\n\tpublic static findById: ((id: string) => Promise<ModelClass<any> | null>);\n\n\t[propName: string]: any;\n\tpublic get id(): string | null {\n\t\treturn this.changes._id || this._id;\n\t}\n\tpublic set id(value: string | null) {\n\t\tif (this._id !== value && value) {\n\t\t\tthis.changes._id = value;\n\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t}\n\t}\n\tpublic changes: D;\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\n\tpublic static CacheGet<ModelT extends ModelClass<any>>(id: string): ModelT | null {\n\t\tif (typeof id === \"string\" && ModelClass.Cache.has(id)) {\n\t\t\tconst cache: ModelT | undefined = ModelClass.Cache.get(id) as ModelT;\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet<ModelT extends ModelClass<any>>(data: ModelClass<any>): ModelT | null {\n\t\tif (data._id && ModelClass.isValidId(data._id)) {\n\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\treturn data as ModelT;\n\t\t}\n\t\treturn data as ModelT;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tModelClass.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = ModelClass.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static async findByIdBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, id: string):\n\t\t\tPromise<ModelT|null> {\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tModelClass.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: Array<ModelClass<any>> = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items as ModelT[]; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tModelClass.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(props?: D) {\n\t\tconst self = this;\n\t\tthis.changes = new Object() as D;\n\t\tif (props) {\n\t\t\tconst keysOfProps = keys<D>();\n\t\t\tfor (const key in keysOfProps) {\n\t\t\t\tif (key in keysOfProps) {\n\t\t\t\t\tObject.defineProperty(document, key, {\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn self.changes[key] || self[key as string];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: (value: any) => {\n\t\t\t\t\t\t\tif (this[key as string] !== value) {\n\t\t\t\t\t\t\t\tthis.changes[key] = value;\n\t\t\t\t\t\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.changes = new Object() as D;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.isValid() ? { ...this, ...this.changes } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = `${object._id}`;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tif (this.id &&\n\t\t\t!ModelClass.isValidId(this.id)) {\n\t\t\treturn new Error(`Invalid id: ${this.id}`);\n\t\t}\n\n\t\tif (this.dateModified && isNaN(Date.parse(this.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.dateModified}`);\n\t\t}\n\n\t\tif (this.dateCreated && isNaN(Date.parse(this.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.dateCreated}`);\n\t\t}\n\n\t\tif (this.changes._id &&\n\t\t\t!ModelClass.isValidId(this.changes._id)) {\n\t\t\treturn new Error(`Invalid id: ${this.changes._id}`);\n\t\t}\n\n\t\tif (this.changes.dateModified && isNaN(Date.parse(this.changes.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.changes.dateModified}`);\n\t\t}\n\n\t\tif (this.changes.dateCreated && isNaN(Date.parse(this.changes.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.changes.dateCreated}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\ttry {\n\t\t\tconst superError = this.anyErrors();\n\t\t\tif (superError) { throw superError; }\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this[key]) { delete data[key]; }\n\t\t});\n\t\tdata._id = `${this.changes._id || this._id || null}`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tObject.assign(this, response);\n\t\t\tthis.clearChanges();\n\t\t\tModelClass.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tModelClass.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.SocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\ntype OnlineStatusTypes = \"default\" | \"offline\" | \"busy\";\n\ninterface UserI extends DocumentI {\n\ticon: string | null;\n\tfirstName: string;\n\tmiddleName: string;\n\tlastName: string;\n\tbirthday: Date;\n\tcountry: string;\n\tbandManager: boolean;\n\tvenueManager: boolean;\n\tpassword?: string;\n\tconfirmPassword?: string;\n\tbetaFeatureUser: boolean;\n\tsendAnonymousReports: boolean;\n\tsendErrorReports: boolean;\n\tsendEmails: boolean;\n\tsendPromotions: boolean;\n\tuseCookies: boolean;\n\tdescription: string;\n\tactive: boolean;\n\tpaypal: string | null;\n\tfacebook: string | null;\n\ttwitter: string | null;\n\temailVerified: boolean;\n\tcanFind: boolean;\n\tpayment: string | null;\n\tverificationSecret: string | null;\n\tadmin: boolean;\n\tattempts: number;\n\tlastLogin: Date;\n\tlastLoginIP: string;\n\toptions: any;\n\tconnections: string[];\n\tblocked: string[];\n\temail: string;\n\thash: string;\n\tsalt: string;\n\tonlineStatus: OnlineStatusTypes;\n}\n\nexport class User extends ModelClass<UserI> {\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(Notification, null) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase(Upload, null) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<Array<Band | Location | Page | Upload | User | Venue>> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: Array<Band | Location | Page | Upload | User | Venue>) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve([]);\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"null\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (skip !== 0 && Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn ModelClass.findManyBase(User, criteria) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn ModelClass.findOneBase(User, criteria) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, id) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.isValid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tconstructor(dataMaybe?: any) {\n\t\tsuper(dataMaybe);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getConnections(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.connections.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic getBlocked(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.blocked.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (this.id) {\n\t\t\t// Type checks\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.firstName)) {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.lastName)) {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.password)) {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.confirmPassword)) {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.email)) {\n\t\t\t\treturn new Error(`Invalid email: ${this.changes.email}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Type checks\n\t\t\tif (typeof this.changes.firstName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.lastName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.password !== \"string\") {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.confirmPassword !== \"string\") {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: More validation checks?\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface UploadI extends DocumentI {\n\tfileData: string;\n\tsrcMIMEType: string;\n\tcroppedFileData: string;\n\towners: string[];\n\tdescription: string;\n\thash: string;\n\tbytes: number;\n\twidth: number;\n\theight: number;\n\toffsetWidth: number;\n\toffsetHeight: number;\n\toffsetLeft: number;\n\toffsetTop: number;\n}\n\nexport class Upload extends ModelClass<UploadI> {\n\tpublic static ModelName: string = \"Upload\";\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase<Upload>(Upload, id);\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn ModelClass.findOneBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, null);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase<User>(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (!this.description) { return new Error(`Invalid description: ${this.description}`); }\n\t\tif (!this.fileData) { return new Error(`Invalid fileData: ${this.fileData}`); }\n\t\tif (!this.width) { return new Error(`Invalid width: ${this.width}`); }\n\t\tif (!this.height) { return new Error(`Invalid height: ${this.height}`); }\n\t\tif (!this.offsetWidth) { return new Error(`Invalid offsetWidth: ${this.offsetWidth}`); }\n\t\tif (!this.offsetHeight) { return new Error(`Invalid offsetHeight: ${this.offsetHeight}`); }\n\t\tif (typeof this.offsetLeft !== \"number\" ||\n\t\t\tthis.offsetLeft < 0) {\n\t\t\t\treturn new Error(`Invalid offsetLeft: ${this.offsetLeft}`);\n\t\t\t}\n\t\tif (typeof this.offsetTop !== \"number\" ||\n\t\t\tthis.offsetTop < 0) {\n\t\t\treturn new Error(`Invalid offsetTop: ${this.offsetTop}`);\n\t\t}\n\n\t\tif (!this.document.hash) { return new Error(`Invalid hash: ${this.document.hash}`); }\n\t\tif (!this.document.bytes) { return new Error(`Invalid bytes: ${this.document.bytes}`); }\n\t\tif (!Array.isArray(this.document.owners) ||\n\t\t\tthis.document.owners.length === 0) {\n\t\t\treturn new Error(`Invalid owners: ${this.document.owners}`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface FacebookAccountI extends DocumentI {\n\taccountId: string;\n\tpageToken: string;\n\tprofile: any;\n\tuserAccessToken: string;\n\tuserRefreshToken: string;\n\tuserId: string;\n}\n\nexport class FacebookAccount extends ModelClass<FacebookAccountI> {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findOneBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn ModelClass.findManyBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Venue } from \"./Venue\";\n\ninterface GigI extends DocumentI {\n\tstartTime: Date;\n\tstopTime: Date;\n\tlocation: string;\n\tvenue: string;\n\tbands: string[];\n\ttoBeAnnounced: boolean;\n\tbandOwnersAccepted: string[];\n\tvenueOwnerAccepted: string;\n\towners: string[];\n}\n\nexport class Gig extends ModelClass<GigI> {\n\tpublic static ModelName: string = \"Gig\";\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn ModelClass.findByIdBase(Gig, id) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, criteria) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, { _id: this.bands }) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, this.venue) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn ModelClass.findByIdBase(Location, this.location) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface TwitterAccountI extends DocumentI {\n\tuserId: string;\n\taccountId: string;\n\taccessToken: string;\n\ttokenSecret: string;\n\tprofile: any;\n}\n\nexport class TwitterAccount extends ModelClass<TwitterAccountI> {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findOneBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn ModelClass.findManyBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface BandI extends DocumentI {\n\tname: string;\n\twebsite: string;\n\temail: string;\n\tcityName: string;\n\tcityPlaceID: string;\n\tdescription: string;\n\tmetadata: string;\n\ticon: string | null;\n\tphotos: string[];\n\towners: string[];\n\tfacebook: string | null;\n\tfacebookPageId: string | null;\n\tfacebookPageName: string | null;\n\tfacebookPageToken: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n}\n\nexport class Band extends ModelClass<BandI> {\n\tpublic static ModelName: string = \"Band\";\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn ModelClass.findOneBase(Band, criteria) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, criteria) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn ModelClass.findByIdBase(Band, id) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn ModelClass.findByIdBase(Upload, this.icon) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn ModelClass.findManyBase(\n\t\t\t\t\tUpload, { _id: photos }\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ntype LocationType = \"Point\" | \"LineString\" | \"Polygon\";\n\ninterface LocationI extends DocumentI {\n\ttype: LocationType;\n\tplaceId: string;\n\taddress: string;\n\tpoint: number[];\n\tutcOffset: number;\n}\n\nexport class Location extends ModelClass<LocationI> {\n\tpublic static ModelName: string = \"Location\";\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn ModelClass.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn ModelClass.findManyBase(Location, criteria) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface VenueI extends DocumentI {\n\towners: string[];\n\tname: string;\n\tdescription: string;\n\twebsite: string;\n\tphone: string;\n\temail: string;\n\tlocation: string;\n\topenCloseTimes: Array<{\n\t\topen: boolean;\n\t\topeningTime: string;\n\t\tclosingTime: string;\n\t}>;\n\ticon: string | null;\n\tphotos: string[];\n\tfacebook: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n\tmetadata: string;\n\tfacebookPageId: string;\n\tfacebookPageName: string;\n\tfacebookPageToken: string;\n}\n\nexport class Venue extends ModelClass<VenueI> {\n\tpublic static ModelName: string = \"Venue\";\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn ModelClass.findOneBase(Venue, criteria) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, criteria) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, id) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUpload, { _id: photos }\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, this.location || \"\") as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!ModelClass.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\ninterface ConversationDocument extends DocumentI {\n\tevents: ConversationEvent[];\n\tusers: string[];\n}\n\nexport class Conversation extends ModelClass<ConversationDocument> {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tModelClass.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tModelClass.CacheSet<Conversation>(conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn ModelClass.findByIdBase(Conversation, id) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn ModelClass.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, criteria) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface GooglePlaceI extends DocumentI {\n\tplaceId: string;\n\tdetails: any;\n}\n\nexport class GooglePlace extends ModelClass<GooglePlaceI> {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn ModelClass.findManyBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\ninterface NotificationI extends DocumentI {\n\tactions: NotificationAction[];\n\tlabel: string;\n\tmessage: string;\n\tseenByUser: boolean;\n\tuserId: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends ModelClass<NotificationI> {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(\"Notification\", null) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn ModelClass.findByIdBase(\"Notification\", id) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PostI extends DocumentI {\n\taccountId: string;\n\tcoordinates: number[];\n\tdone: boolean;\n\terror: any;\n\tnetwork: string;\n\tpageId: string;\n\tpostDate: Date;\n\tpostText: string;\n\tuserId: string;\n}\n\nexport class Post extends ModelClass<PostI> {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget network(): string { return this.getField(\"network\"); }\n\tset network(value: string) { this.setField(\"network\", value); }\n\n\tget accountId(): string { return this.getField(\"accountId\"); }\n\tset accountId(value: string) { this.setField(\"accountId\", value); }\n\n\tget pageId(): string { return this.getField(\"pageId\"); }\n\tset pageId(value: string) { this.setField(\"pageId\", value); }\n\n\tget postText(): string { return this.getField(\"postText\"); }\n\tset postText(value: string) { this.setField(\"postText\", value); }\n\n\tget postDate(): string { return this.getField(\"postDate\"); }\n\tset postDate(value: string) { this.setField(\"postDate\", value); }\n\n\tget coordinates(): number[] { return this.getField(\"coordinates\"); }\n\tset coordinates(value: number[]) { this.setField(\"coordinates\", value); }\n\n\tget error(): string { return this.getField(\"error\"); }\n\tset error(value: string) { this.setField(\"error\", value); }\n\n\tget done(): boolean { return this.getField(\"done\"); }\n\tset done(value: boolean) { this.setField(\"done\", value); }\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn ModelClass.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn ModelClass.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface ErrorReportI extends DocumentI {\n\tworthReporting: boolean;\n\tuserId: string | null;\n\tversion: string;\n\tstack: string;\n\tmessage: string;\n\tname: string;\n\tfileName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport class ErrorReport extends ModelClass<ErrorReportI> {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn ModelClass.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PageI extends DocumentI {\n\tadmin: string;\n\tmetadata: string;\n\tdata: string;\n\ttitle: string;\n\tlink: string;\n\tvisits: number;\n\trevisions: number;\n\thide: boolean;\n\tblog: boolean;\n\tdoc: boolean;\n}\n\nexport class Page extends ModelClass<PageI> {\n\tpublic static ModelName: string = \"Page\";\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn ModelClass.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn ModelClass.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn ModelClass.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface RequestI extends DocumentI {\n\tto: string;\n\tfrom: string;\n\temailSent: boolean;\n\tstatus: string;\n\toptions: string[];\n\ttype: string;\n\tuserData: any;\n}\n\nexport class Request extends ModelClass<RequestI> {\n\tpublic static ModelName: string = \"Request\";\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn ModelClass.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn ModelClass.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { GigGizmoPropTypes } from \"./PropTypes\";\nexport { API } from \"./API\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport {\n\tNotification,\n\tNotificationAction\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { DocumentI, ModelClass } from \"./Model\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"],"sourceRoot":""}