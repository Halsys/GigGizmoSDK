{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/Model.ts","webpack:///./src/API.ts","webpack:///./node_modules/ts-transformer-keys/index.js","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","ModelClass","_API__WEBPACK_IMPORTED_MODULE_0__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_1__","[object Object]","propNames","props","this","expiration","Date","getTime","self","changes","document","forEach","undefined","set","dateModified","toISOString","configurable","id","_id","Cache","has","cache","data","isValidId","delete","ModelMaybe","Error","Model","modelName","getModelName","ModelName","constructor","pattern","RegExp","test","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","e","CacheSet","isArray","items","push","map","itemData","item","isValid","toObject","JSON","stringify","isNaN","parse","dateCreated","superError","anyErrors","assign","response","clearChanges","method","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","console","error","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","close","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_API__WEBPACK_IMPORTED_MODULE_1__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_4__","_Gig__WEBPACK_IMPORTED_MODULE_5__","_Model__WEBPACK_IMPORTED_MODULE_6__","_Notification__WEBPACK_IMPORTED_MODULE_7__","_Post__WEBPACK_IMPORTED_MODULE_8__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_9__","_Upload__WEBPACK_IMPORTED_MODULE_10__","_Venue__WEBPACK_IMPORTED_MODULE_11__","super","fullName","firstName","middleName","lastName","secret","resovle","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","email","password","user","userData","EmailRegex","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","icon","twitter","facebook","connections","findById","blocked","maybePassword","lowercaseFirstName","lowercaseLastName","includes","confirmPassword","validatePassword","agreement","Upload","_Model__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","owners","userId","find","description","fileData","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","hash","bytes","FacebookAccount","_Model__WEBPACK_IMPORTED_MODULE_2__","_User__WEBPACK_IMPORTED_MODULE_3__","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","profile","accountId","Gig","_Location__WEBPACK_IMPORTED_MODULE_3__","_Model__WEBPACK_IMPORTED_MODULE_4__","_Venue__WEBPACK_IMPORTED_MODULE_5__","bandId","venueId","gigData","band","venue","times","filtered","filter","time","dayDate","startTime","stopTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","bands","TwitterAccount","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_1__","_Gig__WEBPACK_IMPORTED_MODULE_2__","_Model__WEBPACK_IMPORTED_MODULE_3__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","photos","findByBand","cityPlaceID","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_2__","placeId","address","utcOffset","point","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_5__","_Upload__WEBPACK_IMPORTED_MODULE_6__","_User__WEBPACK_IMPORTED_MODULE_7__","findByVenue","owner","userIsOwner","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","callbackId","conv","cb","message","events","dateTimePosted","save","maybeType","type","changeCallbacks","note","notes","onNewNotification","PushSupported","webNotification","setup","permission","label","body","timestamp","requestPermission","postDate","postText","network","link","page","title","admin","to","gig","gigId","option","request","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","cityName","facebookPageId","facebookPageName","facebookPageToken","google","metadata","website","users","columnNumber","fileName","lineNumber","stack","version","userAccessToken","userRefreshToken","bandOwnerAccepted","toBeAnnounced","venueOwnerAccepted","actions","seenByUser","blog","doc","hide","revisions","visits","coordinates","done","accessToken","tokenSecret","active","attempts","bandManager","betaFeatureUser","birthday","country","emailVerified","lastLogin","lastLoginIP","payment","paypal","sendAnonymousReports","sendEmails","sendErrorReports","sendPromotions","useCookies","venueManager","metaData","openCloseTimes","closingTime","openingTime","phone","_PropTypes__WEBPACK_IMPORTED_MODULE_1__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Model__WEBPACK_IMPORTED_MODULE_9__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_10__","_Notification__WEBPACK_IMPORTED_MODULE_11__","_Page__WEBPACK_IMPORTED_MODULE_12__","_Post__WEBPACK_IMPORTED_MODULE_13__","_Request__WEBPACK_IMPORTED_MODULE_14__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_15__","_Upload__WEBPACK_IMPORTED_MODULE_16__","_User__WEBPACK_IMPORTED_MODULE_17__","_Venue__WEBPACK_IMPORTED_MODULE_18__","global","GigGizmoSDK","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"0DACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,sBCjEAhC,EAAAD,QAAmBF,EAAQ,GAARA,iCCjBnBA,EAAAU,EAAA0B,EAAA,sBAAAC,IAAA,IAAAC,EAAAtC,EAAA,GAAAuC,EAAAvC,EAAA,IAUO,MAAMqC,EAoNZG,YAAmBC,EAA4CC,GAjMvDC,KAAAC,YACP,IAAKC,MACJC,UACD,KA+LA,MAAMC,EAAOJ,KACbA,KAAKK,QAAU,IAAIlC,OACnB6B,KAAKM,SAAYP,GAAgB,IAAI5B,OACrC2B,EAAUS,QAASvB,IAClBb,OAAOC,eAAegC,EAAMpB,EAAK,CAChCV,IAAK,KACJ,MAAMI,EAAQ0B,EAAKC,QAAQrB,GAC3B,YAAcwB,IAAV9B,EAA8BA,EAC3B0B,EAAKE,SAAStB,IAEtByB,IAAM/B,IACD0B,EAAKE,SAAStB,KAASN,IAC1B0B,EAAKC,QAAQrB,GAAON,EACpB0B,EAAKC,QAAQK,cAAe,IAAKR,MAAQS,gBAG3CtC,YAAY,EACZuC,cAAc,MA9NjBC,SACC,OAAOb,KAAKK,QAAQS,KAAOd,KAAKc,IAEjCD,OAAcnC,GACTsB,KAAKc,MAAQpC,GAASA,IACzBsB,KAAKK,QAAQS,IAAMpC,EACnBsB,KAAKK,QAAQK,cAAe,IAAKR,MAAQS,eAcpCd,gBAAgDgB,GACtD,GAAkB,iBAAPA,GAAmBnB,EAAWqB,MAAMC,IAAIH,GAAK,CACvD,MAAMI,EAA4BvB,EAAWqB,MAAMzC,IAAIuC,GACvD,GAAII,GAAS,IAAIf,KAAKe,EAAMhB,YAAc,IAAIC,KAC7C,OAAOe,EAGT,OAAO,KAGDpB,gBAAgDqB,GACtD,OAAIA,EAAKJ,KAAOpB,EAAWyB,UAAUD,EAAKJ,MACzCpB,EAAWqB,MAAMN,IAAIS,EAAKJ,IAAKI,GACxBA,GAEDA,EAGDrB,mBAAmBgB,GACzBnB,EAAWqB,MAAMK,OAAOP,GAGlBhB,gCAAgCwB,GAItC,GAAmB,OAAfA,EACH,MAAM,IAAIC,MAAM,+BAGjB,IAAIC,EAAa,KACbC,EAA2B,KAC/B,GAA0B,iBAAfH,EACVE,QAAcpD,OAAAyB,EAAA,EAAAzB,CAAiBkD,GAC/BG,EAAYH,MACN,IAA0B,mBAAfA,EAIjB,MAAM,IAAIC,iEAAiED,KAH3EE,EAAQF,EACRG,EAAY9B,EAAW+B,aAAaJ,GAKrC,GAAyB,iBAAdG,EACV,MAAM,IAAIF,iCAAiCC,KAG5C,GAAqB,mBAAVA,EACV,MAAM,IAAID,qBAAqBE,iCAGhC,MAAO,CACND,QACAC,aAIK3B,oBAAoB0B,GAC1B,OAAIA,GAASA,EAAMG,UAAoBH,EAAMG,UACzCH,GAASA,EAAMI,aAAiBJ,EAAMI,YAA6B,UAC9DJ,EAAMI,YAAoBD,UAE5B,GAGD7B,iBAAiBgB,GACvB,MAAMe,EAAUC,OAAO,sCAAuC,KAC9D,MACe,iBAAPhB,GAAmBe,EAAQE,KAAKjB,GAIlChB,0BAEJwB,EAAiBR,GAEnB,GAAInB,EAAWyB,UAAUN,GAAK,CAC7B,MAAMI,EAAQvB,EAAWqC,SAASlB,GAClC,GAAMI,EACL,OAAOA,EACD,CACN,IAAIC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAgBjE,GAdI1B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,oBAC1BhB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,IAClC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,QAAiBX,EAAIuB,IAG3CC,KAGEnB,IACJA,QAAavB,EAAA,EAAI/B,KAAK,cAAe4D,KAAaX,IAAM,OAErDK,GAAQxB,EAAWyB,UAAUD,EAAKJ,KAGrC,OAFAI,EAAO,IAAIK,EAAML,GACjBxB,EAAWqB,MAAMN,IAAIS,EAAKJ,IAAKI,GACxBA,GAIV,OAAO,KAGDrB,yBAEJwB,EAAiBqB,EAAgB,IAGnC,GADiB,OAAbA,IAAqBA,EAAW,IACa,IAA7CC,MAAMC,KAAKzE,OAAO0E,KAAKH,IAAWI,QAAwC,iBAAjBJ,EAAS5B,IAAkB,CACvF,MAAMD,EAAK6B,EAAS5B,IACdG,EAAQvB,EAAWqC,SAASlB,GAClC,GAAMI,EACL,OAAOA,EAGT,IAAIC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAC3D0B,UAAgBvB,YACtB,GAAI7B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,kBAAmB,CAC7C,MAAMM,QAAoB7C,EAAA,EAAI2C,YACxBE,IACLtB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,KAClC,IACCG,EAAOC,KAAKM,EAAOL,EAAUN,GAC5B,MAAOY,GACRX,EAAOW,OAMX,OADK9B,IAAQA,QAAavB,EAAA,EAAI/B,KAAK,MAAOmF,EAAOL,IAC3CxB,GAAQxB,EAAWyB,UAAUD,EAAKJ,MACvCI,EAAO,IAAIK,EAAML,GACjBxB,EAAWuD,SAAS/B,GACbA,GAED,KAGDrB,0BAEJwB,EAAiBqB,EAAgB,IAGnC,GADiB,OAAbA,IAAqBA,EAAW,IACa,IAA7CC,MAAMC,KAAKzE,OAAO0E,KAAKH,IAAWI,QAAgBH,MAAMO,QAASR,EAAS5B,KAAO4B,EAAS7B,IAAM,CACnG,MAAMsC,EAAgC,GAOtC,IANCT,EAAS5B,KAAO4B,EAAS7B,IAAIN,QAASM,IACtC,MAAMI,EAAQvB,EAAWqC,SAASlB,GAC9BI,GACHkC,EAAMC,KAAKnC,KAGTkC,EAAML,UAAYJ,EAAS5B,KAAO4B,EAAS7B,IAAO,OAAOsC,EAE9D,IAAIjC,EAAY,KAChB,MAAMK,MAAEA,EAAKC,UAAEA,SAAoB9B,EAAWsC,mBAAmBX,GAC3D0B,UAAgBvB,aActB,OAbI7B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,oBAC1BhB,QAAa,IAAIiB,QAAQ,CAACC,EAASC,IAClC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAKM,EAAOL,EAAUN,IAG/BC,KAGHK,EAAWA,GAAY,GAClBxB,IAAQA,QAAavB,EAAA,EAAI/B,KAAK,MAAOmF,EAAOL,IAC7CC,MAAMO,QAAQhC,GACVA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIhC,EAAM+B,GAEvB,OADA5D,EAAWuD,SAASM,GACbA,IAGF,GA0BD1D,eACNG,KAAKK,QAAU,IAAIlC,OAGb0B,WACN,MAAMV,EAASa,KAAKwD,UAAY,IAAKxD,KAAKM,YAAaN,KAAKK,SAAY,KAMxE,MALsB,iBAAXlB,GAAuBA,QACP,IAAfA,EAAO2B,MACjB3B,EAAO2B,OAAS3B,EAAO2B,OAGlB3B,EAGDU,WACN,MAAMV,EAASa,KAAKyD,WACpB,OAAOC,KAAKC,UAAUxE,GAGhBU,YACN,YAAiC,IAAtBG,KAAKM,SAASQ,IACjB,IAAIQ,MAAM,oBAGdtB,KAAKM,SAASQ,MAAQpB,EAAWyB,UAAUnB,KAAKM,SAASQ,KACrD,IAAIQ,qBAAqBtB,KAAKM,SAASQ,YAGL,IAA/Bd,KAAKM,SAASI,aACjB,IAAIY,MAAM,6BAGdtB,KAAKM,SAASI,cACjBkD,MAAM1D,KAAK2D,MAAM7D,KAAKM,SAASI,eACxB,IAAIY,+BAA+BtB,KAAKM,SAASI,qBAGhB,IAA9BV,KAAKM,SAASwD,YACjB,IAAIxC,MAAM,4BAGdtB,KAAKM,SAASwD,aACjBF,MAAM1D,KAAK2D,MAAM7D,KAAKM,SAASwD,cACxB,IAAIxC,8BAA8BtB,KAAKM,SAASwD,eAGpD9D,KAAKK,QAAQS,MACfpB,EAAWyB,UAAUnB,KAAKK,QAAQS,KAC5B,IAAIQ,qBAAqBtB,KAAKK,QAAQS,OAG1Cd,KAAKK,QAAQK,cAAgBkD,MAAM1D,KAAK2D,MAAM7D,KAAKK,QAAQK,eACvD,IAAIY,+BAA+BtB,KAAKK,QAAQK,gBAGpDV,KAAKK,QAAQyD,aAAeF,MAAM1D,KAAK2D,MAAM7D,KAAKK,QAAQyD,cACtD,IAAIxC,8BAA8BtB,KAAKK,QAAQyD,eAGhD,KAGDjE,UACN,IACC,MAAMkE,EAAa/D,KAAKgE,YACxB,GAAID,EAAc,MAAMA,EACvB,MAAOf,GACR,OAAO,EAER,OAAO,EAGDnD,OAAOqB,EAAe,IAE5B,OADA/C,OAAO8F,OAAOjE,KAAKK,QAASa,GACrBlB,KAGDH,aACN,MAAM2B,EAAaxB,KAAK2B,YAAoBD,UAC5C,IAAIwC,EAAgB,KACpB,MAAMrD,EAAKb,KAAKc,KAAO,KACjBI,EAAOlB,KAAKK,QAkClB,GAjCAlC,OAAO0E,KAAK7C,KAAKK,SAASE,QAASvB,IAC9BkC,EAAKlC,KAASgB,KAAKM,SAAStB,WAAekC,EAAKlC,KAErDkC,EAAKJ,IAAMd,KAAKK,QAAQS,KAAOd,KAAKc,UAAON,GAGzC0D,EAFEvE,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,kBACtBxC,EAAWyB,UAAUN,SACP,IAAIsB,QAAQ,CAACC,EAASC,IACtC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,QAAiBN,EAAMkB,IAG7CC,UAGe,IAAIF,QAAQ,CAACC,EAASC,IACtC1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aAAajB,IAAaN,EAAMkB,IAGzCC,IAIC3C,EAAWyB,UAAUN,SACPlB,EAAA,EAAI/B,KAAK,cAAe4D,KAAaX,IAAMK,SAE3CvB,EAAA,EAAI/B,KAAK,eAAgB4D,IAAaN,KAGzCgD,EAASpD,IAIxB,OAHA3C,OAAO8F,OAAOjE,KAAMkE,GACpBlE,KAAKmE,eACLzE,EAAWuD,SAASjD,MACbA,KAER,MAAM,IAAIsB,kBAAkB4C,KAGtBrE,eACN,MAAMgB,EAAKb,KAAKc,KAAO,GACvB,GAAIpB,EAAWyB,UAAUN,GAAK,CAC7B,MAAMW,EAAaxB,KAAK2B,YAAoBD,UAsB5C,OArBI/B,EAAA,EAAIsC,aAAetC,EAAA,EAAIuC,wBACpB,IAAIC,QAAQ,CAACC,EAASC,IAC3B1C,EAAA,EAAI2C,YAAYC,KACdC,IACIA,GACHA,EAAOC,aACEjB,QACR,CACC4C,OAAQ,SACRvD,MAEAwD,GAAajC,EAAQiC,KAGzBhC,UAGI1C,EAAA,EAAI/B,KAAK,iBAAkB4D,KAAaX,IAAM,MAGrDnB,EAAW4E,YAAYzD,GAChBb,KAER,MAAM,IAAIsB,qBAAqBT,MAjYlBnB,EAAAgC,UAAoB,YACpBhC,EAAAqB,MAAsC,IAAIwD,kCCZzDlH,EAAAU,EAAA0B,EAAA,sBAAA+E,IAAA,IAAAC,EAAApH,EAAA,IAAAqH,EAAArH,EAAA6B,EAAAuF,GAAAE,EAAAtH,EAAA,IAAAuH,EAAAvH,EAAA,IAAAwH,EAAAxH,EAAA6B,EAAA0F,GAAAE,EAAAzH,EAAA,IAQO,MAAemH,EA6RrB3E,cACC,MAAM,IAAIyB,MAAM,uBA7QVyD,qBACN,IAAKP,EAAIQ,UAAYR,EAAIS,OAAQ,CAChC,IAAIvG,EAAuB,KACvB8F,EAAIU,wBACPxG,EAAQyG,aAAaC,QAAQ,YAE9BZ,EAAIQ,SAAW,EAAU,IAAI9E,KAAKxB,GAAS,IAAIwB,KAEhD,OAAOsE,EAAIQ,SAELD,mBAAmBrG,GACzB8F,EAAIQ,SAAWtG,EACD,OAAVA,GAAkB8F,EAAIU,sBACzBC,aAAaE,WAAW,WACdb,EAAIU,uBAAyBV,EAAIQ,UAC3CG,aAAaG,QAAQ,UAAWd,EAAIQ,SAASrE,eAGxC4E,mBACN,MAAMC,EAAU,IAAItF,KACpB,GAAIsE,EAAIO,SAAWS,EAAUhB,EAAIO,QAKhC,OAJAP,EAAIS,OAAS,KACTT,EAAIU,uBACPC,aAAaE,WAAW,SAElB,KAER,IAAKb,EAAIS,QAAUT,EAAIU,sBAAuB,CAE7C,MAAMxG,EAAQyG,aAAaC,QAAQ,SAC/B1G,GAAmB,KAAVA,IACZ8F,EAAIS,OAASvB,KAAKG,MAAMnF,IAW1B,OARK8F,EAAIS,QAA8B,oBAAb3E,UAA4BA,SAASmF,SAE9DjB,EAAIS,OAAS9G,OAAAwG,EAAA,MAAAxG,CAAYmC,SAASmF,QAAQ,oBAEvCjB,EAAIS,QAAUT,EAAIU,uBAErBC,aAAaG,QAAQ,QAAS5B,KAAKC,UAAUa,EAAIS,SAE3CT,EAAIS,OAELM,iBAAiB7G,GACvB,GAAqB,iBAAVA,GAAuC,MAAjBA,EAAMoE,QAA4B,OAAVpE,EACxD,MAAM,IAAI4C,6BAA6B5C,KAElB,iBAAVA,GAAuC,IAAjBA,EAAMoE,QAClC0B,EAAIU,uBACPC,aAAaG,QAAQ,QAAS5B,KAAKC,UAAUjF,IAE9C8F,EAAIS,OAASvG,IAET8F,EAAIU,uBACPC,aAAaE,WAAW,SAEzBb,EAAIS,OAAS,MAEU,oBAAb3E,WACVA,SAASmF,OAAStH,OAAAwG,EAAA,UAAAxG,CAAgB,kBAAmBqG,EAAIS,QAAU,GAAI,CACtES,KAAM,IACNC,SAAU,YAMPC,qBACN,IAAIC,EAAM,GAYV,OAXIrB,EAAIsB,OACPD,GAAO,WAEPA,GAAO,UAERA,MAAUrB,EAAIuB,WACG,KAAbvB,EAAIwB,MAAgBxB,EAAIsB,OAEE,MAAnBtB,EAAIyB,YAAsBzB,EAAIsB,SACxCD,OAAWrB,EAAIyB,cAFfJ,OAAWrB,EAAIwB,OAITH,EAGDK,8BACN,IAAIL,EAAM,GAYV,OAXIrB,EAAIsB,OACPD,GAAO,SAEPA,GAAO,QAERA,MAAUrB,EAAIuB,WACG,KAAbvB,EAAIwB,MAAgBxB,EAAIsB,OAEE,MAAnBtB,EAAIyB,YAAsBzB,EAAIsB,SACxCD,OAAWrB,EAAIyB,cAFfJ,OAAWrB,EAAIwB,OAITH,EAGDhG,6BAA6BqB,GACnC,IACC,GACiB,iBAATA,GAAqBA,GACR,iBAAbA,EAAKJ,KACc,iBAAnBI,EAAKQ,UAEZ,OAAO,UAAWvD,OAAA2G,EAAA,EAAA3G,CAAiB+C,EAAKQ,YAAYR,GAEpD,MAAO8B,GACRmD,QAAQC,MAAMpD,GAGf,IACC,GACCL,MAAMO,QAAQhC,IACdA,EAAK4B,OAAS,GACd5B,EAAKmF,MAAOC,GACX3D,MAAMO,QAAQoD,IACC,IAAfA,EAAIxD,QACc,iBAAXwD,EAAI,IACO,iBAAXA,EAAI,IAAmBA,EAAI,IACZ,iBAAfA,EAAI,GAAGxF,KACc,iBAArBwF,EAAI,GAAG5E,WACX,CACJ,MAAM6E,EAA4B,IAAIhC,IAChCiC,EACLtF,EAAKmC,IAAIoD,MAAOH,IACf,MAAOtH,EAAKN,GAAS4H,EACrB,IAAI/C,EAAY,KACK,iBAAV7E,GAAsBA,IAChC6E,QAAaiB,EAAIkC,gBAAgBhI,IAElC6H,EAAQ9F,IAAIzB,EAAKuE,KAGnB,aADMpB,QAAQwE,IAAIH,GACXD,GAEP,MAAOvD,GACRmD,QAAQC,MAAMpD,GAGf,IACC,GACCL,MAAMO,QAAQhC,IACdA,EAAK4B,OAAS,GACd5B,EAAKmF,MAAO9C,GACK,iBAATA,GAAqBA,GACR,iBAAbA,EAAKzC,KACc,iBAAnByC,EAAK7B,WAEb,OAAOS,QAAQwE,IACdzF,EAAKmC,IAAKE,GACFiB,EAAIkC,gBAAgBnD,KAI7B,MAAOP,GACRmD,QAAQC,MAAMpD,GAGf,IACC,GACiB,iBAAT9B,GAAqBA,IAASyB,MAAMO,QAAQhC,GAClD,CACD,MAAM/B,EAAS,GACTqH,EAAiC,GAWvC,OAVArI,OAAOyI,QAAQ1F,GAAMX,QAAQ,EAAEvB,EAAKN,MACd,iBAAVA,GAAsBA,EAChC8F,EAAIkC,gBAAgBhI,GAAO6D,KAAMsE,IAChC1H,EAAOH,GAAO6H,IAGf1H,EAAOH,GAAON,UAGVyD,QAAQwE,IAAIH,GACXrH,GAEP,MAAO6D,GACRmD,QAAQC,MAAMpD,GAGf,OAAO9B,EAGDrB,kBAAkBuE,EAAgBrB,EAAe7B,GACvD,MAGM4F,EAAmC,CACxC5F,KAAM,KACN6F,QALe,CACfC,oBAAqBxC,EAAIe,MAAQf,EAAIS,OAAS,MAK9Cb,OAAQA,EAAO6C,cACfC,OAAQ,KACRC,aAAc,OACdtB,OAAQrB,EAAIoB,UAAU7C,IACtBqE,eAAgB,kBAChBC,eAAgB,qBAUjB,GARInG,IACY,SAAXkD,GAAgC,QAAXA,EACxB0C,EAAaI,OAAShG,EAEtB4F,EAAa5F,KAAOA,IAIlBsD,EAAI8C,MAeP,MAAM,IAAIhG,MAAM,8BAdhB,IACC,MAAM4C,QAAiBM,EAAI8C,MAAMR,GACjC,GAAI5C,EAAShD,KACZ,OAAOgD,EAAShD,KACV,GAAIgD,EAASqD,WACnB,OAAOrD,EAASqD,WACV,GAAIrD,EAASsD,OACnB,OAAO,KAEP,MAAOxE,GAER,OADAmD,QAAQC,MAAMpD,GACP,MAOHnD,yBACN,MAAM4H,EAAcrB,IACfA,GACHD,QAAQC,MAAMA,GAEX5B,EAAIkD,YACPlD,EAAIkD,UAAUC,QACdnD,EAAIkD,UAAUE,SAGVC,EAAU,MACVrD,EAAIkD,WAAalD,EAAIsD,WACzBtD,EAAIkD,UAAYlD,EAAIsD,WACpBtD,EAAIkD,UAAUK,GAAG,kBAAmBN,GACpCjD,EAAIkD,UAAUK,GAAG,gBAAiBN,GAClCjD,EAAIkD,UAAUK,GAAG,aAAcN,GAC/BjD,EAAIkD,UAAUK,GAAG,QAASN,GAC1BjD,EAAIkD,UAAUE,QAERpD,EAAIkD,WAEZ,GAAIlD,EAAIvC,YAAa,CACpB,GAAwB,oBAAb3B,SAcV,OAAOuH,IAbP,OAAQvH,SAAS0H,YAChB,IAAK,UAIJ,aAHM,IAAI7F,QAASC,IAClB9B,SAAS2H,iBAAiB,cAAe7F,KAEnCyF,IACR,IAAK,cACL,IAAK,WACJ,OAAOA,IACR,QACC,MAAM,IAAIvG,gCAAgChB,SAAS0H,eAMvD,OAAO,MA1RMxD,EAAAsD,SAAwCjD,EAAAqD,EACxC1D,EAAA8C,MAA4B5C,EAAAwD,EACnB1D,EAAA2D,wBACH,oBAAZC,QACe5D,EAAAU,sBACJ,oBAAXmD,aAAyD,IAAxBA,OAAOlD,aACzBX,EAAAtC,mBAAoB,EAC7BsC,EAAA8D,KAAM,EACN9D,EAAAsB,QAAUtB,EAAI8D,IACd9D,EAAAwB,KAAO,GACPxB,EAAAyB,WAAa,IACbzB,EAAAuB,SAAW,eACVvB,EAAAS,OAAwB,KACxBT,EAAAQ,SAAwB,KACzBR,EAAAvC,aAAc,EACbuC,EAAAkD,UAA0C,UAkRjC,IAAdlD,EAAI8C,OAAyB9C,EAAI8C,QAC3C9C,EAAI8C,MAAMiB,SAASC,iBAAkB,iCC1StCrK,OAAAC,eAAAb,EAAA,cAA8CmB,OAAA,kCCD9CrB,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAAgJ,IAAApL,EAAA,OAAAqL,EAAArL,EAAA,GAAAsL,EAAAtL,EAAA,GAAAuL,EAAAvL,EAAA,IAAAwL,EAAAxL,EAAA,GAAAyL,EAAAzL,EAAA,GAAA0L,EAAA1L,EAAA,GAAA2L,EAAA3L,EAAA,IAAA4L,EAAA5L,EAAA,IAAA6L,EAAA7L,EAAA,GAAA8L,EAAA9L,EAAA,GAAA+L,EAAA/L,EAAA,IA+DO,MAAMoL,UAAaM,EAAA,EAwYzBlJ,YAAmBE,GAClBsJ,MAAK,ofAAgBtJ,GAvYtBuJ,eACC,SAAUtJ,KAAKuJ,WAAa,MAAMvJ,KAAKwJ,YAAc,MAAMxJ,KAAKyJ,UAC/D,KAUK5J,yBAAyBgB,EAAY6I,GAC3C,IAAIhB,EAAA,EAAIzG,cAAeyG,EAAA,EAAIxG,kBAQ1B,OAAOwG,EAAA,EAAI9K,KAAK,MAAO,mBAAoB,CAC1CiD,KACA6I,WAV4C,CAC7C,MAAMlH,QAAekG,EAAA,EAAIpG,YACzB,GAAIE,EACH,OAAO,IAAIL,QAASwH,IACnBnH,EAAOC,KAAK,mBAAoB,CAAE5B,KAAI6I,UAAUC,MAW7C9J,qCACN,IAAI6I,EAAA,EAAIzG,cAAeyG,EAAA,EAAIxG,kBAQ1B,OAAOwG,EAAA,EAAI9K,KAAK,OAAQ,mBAAoB,MARC,CAC7C,MAAM4E,QAAekG,EAAA,EAAIpG,YACzB,GAAIE,EACH,OAAO,IAAIL,QAASwH,IACnBnH,EAAOC,KAAK,mBAAoB,KAAMkH,MAQnC9J,2BACN,OAAOkJ,EAAA,EAAWa,aAAanB,EAAM,MAI/B5I,6BACN,OAAOkJ,EAAA,EAAWa,aAAahB,EAAA,aAAc,MAIvC/I,6BACN,OAAOkJ,EAAA,EAAWa,aAAaZ,EAAA,aAAc,MAIvCnJ,qBACN,OAAOkJ,EAAA,EAAWa,aAAaX,EAAA,KAAM,MAI/BpJ,qBACN,OAAOkJ,EAAA,EAAWa,aAAajB,EAAA,KAAM,MAI/B9I,sBACN,OAAOkJ,EAAA,EAAWa,aAAaR,EAAA,MAAO,MAIhCvJ,oBACN,OAAOkJ,EAAA,EAAWa,aAAad,EAAA,IAAK,MAI9BjJ,uBACN,OAAOkJ,EAAA,EAAWa,aAAaT,EAAA,OAAQ,MAIjCtJ,yBAAyBgK,GAC/B,OAAO,IAAI1H,QAAQ,CAACC,EAASC,KACf,KAATwH,EACHzH,IAEAsG,EAAA,EAAI9K,KAAK,MAAO,iCAAkC,CAAEiM,SAAQtH,KAC3DH,EACAC,KAMGxC,cACNiK,EACAtI,EAA2B,KAC3BuI,EAAe,EACfC,EAAgBC,OAAOC,mBAEvB,OAAO,IAAI/H,QACV,CAACC,EACAC,KACD,GAAU,KAANyH,QAAkBtJ,IAANsJ,EACf1H,EAAQ,QACF,CACN,MAAMlB,EAKF,CACH8I,WAAOxJ,EACP2J,WAAO3J,EACPsJ,OAAGtJ,EACHuJ,UAAMvJ,GAEPU,EAAK4I,EAAIA,EACS,OAAdtI,GAAoC,SAAdA,IACzBN,EAAKiJ,MAAQ3I,GAGD,IAATuI,GAAcE,OAAOG,SAASH,OAAOF,MACxC7I,EAAK6I,KAAOE,OAAOF,IAGhBE,OAAOG,SAASH,OAAOD,MAC1B9I,EAAK8I,MAAQC,OAAOD,IAGrB,MAAMK,EAAUC,IACf,MAAMC,EAAQD,EAAQC,MACjBA,GAASlI,EAAOkI,GACrB7B,EAAA,EAAIhC,gBAAgB6D,GAAOhI,KAAKH,EAASC,IAEtCqG,EAAA,EAAIzG,aAAeyG,EAAA,EAAIxG,kBAC1BwG,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,kBAAmBvB,EAAMmJ,IAGvChI,GAEDqG,EAAA,EAAI9K,KAAK,MAAO,kBAAmBsD,GAAMqB,KAAK8H,EAAQhI,MAMnDxC,gBAAgB6C,GACtB,OAAOqG,EAAA,EAAWa,aAAanB,EAAM/F,GAG/B7C,eAAe6C,GACrB,OAAOqG,EAAA,EAAWyB,YAAY/B,EAAM/F,GAG9B7C,gBAAgB4K,GAEtB,MAAM5J,EAAKX,KAAKwK,MAEhB,OADAjC,EAAKkC,UAAUlK,IAAII,EAAI4J,GAChB,KACNhC,EAAKkC,UAAUvJ,OAAOP,IAIjBhB,qBAAqBqB,GAC3B,IACqB,iBAATA,GAAqBA,GAC/BuH,EAAKmC,QAAU,IAAInC,EAAKvH,GACpBwH,EAAA,EAAIP,yBACP0C,eAAevF,QAAQ,OAAQ5B,KAAKC,UAAUzC,IAE/CuH,EAAKkC,UAAUpK,QAASkK,GAAkBA,EAAShC,EAAKmC,YAExDnC,EAAKmC,QAAU,KACflC,EAAA,EAAInD,MAAQ,KACZmD,EAAA,EAAI3D,QAAU,KACV2D,EAAA,EAAIP,yBAA2B0C,eAAexF,WAAW,QAC7DoD,EAAKkC,UAAUpK,QAASkK,GAAkBA,EAAS,QAEnD,MAAOzH,GACRmD,QAAQC,MAAMpD,GAEf,OAAOyF,EAAKmC,QAGN/K,qBAAqBiL,GAC3B,IAAI5J,EAAO,KACX,MAAMsE,EAAU,IAAItF,KACpB,IAAK4K,GAASpC,EAAA,EAAI3D,SAAWS,EAAUkD,EAAA,EAAI3D,QAAS,CACnD,GAAqB,OAAjB0D,EAAKmC,QAER,OAAOnC,EAAKmC,QACN,GAAIlC,EAAA,EAAIP,wBAAyB,CAEvC,IACC,MAAM4C,EAAQF,eAAezF,QAAQ,SAAW,GAChDlE,EAAOwC,KAAKG,MAAMkH,GACjB,MAAO/H,GACR9B,EAAO,GAER,GAAIA,EAAQ,OAAOuH,EAAKuC,QAAQ9J,IAelC,OAVCA,EADGwH,EAAA,EAAIzG,aAAeyG,EAAA,EAAIxG,wBACb,IAAIC,QAAQ,CAACC,EAASC,KAClCqG,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,oBAAqB,KAAML,IAGzCC,WAEmBqG,EAAA,EAAI9K,KAAK,MAAO,YAAa,OAChC6K,EAAKuC,QAAQ9J,GACzBuH,EAAKuC,QAAQ,MAGdnL,gBAAgBgB,GACtB,OAAOkI,EAAA,EAAWkC,aAAaxC,EAAM5H,GAG/BhB,yBACNwI,OAAO6C,SAASC,QAAUzC,EAAA,EAAI9C,4BAGxB/F,uBACNwI,OAAO6C,SAASC,QAAUzC,EAAA,EAAI9C,6BAGxB/F,qBACNwI,OAAO6C,SAASC,QAAUzC,EAAA,EAAI9C,0BAGxB/F,uBAAuBuL,EAAeC,GAC5C,GAAKD,GAAmB,KAAVA,EAEP,IAAKC,GAAyB,KAAbA,EAEjB,CACN,IAAInH,EAAW,KAuBf,IArBCA,EADGwE,EAAA,EAAIzG,aAAeyG,EAAA,EAAIxG,wBACT,IAAIC,QAAQ,CAACC,EAASC,KACtCqG,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KACN,mBAAoB,CACnB2I,QACAC,YAEDjJ,IAGHC,WAGeqG,EAAA,EAAI9K,KAAK,OAAQ,mBAAoB,CACrDwN,QACAC,eAIcnH,EAASoH,MAAQpH,EAASqB,OAASrB,EAASa,QAG3D,OAFA2D,EAAA,EAAI3D,QAAU,IAAI7E,KAAKgE,EAASa,SAChC2D,EAAA,EAAInD,MAAQrB,EAASqB,MACdkD,EAAKuC,QAAQ9G,EAASoH,MACrB,MAAM,IAAIhK,MAAM,gBA7BzB,MAAM,IAAIA,MAAM,eAFhB,MAAM,IAAIA,MAAM,YAmCXzB,0BACF6I,EAAA,EAAIzG,aAAeyG,EAAA,EAAIxG,wBACpB,IAAIC,QAAQ,CAACC,EAASC,KAC3BqG,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,oBAAqB,KAAML,IAGzCC,WAGIqG,EAAA,EAAI9K,KAAK,OAAQ,oBAAqB,MAE7C,MAAM0N,QAAa7C,EAAKuC,QAAQ,MAChC,GAAIM,GAAQA,EAAK9H,UAChB,MAAM,IAAIlC,SAASoC,KAAKC,UAAU2H,mCAC1B,OAAOA,EAGVzL,8BAA8BuL,GACpC,OAAO1C,EAAA,EAAI9K,KAAK,OAAQ,cAAe,CAAEwN,UAGnCvL,oBAAoB0L,GAC1B,OAAO,IAAIpJ,QAAQ,CAACC,EAASC,KAC5B,IAAIkJ,GAAgC,iBAAbA,EAwDd,OAAOlJ,EAAO,IAAIf,MAAM,+BAvDhC,GAAuB,OAAnBiK,EAASH,OAAqC,KAAnBG,EAASH,MAI/B,OAAO/I,EAAO,IAAIf,MAAM,sBAHhC,GAAuD,IAAnDmH,EAAK+C,WAAWhN,OAAOiN,QAAQF,EAASH,OAC3C,OAAO/I,EAAO,IAAIf,MAAM,0BAG1B,IAAIiK,EAASF,SAiCJ,OAAOhJ,EAAO,IAAIf,MAAM,yBAjCV,CACtB,MAAMoK,EAAa,iBACbC,EAAa,SACbC,EAAoBL,EAASF,SAASpE,cAC5C,GAA0B,KAAtBsE,EAASF,SACZ,OAAOhJ,EAAO,IAAIf,MAAM,yBAClB,GAAIiK,EAASF,SAASvI,OAAS,EACrC,OAAOT,EAAO,IAAIf,MAAM,0BAClB,GAAIiK,EAASF,SAASvI,OAAS,IACrC,OAAOT,EAAO,IAAIf,MAAM,yBAClB,IAAKoK,EAAW5J,KAAKyJ,EAASF,UACpC,OAAOhJ,EACN,IAAIf,MAAM,kDAEL,IAAKqK,EAAW7J,KAAKyJ,EAASF,UACpC,OAAOhJ,EACN,IAAIf,MAAM,kDAEL,GACNiK,EAAShC,WACqB,IAA9BgC,EAAShC,UAAUzG,SAC8C,IAAjE8I,EAAkBC,QAAQN,EAAShC,UAAUtC,eAE7C,OAAO5E,EACN,IAAIf,MAAM,6CAEL,GACNiK,EAAS9B,UACoB,IAA7B8B,EAAS9B,SAAS3G,SAC8C,IAAhE8I,EAAkBC,QAAQN,EAAS9B,SAASxC,eAE5C,OAAO5E,EAAO,IAAIf,MAAM,4CAI1B,OAAIiK,EAAShC,UACsB,IAA9BgC,EAAShC,UAAUzG,OAIPT,EAAO,IAAIf,MAAM,2BAH5BiK,EAAShC,UAAU,KAAOgC,EAAShC,UAAU,GAAGtC,cAC5C5E,EAAO,IAAIf,MAAM,iCAKvBiK,EAAS9B,SACqB,IAA7B8B,EAAS9B,SAAS3G,OAINT,EAAO,IAAIf,MAAM,0BAH5BiK,EAAS9B,SAAS,KAAO8B,EAAS9B,SAAS,GAAGxC,cAC1C5E,EAAO,IAAIf,MAAM,gCAMxBoH,EAAA,EAAIzG,aAAeyG,EAAA,EAAIxG,kBACnB,IAAIC,QAAQ,CAACkC,EAAKyH,KACxBpD,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOC,KAAK,mBAAoB8I,EAAUlH,IAG5CyH,KAGIpD,EAAA,EAAI9K,KAAK,OAAQ,YAAa2N,GAAUhJ,KAC7CrB,IACIA,EACHuH,EAAKuC,QAAQ9J,GAAMqB,KACjB+I,IACAlJ,EAAQkJ,IAETjJ,GAEDA,EAAO,IAAIf,SAASoC,KAAKC,UAAUzC,iBAGrCmB,GA1BgBA,EAAO,IAAIf,MAAM,0BARjBe,EAAO,IAAIf,MAAM,6BAsC7BzB,6BACNsG,QAAQC,MAAM,wBAORvG,UACN,OAAOkJ,EAAA,EAAWkC,aAAa9B,EAAA,OAAQnJ,KAAK+L,MAAQ,IAI9ClM,oBACN,OAAOkJ,EAAA,EAAWkC,aAAa/B,EAAA,eAAgBlJ,KAAKgM,SAAW,IAIzDnM,qBACN,OAAOkJ,EAAA,EAAWkC,aAAapC,EAAA,gBAAiB7I,KAAKiM,UAAY,IAI3DpM,iBACN,OAAOsC,QAAQwE,IACd3G,KAAKkM,YAAY7I,IAAKxC,GAAe4H,EAAK0D,SAAStL,KAI9ChB,aACN,OAAOsC,QAAQwE,IACd3G,KAAKoM,QAAQ/I,IAAKxC,GAAe4H,EAAK0D,SAAStL,KAI1ChB,iBAAiBwM,GACvB,MAAMhB,EAAWgB,GAAiB,GAG5BT,EAAoBP,EAASpE,cAC7BqF,EACLtM,KAAKuJ,UAAYvJ,KAAKuJ,UAAUtC,cAAgB,GAC3CsF,EACLvM,KAAKyJ,SAAWzJ,KAAKyJ,SAASxC,cAAgB,GAC/C,MAAiB,KAAboE,EACI,IAAI/J,MAAM,oBACP+J,EAASvI,OAAS,EACrB,IAAIxB,MAAM,yBACP+J,EAASvI,OAAS,IACrB,IAAIxB,MAAM,wBAZE,KAaIQ,KAAKuJ,GAZV,KAcIvJ,KAAKuJ,IAEkC,IAAnDO,EAAkBC,QAAQS,GAC7B,IAAIhL,MAAM,4CAC2C,IAAlDsK,EAAkBC,QAAQU,GAC7B,IAAIjL,MAAM,0CAEX,KANC,IAAIA,MAAM,6CAFV,IAAIA,MAAM,6CAWZzB,UACN,QAAKwJ,MAAM7F,YAEmB,iBAAnBxD,KAAKuJ,YACa,iBAAlBvJ,KAAKyJ,WACU,iBAAfzJ,KAAKoL,QAEO,KAAnBpL,KAAKuJ,YACa,KAAlBvJ,KAAKyJ,UACU,KAAfzJ,KAAKoL,WAKHvL,YACN,MAAMkE,EAAasF,MAAMrF,YACzB,GAAID,EAAc,OAAOA,EAEzB,GAAI/D,KAAKa,GAAI,CAEZ,IAAK,CAAC,SAAU,aAAa2L,gBAAgBxM,KAAKK,QAAQkJ,WACzD,OAAO,IAAIjI,4BAA4BtB,KAAKK,QAAQkJ,aAErD,IAAK,CAAC,SAAU,aAAaiD,gBAAgBxM,KAAKK,QAAQoJ,UACzD,OAAO,IAAInI,2BAA2BtB,KAAKK,QAAQoJ,YAEpD,IAAK,CAAC,SAAU,aAAa+C,gBAAgBxM,KAAKK,QAAQgL,UACzD,OAAO,IAAI/J,2BAA2BtB,KAAKK,QAAQgL,YAEpD,IAAK,CAAC,SAAU,aAAamB,gBAAgBxM,KAAKK,QAAQoM,iBACzD,OAAO,IAAInL,kCAAkCtB,KAAKK,QAAQoM,mBAE3D,IAAK,CAAC,SAAU,aAAaD,gBAAgBxM,KAAKK,QAAQ+K,OACzD,OAAO,IAAI9J,wBAAwBtB,KAAKK,QAAQ+K,SAGjD,GAA+B,KAA3BpL,KAAKK,QAAQkJ,UAChB,OAAO,IAAIjI,MAAM,mBAElB,GAA8B,KAA1BtB,KAAKK,QAAQoJ,SAChB,OAAO,IAAInI,MAAM,kBAElB,GAAItB,KAAKK,QAAQgL,SAAU,CAC1B,MAAMjF,EAAQpG,KAAK0M,iBAAiB1M,KAAKK,QAAQgL,UACjD,GAAIjF,EAAS,OAAOA,EAErB,GAAIpG,KAAKK,QAAQgL,WAAarL,KAAKK,QAAQoM,gBAC1C,OAAO,IAAInL,MAAM,8BAEZ,CAEN,GAAsC,iBAA3BtB,KAAKK,QAAQkJ,UACvB,OAAO,IAAIjI,4BAA4BtB,KAAKK,QAAQkJ,aAErD,GAAqC,iBAA1BvJ,KAAKK,QAAQoJ,SACvB,OAAO,IAAInI,2BAA2BtB,KAAKK,QAAQoJ,YAEpD,GAAqC,iBAA1BzJ,KAAKK,QAAQgL,SACvB,OAAO,IAAI/J,2BAA2BtB,KAAKK,QAAQgL,YAEpD,GAA4C,iBAAjCrL,KAAKK,QAAQoM,gBACvB,OAAO,IAAInL,kCAAkCtB,KAAKK,QAAQoM,mBAG3D,GAA+B,KAA3BzM,KAAKK,QAAQkJ,UAChB,OAAO,IAAIjI,MAAM,mBAElB,GAA8B,KAA1BtB,KAAKK,QAAQoJ,SAChB,OAAO,IAAInI,MAAM,kBAElB,GAAItB,KAAKK,QAAQgL,SAAU,CAC1B,MAAMjF,EAAQpG,KAAK0M,iBAAiB1M,KAAKK,QAAQgL,UACjD,GAAIjF,EAAS,OAAOA,EAErB,GAAIpG,KAAKK,QAAQgL,WAAarL,KAAKK,QAAQoM,gBAC1C,OAAO,IAAInL,MAAM,0BAKnB,OAAO,MA5gBMmH,EAAA/G,UAAoB,OACpB+G,EAAAmC,QAAuB,KACvBnC,EAAAkC,UAAuC,IAAIpG,IAC3CkE,EAAAkE,UAAiB,KAEjBlE,EAAA+C,WACb,uLC3EFnO,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,2BAAAmN,IAAAvP,EAAA,OAAAwP,EAAAxP,EAAA,GAAAyP,EAAAzP,EAAA,GAwBO,MAAMuP,UAAeC,EAAA,EAmB3BhN,YAAmBE,GAClBsJ,MAAK,yMAAkBtJ,GAjBjBF,gBAAgBgB,GACtB,OAAOgM,EAAA,EAAW5B,aAAqB2B,EAAQ/L,GAGzChB,gBAAgB6C,GACtB,OAAOmK,EAAA,EAAWjD,aAAqBgD,EAAQlK,GAGzC7C,eAAe6C,GACrB,OAAOmK,EAAA,EAAWrC,YAAoBoC,EAAQlK,GAGxC7C,qBACN,OAAOgN,EAAA,EAAWjD,aAAqBgD,EAAQ,MAOzC/M,YACN,MAAMkN,EAASpK,MAAMC,KAAK5C,KAAK+M,QAC/B,OAAsB,IAAlBA,EAAOjK,OACH+J,EAAA,EAAWjD,aACjBkD,EAAA,KAAM,CAAEhM,IAAKiM,IAGR5K,QAAQC,QAAQ,IAGjBvC,YAAYyL,GAClB,GAAI3I,MAAMO,QAAQlD,KAAK+M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT1B,EACV0B,EAAS1B,EACiB,iBAATA,GAAqBA,IACtC0B,EAAS1B,EAAKxK,UAE4CN,IAApDR,KAAK+M,OAAOE,KAAMpM,GAAeA,IAAOmM,GAEhD,OAAO,EAGDnN,YACN,MAAMkE,EAAasF,MAAMrF,YACzB,OAAID,IAEC/D,KAAKkN,YACLlN,KAAKmN,SACLnN,KAAKoN,MACLpN,KAAKqN,OACLrN,KAAKsN,YACLtN,KAAKuN,aACqB,iBAApBvN,KAAKwN,YACfxN,KAAKwN,WAAa,EACV,IAAIlM,6BAA6BtB,KAAKwN,cAEjB,iBAAnBxN,KAAKyN,WACfzN,KAAKyN,UAAY,EACV,IAAInM,4BAA4BtB,KAAKyN,aAGxCzN,KAAKM,SAASoN,KACd1N,KAAKM,SAASqN,MACdhL,MAAMO,QAAQlD,KAAKM,SAASyM,SACA,IAAhC/M,KAAKM,SAASyM,OAAOjK,OAIf,KAHC,IAAIxB,yBAAyBtB,KAAKM,SAASyM,UAHhB,IAAIzL,wBAAwBtB,KAAKM,SAASqN,SAD3C,IAAIrM,uBAAuBtB,KAAKM,SAASoN,QAV1C,IAAIpM,+BAA+BtB,KAAKuN,gBADzC,IAAIjM,8BAA8BtB,KAAKsN,eAD5C,IAAIhM,yBAAyBtB,KAAKqN,UADnC,IAAI/L,wBAAwBtB,KAAKoN,SAD9B,IAAI9L,2BAA2BtB,KAAKmN,YADjC,IAAI7L,8BAA8BtB,KAAKkN,iBAjD1DN,EAAAlL,UAAoB,uCCzBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,oCAAAmO,IAAAvQ,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAAAyQ,EAAAzQ,EAAA,GAkBO,MAAMuQ,UAAwBC,EAAA,EA8DpChO,YAAmBE,GAClBsJ,MAAK,iIAA2BtJ,GA5D1BF,eAAe6C,GACrB,OAAOmL,EAAA,EAAWrD,YAAYoD,EAAiBlL,GAIzC7C,gBAAgB6C,GACtB,OAAOmL,EAAA,EAAWjE,aAAagE,EAAiBlL,GAI1C7C,gBAAgBgB,GAEtB,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KACV,iBAAPxB,GAA0B,KAAPA,EAC7B6H,EAAA,EAAI9K,KAAK,8BAA+BiD,IAAM,MAAM0B,KAClDwL,IACA,MAAMC,EAAUD,GAAS,KACrBC,EACH5L,EAAQ,IAAIwL,EAAgBI,IAE5B3L,EAAO,IAAIf,SAAS0M,gBAGtB3L,GAGDD,MAKIvC,gBAAgBoO,GACtB,OAAO,IAAI9L,QAAQ,CAACC,EAASC,KACJ,iBAAb4L,EACV5L,EAAO,IAAIf,MAAM,8BAEjBoH,EAAA,EAAI9K,KAAK,MAAO,0BAA2B,CAC1CI,KAAMiQ,IACJ1L,KAAKH,EAASC,KAKbxC,kBACNqO,EACAC,EACAC,EACAC,GAEA,OAAO,IAAIlM,QAAQ,CAACC,EAASC,KAC5BqG,EAAA,EAAI9K,KAAK,OAAQ,0BAA2B,CAC3C0Q,WAAYF,EACZG,YAAaL,EACbM,UAAWL,EACXM,aAAcJ,IACZ9L,KAAKH,EAASC,KAQZxC,UACN,OAAOgO,EAAA,EAAW5C,aAAa6C,EAAA,KAAM9N,KAAKgN,QAIpCnN,YAAYyL,GAClB,MAAoB,iBAATA,EACHA,IAAStL,KAAKgN,SACK,iBAAT1B,IAAqBA,IAC/BA,EAAKxK,MAAQd,KAAKgN,OAKpBnN,UACN,QAAKwJ,MAAM7F,eACNxD,KAAKgN,QAAiC,iBAAhBhN,KAAKgN,aAC3BhN,KAAK0O,SAAmC,iBAAjB1O,KAAK0O,aAC5B1O,KAAK2O,WAAuC,iBAAnB3O,KAAK2O,cAnFtBf,EAAAlM,UAAoB,gDCnBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,wBAAAmP,IAAAvR,EAAA,OAAAqL,EAAArL,EAAA,GAAAsL,EAAAtL,EAAA,GAAAwR,EAAAxR,EAAA,IAAAyR,EAAAzR,EAAA,GAAA0R,EAAA1R,EAAA,IA4BO,MAAMuR,UAAYE,EAAA,EAyIxBjP,YAAmBE,GAClBsJ,MAAK,sKAAetJ,GAvIdF,gBAAgBgB,GACtB,OAAOiO,EAAA,EAAW7D,aAAa2D,EAAK/N,GAG9BhB,wBAAwBmP,GAC9B,MAAM9N,QAAawH,EAAA,EAAI9K,KAAK,mBAAoBoR,SAAe,MAC/D,GAAI9N,GAAQyB,MAAMO,QAAQhC,GACzB,OAAOA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIqL,EAAItL,GAErB,OADAwL,EAAA,EAAW7L,SAAcM,GAClBA,IAGT,MAAM,IAAIjC,6BAA6BJ,KAGjCrB,yBAAyBoP,GAC/B,MAAM/N,QAAawH,EAAA,EAAI9K,KAAK,oBAAqBqR,SAAgB,MACjE,GAAI/N,GAAQyB,MAAMO,QAAQhC,GACzB,OAAOA,EAAKmC,IAAKC,IAChB,MAAMC,EAAO,IAAIqL,EAAItL,GAErB,OADAwL,EAAA,EAAW7L,SAAcM,GAClBA,IAGT,MAAM,IAAIjC,6BAA6BJ,KAGjCrB,qBACN,OAAOiP,EAAA,EAAWlF,aAAagF,EAAK,MAG9B/O,gBAAgB6C,GACtB,OAAOoM,EAAA,EAAWlF,aAAagF,EAAKlM,GAG9B7C,kBAAkBqP,GACxB,OAAO,IAAI/M,QAAQ,CAACC,EAASC,KAC5B,MAAMnB,EAAYgO,GAAW,GAC7B,GAAIhO,GAAwB,iBAATA,EAAmB,CACrC,IAAKA,EAAKiO,MAAsB,KAAdjO,EAAKiO,KACtB,OAAO9M,EAAO,IAAIf,MAAM,qBAEzB,IAAKJ,EAAKkO,OAAwB,KAAflO,EAAKkO,MACvB,OAAO/M,EAAO,IAAIf,MAAM,sBAEzB,IAAKJ,EAAKmO,OAA+B,IAAtBnO,EAAKmO,MAAMvM,OAC7B,OAAOT,EAAO,IAAIf,MAAM,sBAEzB,MAAMgO,EAAWpO,EAAKmO,MAAME,OAC3B,CACCC,EACA/R,KAEA,GAAI+R,EAAKC,SAAWD,EAAKE,WAAaF,EAAKG,SAAU,CACpD,MAAMF,EAAU,IAAIvP,KAAKsP,EAAKC,SAExBC,EAAY,IAAIxP,KAAKsP,EAAKE,WAChCA,EAAUE,YAAYH,EAAQI,eAC9BH,EAAUI,SAASL,EAAQM,YAC3BL,EAAUM,QAAQP,EAAQQ,UAE1B,MAAMN,EAAW,IAAIzP,KAAKsP,EAAKG,UAQ/B,OAPAA,EAASC,YAAYH,EAAQI,eAC7BF,EAASG,SAASL,EAAQM,YAC1BJ,EAASK,QAAQP,EAAQQ,UACzB/O,EAAKmO,MAAM5R,GAAK,CACfiS,UAAWF,EAAKE,UAChBC,SAAUH,EAAKG,WAET,EACD,SAAIH,EAAKE,YAAaF,EAAKG,YACjCzO,EAAKmO,MAAM5R,GAAK,CACfiS,UAAWF,EAAKE,UAChBC,SAAUH,EAAKG,WAET,KAKV,OAAIL,EAASxM,SAAW5B,EAAKmO,MAAMvM,OAC3BT,EAAO,IAAIf,MAAM,8BAEzBJ,EAAKmO,MAAQC,EACG5G,EAAA,EAAI9K,KAAK,OAAQ,WAAYsD,GAC9BqB,KACZ2B,IACD,IAAIgM,EAAc,GAClBA,EAAOvN,MAAMC,KAAKsB,GAAY,IAAIb,IAAKC,IAEtC,OADY,IAAIsL,EAAItL,KAGrBlB,EAAQ8N,IAET7N,IAEF,OAAO,OAIFxC,wBACNqL,EACAiF,GAEA,OAAO,IAAIhO,QAAQ,CAACC,EAASC,IACJ,iBAAb6I,EACH7I,EAAO,IAAIf,MAAM,8BAEG,iBAAjB4J,EAASkF,KACK,iBAAjBlF,EAASmF,IACThO,EAAO,IAAIf,MAAM,0CAED,iBAAb6O,EACH9N,EAAO,IAAIf,MAAM,4BAGlBoH,EAAA,EAAI9K,KAAK,MAAO,sBAAuB,CAC7C0S,IAAKH,EACLC,IAAKlF,EAASkF,IACdC,IAAKnF,EAASmF,MACZ9N,KACA2N,IACD9N,EACCO,MAAMC,KAAKsN,GAAM7M,IAAKE,IAErB,OADY,IAAIqL,EAAIrL,OAKvBlB,IAQIxC,WACN,OAAOiP,EAAA,EAAWlF,aAAajB,EAAA,KAAM,CAAE7H,IAAKd,KAAKuQ,QAI3C1Q,WACN,OAAOiP,EAAA,EAAW7D,aAAa8D,EAAA,MAAO/O,KAAKoP,OAIrCvP,cACN,OAAOiP,EAAA,EAAW7D,aAAa4D,EAAA,SAAU7O,KAAKkL,UAIxCrL,UACN,QAAKwJ,MAAM7F,cACNb,MAAMO,QAAQlD,KAAK+M,SACG,IAAvB/M,KAAK+M,OAAOjK,QAIVjD,YAAYyL,GAClB,GAAI3I,MAAMO,QAAQlD,KAAK+M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT1B,EACV0B,EAAS1B,EACiB,iBAATA,GAAqBA,IACtC0B,EAAS1B,EAAKxK,UAE4CN,IAApDR,KAAK+M,OAAOE,KAAMpM,GAAeA,IAAOmM,GAEhD,OAAO,GA5KM4B,EAAAlN,UAAoB,oCC7BnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,mCAAA+Q,IAAAnT,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAAAyQ,EAAAzQ,EAAA,GAiBO,MAAMmT,UAAuB3C,EAAA,EAiCnChO,YAAmBE,GAClBsJ,MAAK,4GAA0BtJ,GA/BzBF,eAAe6C,GACrB,OAAOmL,EAAA,EAAWrD,YAAYgG,EAAgB9N,GAIxC7C,gBAAgB6C,GACtB,OAAOmL,EAAA,EAAWjE,aAAa4G,EAAgB9N,GAIzC7C,gBAAgBgB,GACtB,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KACV,iBAAPxB,GAA0B,KAAPA,EAC7B6H,EAAA,EAAI9K,KAAK,6BAA8BiD,IAAM,MAAM0B,KACjD2B,IACA,MAAM8J,EAAU9J,GAAY,KACxB8J,EACH5L,EAAQ,IAAIoO,EAAexC,IAE3B3L,EAAO,IAAIf,SAAS0M,gBAGtB3L,GAGDD,MASIvC,UACN,OAAOgO,EAAA,EAAW5C,aAAa6C,EAAA,KAAM9N,KAAKgN,QAIpCnN,YAAYyL,GAClB,MAAoB,iBAATA,EAA4BA,IAAStL,KAAKgN,OACjC,mBAAT1B,GAA8BA,EAAKxK,MAAQd,KAAKgN,OAIrDnN,qBACgB,oBAAXwI,SAEVA,OAAO6C,SAASC,uCAAyCnL,KAAK2O,aAIzD9O,UACN,QAAKwJ,MAAM7F,eACNxD,KAAKgN,QAAiC,iBAAhBhN,KAAKgN,YAC3BhN,KAAK0O,SAAmC,iBAAjB1O,KAAK0O,WAzDpB8B,EAAA9O,UAAoB,+CClBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAAgR,IAAApT,EAAA,OAAAqT,EAAArT,EAAA,GAAAsT,EAAAtT,EAAA,GAAAuT,EAAAvT,EAAA,GAAAwT,EAAAxT,EAAA,GAAAyT,EAAAzT,EAAA,GAAA0T,EAAA1T,EAAA,GA+BO,MAAMoT,UAAaG,EAAA,EAuBzB/Q,YAAmBE,GAClBsJ,MAAK,2OAAgBtJ,GArBfF,eAAe6C,GACrB,OAAOkO,EAAA,EAAWpG,YAAYiG,EAAM/N,GAI9B7C,gBAAgB6C,GACtB,OAAOkO,EAAA,EAAWhH,aAAa6G,EAAM/N,GAI/B7C,gBAAgBgB,GACtB,OAAO+P,EAAA,EAAW3F,aAAawF,EAAM5P,GAI/BhB,qBACN,OAAO+Q,EAAA,EAAWhH,aAAa6G,EAAM,MAQ/B5Q,UACN,OAAIG,KAAK+L,KACD6E,EAAA,EAAW3F,aAAa6F,EAAA,OAAQ9Q,KAAK+L,MAGtC5J,QAAQC,QAAQ,MAGjBvC,YACN,MAAMmR,EAASrO,MAAMC,KAAK5C,KAAKgR,QAC/B,OAAsB,IAAlBA,EAAOlO,OACF8N,EAAA,EAAWhH,aACjBkH,EAAA,OAAQ,CAAEhQ,IAAKkQ,IAGX7O,QAAQC,QAAQ,IAGjBvC,YACN,MAAMkN,EAASpK,MAAMC,KAAK5C,KAAK+M,QAC/B,OAAsB,IAAlBA,EAAOjK,OACH8N,EAAA,EAAWhH,aACjBmH,EAAA,KAAM,CAAEjQ,IAAKiM,IAGR5K,QAAQC,QAAQ,IAGjBvC,UACN,OAAO8Q,EAAA,IAAIM,WAAWjR,KAAKc,KAAO,IAG5BjB,oBACN,OAAKG,KAAKgM,QACH4E,EAAA,EAAW3F,aAAa4F,EAAA,eAAgB7Q,KAAKgM,SADxB7J,QAAQC,QAAQ,MAKtCvC,qBACN,OAAKG,KAAKiM,SACH2E,EAAA,EAAW3F,aAAayF,EAAA,gBAAiB1Q,KAAKiM,UADxB9J,QAAQC,QAAQ,MAKvCvC,YACN,MAAMuG,EAAQiD,MAAMrF,YACpB,OAAIoC,IAE4B,iBAArBpG,KAAKkR,YACR,IAAI5P,kDAAkDtB,KAAKkR,uBAE1C,KAArBlR,KAAKkR,YACD,IAAI5P,MAAM,wBAGO,iBAAdtB,KAAKhC,KACR,IAAIsD,MAAM,wBAEA,KAAdtB,KAAKhC,KACD,IAAIsD,MAAM,iBAGc,iBAArBtB,KAAKkN,YACR,IAAI5L,MAAM,+BAEO,KAArBtB,KAAKkN,YACD,IAAI5L,MAAM,wBAEO,gBAArBtB,KAAKkN,YACD,IAAI5L,MAAM,oCAGbqB,MAAMO,QAAQlD,KAAK+M,QAGG,IAAvB/M,KAAK+M,OAAOjK,OACR,IAAIxB,MAAM,uCAGX,KANC,IAAIA,MAAM,2BASZzB,YAAYyL,GAClB,GAAI3I,MAAMO,QAAQlD,KAAK+M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT1B,EACV0B,EAAS1B,EACiB,iBAATA,GAAqBA,IACtC0B,EAAS1B,EAAKxK,UAE4CN,IAApDR,KAAK+M,OAAOE,KAAMpM,GAAeA,IAAOmM,GAEhD,OAAO,GAtHMyD,EAAA/O,UAAoB,qCChCnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,6BAAA0R,IAAA9T,EAAA,OAAAqL,EAAArL,EAAA,GAAA+T,EAAA/T,EAAA,IAAAuT,EAAAvT,EAAA,GAmBO,MAAM8T,UAAiBP,EAAA,EAoC7B/Q,YAAmBE,GAClBsJ,MAAK,gGAAoBtJ,GAlCnBF,4BAA4BwR,GAClC,OAAO,IAAIlP,QAAQ,CAACC,EAASC,KACvBgP,EAGJ3I,EAAA,EAAI9K,KAAK,oBAAqByT,IAAW,MAAM9O,KAC5C2I,IACGA,EACH9I,EAAQ,IAAI+O,EAASjG,IAErB7I,EAAO,IAAIf,SAAS4J,gBAGtB7I,GAVDA,EAAO,IAAIf,0BAA0B+P,QAejCxR,gBAAgBgB,GACtB,OAAO+P,EAAA,EAAW3F,aAAakG,EAAUtQ,GAInChB,eAAe6C,GACrB,OAAOkO,EAAA,EAAWpG,YAAY2G,EAAUzO,GAIlC7C,gBAAgB6C,GACtB,OAAOkO,EAAA,EAAWhH,aAAauH,EAAUzO,GAQnC7C,UACN,QAAKwJ,MAAM7F,cACNxD,KAAKqR,YACLrR,KAAKsR,YACLtR,KAAKuR,aACL5O,MAAMO,QAAQlD,KAAKwR,UAIlB3R,kBACN,OAAOuR,EAAA,YAAYK,gBAAgBzR,KAAKqR,UAjD3BF,EAAAzP,UAAoB,yCCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,0BAAAiS,IAAArU,EAAA,OAAAqT,EAAArT,EAAA,GAAAsT,EAAAtT,EAAA,GAAAwR,EAAAxR,EAAA,IAAAyR,EAAAzR,EAAA,GAAAsU,EAAAtU,EAAA,GAAAuU,EAAAvU,EAAA,GAAAwU,EAAAxU,EAAA,GAqCO,MAAMqU,UAAc5C,EAAA,EAuB1BjP,YAAmBE,GAClBsJ,MAAK,sPAAiBtJ,GArBhBF,eAAe6C,GACrB,OAAOoM,EAAA,EAAWtE,YAAYkH,EAAOhP,GAI/B7C,gBAAgB6C,GACtB,OAAOoM,EAAA,EAAWlF,aAAa8H,EAAOhP,GAIhC7C,gBAAgBgB,GACtB,OAAOiO,EAAA,EAAW7D,aAAayG,EAAO7Q,GAIhChB,qBACN,OAAOiP,EAAA,EAAWlF,aAAa8H,EAAO,MAQhC7R,UACN,OAAOiP,EAAA,EAAW7D,aAAa2G,EAAA,OAAQ5R,KAAK+L,MAAQ,IAI9ClM,YACN,MAAMmR,EAASrO,MAAMC,KAAK5C,KAAKgR,QAC/B,OAAsB,IAAlBA,EAAOlO,OACHgM,EAAA,EAAWlF,aACjBgI,EAAA,OAAQ,CAAE9Q,IAAKkQ,IAGV7O,QAAQC,QAAQ,IAGjBvC,YACN,MAAMkN,EAASpK,MAAMC,KAAK5C,KAAK+M,QAC/B,OAAsB,IAAlBA,EAAOjK,OACHgM,EAAA,EAAWlF,aACjBiI,EAAA,KAAM,CAAE/Q,IAAKiM,IAGR5K,QAAQC,QAAQ,IAGjBvC,UACN,OAAO8Q,EAAA,IAAImB,YAAY9R,KAAKc,KAAO,IAG7BjB,oBACN,OAAOiP,EAAA,EAAW7D,aAAa0G,EAAA,eAAgB3R,KAAKgM,SAAW,IAIzDnM,qBACN,OAAOiP,EAAA,EAAW7D,aAAayF,EAAA,gBAAiB1Q,KAAKiM,UAAY,IAI3DpM,cACN,OAAOiP,EAAA,EAAW7D,aAAa4D,EAAA,SAAU7O,KAAKkL,UAAY,IAIpDrL,UACN,MAAMO,EAAOJ,KACb,QAAKqJ,MAAM7F,cAENsL,EAAA,EAAW3N,UAAUnB,KAAKkL,YACT,KAAlBlL,KAAKkL,WAEgB,iBAAdlL,KAAKhC,OACE,KAAdgC,KAAKhC,OAEuB,iBAArBgC,KAAKkN,cACS,KAArBlN,KAAKkN,cACgB,gBAArBlN,KAAKkN,gBAEJvK,MAAMO,QAAQlD,KAAK+M,UACG,IAAvB/M,KAAK+M,OAAOjK,UACX9C,KAAK+M,OAAO1G,MAAO0L,GAAU3R,EAAK4R,YAAYD,aAO7ClS,YAAYyL,GAClB,GAAI3I,MAAMO,QAAQlD,KAAK+M,QAAS,CAC/B,IAAIC,EAMJ,MALoB,iBAAT1B,EACV0B,EAAS1B,EACiB,iBAATA,GAAqBA,IACtC0B,EAAS1B,EAAKxK,UAE4CN,IAApDR,KAAK+M,OAAOE,KAAMpM,GAAeA,IAAOmM,GAEhD,OAAO,GAvGM0E,EAAAhQ,UAAoB,sCCrCnCrE,EAAAU,EAAA0B,EAAA,sBAAAwS,IAAO,MAAMA,EAAmBxL,MAAOzI,IAEtC,OAAQA,GACP,IAAK,OACJ,aAAcmE,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAkBwR,KACjC,IAAK,eACJ,aAActO,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAA0BiT,aACzC,IAAK,cACJ,aAAc/P,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAyBkT,YACxC,IAAK,kBACJ,aAAchQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAA6B2O,gBAC5C,IAAK,MACJ,aAAczL,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAiB2P,IAChC,IAAK,cACJ,aAAczM,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAyBmT,YACxC,IAAK,WACJ,aAAcjQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAsBkS,SACrC,IAAK,eACJ,aAAchP,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAA0BoT,aACzC,IAAK,OACJ,aAAclQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAkBqT,KACjC,IAAK,OACJ,aAAcnQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAkBsT,KACjC,IAAK,UACJ,aAAcpQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAqBuT,QACpC,IAAK,iBACJ,aAAcrQ,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAA4BuR,eAC3C,IAAK,SACJ,aAAcrO,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAoB2N,OACnC,IAAK,OACJ,aAAczK,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,UAAkBwJ,KACjC,IAAK,QACJ,aAActG,QAAAC,UAAAG,KAAAlF,EAAA4B,KAAA,WAAmByS,MAClC,QACC,OAAOvP,QAAQC,QAAQ,sCCnC1B/E,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,iCAAAyS,IAAA7U,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAsBO,MAAM6U,UAAqBrE,EAAA,EAsDjChO,YAAmBE,GAClBsJ,MAAK,kEAAwBtJ,GAlDvBF,mBAAmB4K,GAEzB,MAAMgI,EAAavS,KAAKwK,MAExB,OADAwH,EAAavH,UAAUlK,IAAIgS,EAAYhI,GAChC,IAAMyH,EAAavH,UAAUvJ,OAAOqR,GAGrC5S,uBACN6I,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOuF,GAAG,2BAA6B7G,IACtC,GAAIA,EAAM,CACT,IAAIwR,EACH7E,EAAA,EAAW9L,SAASb,EAAKJ,KACtB4R,EACHvU,OAAO8F,OAAOyO,EAAMxR,GAEpBwR,EAAO,IAAIR,EAAahR,GAEzB2M,EAAA,EAAW5K,SAAuByP,GAClCR,EAAavH,UAAUpK,QAASoS,GAAOA,EAAGD,QAK9CvM,QAAQC,OAGHvG,gBAAgBgB,GACtB,OAAOgN,EAAA,EAAW5C,aAAaiH,EAAcrR,GAIvChB,eAAe6C,GACrB,OAAOmL,EAAA,EAAWrD,YAAY0H,EAAcxP,GAItC7C,gBAAgB6C,GACtB,OAAOmL,EAAA,EAAWjE,aAAasI,EAAcxP,GAIvC7C,qBACN,OAAOgO,EAAA,EAAWjE,aAAasI,EAAc,MAQvCrS,UACN,QAAKwJ,MAAM7F,UAKL3D,YAAYyL,EAAcsH,GAOhC,OALA5S,KAAK6S,OAAOzP,KAAK,CAChB0P,eAAgB,IAAI5S,KACpB0S,UACAtH,SAEMtL,KAAK+S,QAtECb,EAAAxQ,UAAoB,eACpBwQ,EAAAvH,UACuB,IAAIpG,kCCzB1ClH,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,gCAAA2S,IAAA/U,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAaO,MAAM+U,UAAoBvE,EAAA,EA+ChChO,YAAmBE,GAClBsJ,MAAK,qEAAuBtJ,GA7CtBF,gBAAgBgB,GACtB,OAAOgN,EAAA,EAAW5C,aAAamH,EAAavR,GAItChB,eAAe6C,GACrB,OAAOmL,EAAA,EAAWrD,YAAY4H,EAAa1P,GAIrC7C,gBAAgB6C,GACtB,OAAOmL,EAAA,EAAWjE,aAAawI,EAAa1P,GAItC7C,uBAAuBwR,GAC7B,OAAO,IAAIlP,QAAQ,CAACC,EAASC,IACL,iBAAZgP,EACHhP,EAAO,IAAIf,MAAM,6BAElBoH,EAAA,EAAI9K,KAAK,MAAO,mBAAoB,CAAEyT,YAAW9O,KACvDH,EACAC,IAKIxC,kBAAkBsO,EAAc6E,GAEtC,OAAO,IAAI7Q,QAAQ,CAACC,EAASC,KAC5B,MAAM4Q,EAAOD,GAAa,WAC1B,MAAoB,iBAAT7E,EACH9L,EAAO,IAAIf,MAAM,0BAEL,IAAhB6M,EAAKrL,OACDT,EAAO,IAAIf,MAAM,kBAElBoH,EAAA,EAAI9K,KAAK,MAAO,yBAA0B,CAChDiM,KAAMsE,EACN8E,SACE1Q,KAAKH,EAASC,MA1CL+P,EAAA1Q,UAAoB,4CCdnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,iCAAA4S,IAAAhV,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAyBO,MAAMgV,UAAqBxE,EAAA,EAuEjChO,YAAmBE,GAClBsJ,MAAK,mGAAwBtJ,GArEtBC,KAAAkT,gBAAqD,IAAI3O,IAE1D1E,yBAAyBsT,GAC/Bd,EAAa1H,UAAUpK,QAASkK,GAAkBA,EAAS0I,IAGrDtT,mBAAmB4K,GACzB,MAAMgI,EAAavS,KAAKwK,MAExB,OADA2H,EAAa1H,UAAUlK,IAAIgS,EAAYhI,GAChC,IAAM4H,EAAa1H,UAAUvJ,OAAOqR,GAGrC5S,mCACN,GAAkB,OAAd6I,EAAA,EAAInD,MAAgB,CACvB,MAAM6N,QAAc1K,EAAA,EAAI9K,KAAK,MAAO,6BAA8B,MAClE,GAAI+E,MAAMO,QAAQkQ,GACjB,OAAOA,EAAM/P,IAAKE,GAAc,IAAI8O,EAAa9O,IAGnD,MAAO,GAGD1D,qBACN,OAAOgO,EAAA,EAAWjE,aAAa,eAAgB,MAGzC/J,gBAAgBgB,GACtB,OAAOgN,EAAA,EAAW5C,aAAa,eAAgBpK,GAGzChB,uBACN6I,EAAA,EAAIpG,YAAYC,KACdC,IACIA,GACHA,EAAOuF,GAAG,eAAiB7G,GAC1BmR,EAAagB,kBAAkB,IAAIhB,EAAanR,MAInDiF,QAAQC,OAGHvG,gCACN,MAAMyT,EACa,oBAAXjL,aACiC,IAAhCA,OAAegK,aAClBkB,EAAkB,EAAmBlL,OAAegK,aAAe,KACzE,GAAIiB,EAAe,CAClB,MAAME,EAASC,IACK,YAAfA,GACHpB,EAAagB,kBAAmBF,GACxB,IAAII,EAAgBJ,EAAKO,MAAO,CACtCC,KAAMR,EAAKP,QACX1R,KAAMiS,EACNpH,KAAM,iBACN6H,UAAWT,EAAKrP,gBAKe,YAA/ByP,EAAgBE,WACnBD,EAAMD,EAAgBE,YAEtBF,EAAgBM,kBAAkBL,IAS9B3T,kBAAkB4K,GACxB,MAAMhN,EAAIyC,KAAKwK,MAEf,OADA1K,KAAKkT,gBAAgBzS,IAAIhD,EAAGgN,GACrB,KAAQzK,KAAKkT,gBAAgB9R,OAAO3D,KA7E9B4U,EAAA3Q,UAAoB,eACpB2Q,EAAA1H,UAA+C,IAAIpG,kCC3BlElH,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA8S,IAAAlV,EAAA,OAAAwP,EAAAxP,EAAA,GAmBO,MAAMkV,UAAa1F,EAAA,EAmBzBhN,YAAmBE,GAClBsJ,MAAK,4IAAgBtJ,GAjBfF,gBAAgBgB,GACtB,OAAOgM,EAAA,EAAW5B,aAAasH,EAAM1R,GAG/BhB,eAAe6C,GACrB,OAAOmK,EAAA,EAAWrC,YAAY+H,EAAM7P,GAG9B7C,qBACN,OAAOgN,EAAA,EAAWjD,aAAa2I,EAAM,MAG/B1S,gBAAgB6C,GACtB,OAAOmK,EAAA,EAAWjD,aAAa2I,EAAM7P,GAO/B7C,UACN,QAAKwJ,MAAM7F,UAIL3D,UACN,QAAKG,KAAK8T,cACL9T,KAAK+T,UAA8B,KAAlB/T,KAAK+T,aACtB/T,KAAKgU,SAOJnU,YAAYyL,GAClB,MAAoB,iBAATA,EAA4BA,IAAStL,KAAKgN,SACjC,mBAAT1B,IAAuBA,IAAQA,EAAK9H,YACvC8H,EAAKxK,MAAQd,KAAKgN,QAxCbuF,EAAA7Q,UAAoB,qCCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,gCAAA0S,IAAA9U,EAAA,OAAAwP,EAAAxP,EAAA,GAmBO,MAAM8U,UAAoBtF,EAAA,EAmBhChN,YAAmBE,GAClBsJ,MAAK,qJAAuBtJ,GAjBtBF,gBAAgBgB,GACtB,OAAOgM,EAAA,EAAW5B,aAAakH,EAAatR,GAItChB,eAAe6C,GACrB,OAAOmK,EAAA,EAAWrC,YAAY2H,EAAazP,GAIrC7C,gBAAgB6C,GAEtB,OAAOmK,EAAA,EAAWjD,aAAauI,EAAazP,GAQtC7C,UACN,QAAKwJ,MAAM7F,WAvBE2O,EAAAzQ,UAAoB,4CCpBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,yBAAA6S,IAAAjV,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAqBO,MAAMiV,UAAazE,EAAA,EA8BzBhO,YAAmBE,GAClBsJ,MAAK,mIAAgBtJ,GA5BfF,gBAAgB6C,EAAeqH,EAAeC,GAMpD,OAJItH,IACHA,EAASqH,KAAOrH,EAASqH,MAAQA,EACjCrH,EAASsH,MAAQtH,EAASsH,OAASA,GAE7B6D,EAAA,EAAWjE,aAAa0I,EAAM5P,GAG/B7C,eAAe6C,GACrB,OAAOmL,EAAA,EAAWrD,YAAY8H,EAAM5P,GAG9B7C,gBAAgBgB,GACtB,OAAOgN,EAAA,EAAW5C,aAAaqH,EAAMzR,GAG/BhB,kBAAkBoU,GACxB,OAAO,IAAI9R,QAAQ,CAACC,EAASC,KAC5BqG,EAAA,EAAI9K,KAAK,mBAAoBqW,IAAQ,MAAM1R,KACzC2R,IACA9R,EAAQ,IAAIkQ,EAAK4B,KAElB7R,KAQIxC,UACN,QAAKwJ,MAAM7F,cACNxD,KAAKmU,OACS,KAAfnU,KAAKmU,OAIHtU,YAAYyL,GAClB,MAAoB,iBAATA,EAA4BA,IAAStL,KAAKoU,QACjC,mBAAT9I,IAAuBA,IAAQA,EAAK9H,aACvC8H,EAAKxK,MAAQd,KAAKoU,OAAS9I,EAAK8I,QA3C3B9B,EAAA5Q,UAAoB,qCCtBnCrE,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,4BAAA+S,IAAAnV,EAAA,OAAAqL,EAAArL,EAAA,GAAAwQ,EAAAxQ,EAAA,GAkBO,MAAMmV,UAAgB3E,EAAA,EA8D5BhO,YAAmBE,GAClBsJ,MAAK,8GAAmBtJ,GA5DlBF,kCAAkCsP,EAAcvM,EAAcyR,GACpE,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BqG,EAAA,EAAI9K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACApB,KAAM,gBACN1H,SAAU,CACTyD,OAAQG,KAEP5M,KACDrB,IACAkB,EAAQ,IAAIoQ,EAAQtR,KAErBmB,KAIIxC,mCAAmCuP,EAAexM,EAAcyR,GACtE,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BqG,EAAA,EAAI9K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACApB,KAAM,iBACN1H,SAAU,CACT0D,QAASG,KAER7M,KACDrB,IACAkB,EAAQ,IAAIoQ,EAAQtR,KAErBmB,KAIIxC,4BAA4ByU,EAAa1R,EAAcyR,GAC7D,OAAO,IAAIlS,QAAQ,CAACC,EAASC,KAC5BqG,EAAA,EAAI9K,KAAK,OAAQ,eAAgB,CAChCgF,OACAyR,KACApB,KAAM,iBACN1H,SAAU,CACTgJ,MAAOD,KAEN/R,KACDrB,IACAkB,EAAQ,IAAIoQ,EAAQtR,KAErBmB,KAIIxC,qBACN,OAAOgO,EAAA,EAAWjE,aAAa4I,EAAS,MAGlC3S,gBAAgBgB,GACtB,OAAOgN,EAAA,EAAW5C,aAAauH,EAAS3R,GAOlChB,cAAc2U,GACpB,MAAMC,QAAgB/L,EAAA,EAAI9K,KACzB,uBACgBoC,KAAKc,OAAO0T,IAC5B,MAGD,OADAxU,KAAKiE,OAAOwQ,GACLzU,MAxEMwS,EAAA9Q,UAAoB;;;;;;GCLnCnE,EAAAsG,MAkCA,SAAA6Q,EAAAC,GACA,oBAAAD,EACA,UAAAE,UAAA,iCAQA,IALA,IAAAC,EAAA,GACAC,EAAAH,GAAA,GACAI,EAAAL,EAAAM,MAAAC,GACAC,EAAAJ,EAAAK,UAEA1X,EAAA,EAAiBA,EAAAsX,EAAAjS,OAAkBrF,IAAA,CACnC,IAAA2X,EAAAL,EAAAtX,GACA4X,EAAAD,EAAAvJ,QAAA,KAGA,KAAAwJ,EAAA,IAIA,IAAArW,EAAAoW,EAAAE,OAAA,EAAAD,GAAAE,OACAC,EAAAJ,EAAAE,SAAAD,EAAAD,EAAAtS,QAAAyS,OAGA,KAAAC,EAAA,KACAA,IAAAC,MAAA,OAIAjV,MAAAqU,EAAA7V,KACA6V,EAAA7V,GAAA0W,EAAAF,EAAAN,KAIA,OAAAL,GAlEAtX,EAAAoY,UAqFA,SAAA3X,EAAAwX,EAAAb,GACA,IAAAG,EAAAH,GAAA,GACAiB,EAAAd,EAAAe,UAEA,sBAAAD,EACA,UAAAhB,UAAA,4BAGA,IAAAkB,EAAAhU,KAAA9D,GACA,UAAA4W,UAAA,4BAGA,IAAAlW,EAAAkX,EAAAJ,GAEA,GAAA9W,IAAAoX,EAAAhU,KAAApD,GACA,UAAAkW,UAAA,2BAGA,IAAAF,EAAA1W,EAAA,IAAAU,EAEA,SAAAoW,EAAAiB,OAAA,CACA,IAAAA,EAAAjB,EAAAiB,OAAA,EACA,GAAAnS,MAAAmS,GAAA,UAAAzU,MAAA,6BACAoT,GAAA,aAAasB,KAAAC,MAAAF,GAGb,GAAAjB,EAAAoB,OAAA,CACA,IAAAJ,EAAAhU,KAAAgT,EAAAoB,QACA,UAAAtB,UAAA,4BAGAF,GAAA,YAAaI,EAAAoB,OAGb,GAAApB,EAAApP,KAAA,CACA,IAAAoQ,EAAAhU,KAAAgT,EAAApP,MACA,UAAAkP,UAAA,0BAGAF,GAAA,UAAaI,EAAApP,KAGb,GAAAoP,EAAA/P,QAAA,CACA,sBAAA+P,EAAA/P,QAAAoR,YACA,UAAAvB,UAAA,6BAGAF,GAAA,aAAaI,EAAA/P,QAAAoR,cAGbrB,EAAAsB,WACA1B,GAAA,cAGAI,EAAAhP,SACA4O,GAAA,YAGA,GAAAI,EAAAnP,SAAA,CACA,IAAAA,EAAA,iBAAAmP,EAAAnP,SACAmP,EAAAnP,SAAAsB,cAAA6N,EAAAnP,SAEA,OAAAA,GACA,OACA+O,GAAA,oBACA,MACA,UACAA,GAAA,iBACA,MACA,aACAA,GAAA,oBACA,MACA,QACA,UAAAE,UAAA,+BAIA,OAAAF,GA3JA,IAAAS,EAAAkB,mBACAR,EAAAS,mBACArB,EAAA,MAUAa,EAAA,wCA0JA,SAAAJ,EAAAhB,EAAAS,GACA,IACA,OAAAA,EAAAT,GACG,MAAA1R,GACH,OAAA0R,mBChMAlX,EAAAD,QAAA,SAAAgZ,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAhZ,EAAAW,OAAAY,OAAAwX,GAEA/Y,EAAAiZ,WAAAjZ,EAAAiZ,SAAA,IACAtY,OAAAC,eAAAZ,EAAA,UACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAE,KAGAS,OAAAC,eAAAZ,EAAA,MACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAC,KAGAU,OAAAC,eAAAZ,EAAA,WACAa,YAAA,IAEAb,EAAAgZ,gBAAA,EAEA,OAAAhZ,kCCtBA,SAAAA,GAAAH,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAcO,MAAMqZ,EAAoBlZ,EAAOD,QACzBkC,EAAA,wDCff,IAAAkX,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBC,SAAUF,EAAA,OACVzF,YAAayF,EAAA,OACb7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH1J,YAAayJ,EAAA,OACbvL,MAAOuL,EAAA,OACP1K,SAAU0K,EAAA,OACVG,eAAgBH,EAAA,OAChBI,iBAAkBJ,EAAA,OAClBK,kBAAmBL,EAAA,OACnBM,OAAQN,EAAA,OACR5K,KAAM4K,EAAA,OACNO,SAAUP,EAAA,OACV3Y,KAAM2Y,EAAA,OAAiBC,WACvB7J,OAAQ4J,EAAA,QAAkBA,EAAA,QAC1B3F,OAAQ2F,EAAA,QAAkBA,EAAA,QAC1B3K,QAAS2K,EAAA,OACTQ,QAASR,EAAA,uCC3BV,IAAAA,EAAAtZ,EAAA,GAE4BsZ,EAAA,MAAgB,CAC3C7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH/D,OAAQ8D,EAAA,QACPA,EAAA,MAAgB,CACf7D,eAAgB6D,EAAA,OAAiBC,WACjChE,QAAS+D,EAAA,OAAiBC,WAC1BtL,KAAMqL,EAAA,OAAiBC,cAGzBQ,MAAOT,EAAA,QAAkBA,EAAA,OAAiBC,4CCnB3C,IAAAD,EAAAtZ,EAAA,GAE2BsZ,EAAA,MAAgB,CAC1C7V,IAAK6V,EAAA,OAAiBC,WACtBS,aAAcV,EAAA,OACd7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHU,SAAUX,EAAA,OACVY,WAAYZ,EAAA,OACZ/D,QAAS+D,EAAA,OAAiBC,WAC1B5Y,KAAM2Y,EAAA,OAAiBC,WACvBY,MAAOb,EAAA,OAAiBC,WACxB5J,OAAQ2J,EAAA,OAAiBC,WACzBa,QAASd,EAAA,OAAiBC,2CCnB3B,IAAAD,EAAAtZ,EAAA,GAE+BsZ,EAAA,MAAgB,CAC9C7V,IAAK6V,EAAA,OAAiBC,WACtBjI,UAAWgI,EAAA,OAAiBC,WAC5B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlI,QAASiI,EAAA,IACTe,gBAAiBf,EAAA,OACjB3J,OAAQ2J,EAAA,OAAiBC,WACzBe,iBAAkBhB,EAAA,uCChBnB,IAAAA,EAAAtZ,EAAA,GAEmBsZ,EAAA,MAAgB,CAClC7V,IAAK6V,EAAA,OAAiBC,WACtBgB,kBAAmBjB,EAAA,OACnBpG,MAAOoG,EAAA,QAAkBA,EAAA,QAAkBC,WAC3C9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH1L,SAAUyL,EAAA,OAAiBC,WAC3B7J,OAAQ4J,EAAA,QAAkBA,EAAA,QAC1BjH,UAAWiH,EAAA,UAAoB,CAC9BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHjH,SAAUgH,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHiB,cAAelB,EAAA,KACfvH,MAAOuH,EAAA,OAAiBC,WACxBkB,mBAAoBnB,EAAA,uCC1BrB,IAAAA,EAAAtZ,EAAA,GAEwBsZ,EAAA,MAAgB,CACvC7V,IAAK6V,EAAA,OAAiBC,WACtBtF,QAASqF,EAAA,OAAiBC,WAC1B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHvF,QAASsF,EAAA,OAAiBC,WAC1BpF,MAAOmF,EAAA,QAAkBA,EAAA,QAAkBC,WAC3C3D,KAAM0D,EAAA,OAAiBC,WACvBrF,UAAWoF,EAAA,OAAiBC,2CChB7B,IAAAD,EAAAtZ,EAAA,GAE4BsZ,EAAA,MAAgB,CAC3C7V,IAAK6V,EAAA,OAAiBC,WACtBmB,QAASpB,EAAA,QACRA,EAAA,MAAgB,CACfjD,MAAOiD,EAAA,OAAiBC,WACxB3C,KAAM0C,EAAA,OACNlC,QAASkC,EAAA,UAGX7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlD,MAAOiD,EAAA,OAAiBC,WACxBhE,QAAS+D,EAAA,OAAiBC,WAC1BoB,WAAYrB,EAAA,KACZ3J,OAAQ2J,EAAA,OAAiBC,2CCtB1B,IAAAD,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBqB,KAAMtB,EAAA,KACNzV,KAAMyV,EAAA,OACN7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHsB,IAAKvB,EAAA,KACLwB,KAAMxB,EAAA,KACN1C,KAAM0C,EAAA,OACNO,SAAUP,EAAA,OACVyB,UAAWzB,EAAA,OACXxC,MAAOwC,EAAA,OACP0B,OAAQ1B,EAAA,uCCpBT,IAAAA,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtBjI,UAAWgI,EAAA,OAAiBC,WAC5B0B,YAAa3B,EAAA,QAAkBA,EAAA,QAC/B7S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH2B,KAAM5B,EAAA,KAAeC,WACrBxQ,MAAOuQ,EAAA,IACP3C,QAAS2C,EAAA,OAAiBC,WAC1BxI,OAAQuI,EAAA,OAAiBC,WACzB9C,SAAU6C,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH7C,SAAU4C,EAAA,OAAiBC,WAC3B5J,OAAQ2J,EAAA,OAAiBC,2CCvB1B,IAAAD,EAAAtZ,EAAA,GAE8BsZ,EAAA,MAAgB,CAC7C7V,IAAK6V,EAAA,OAAiBC,WACtB4B,YAAa7B,EAAA,OACbhI,UAAWgI,EAAA,OAAiBC,WAC5B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlI,QAASiI,EAAA,IACT8B,YAAa9B,EAAA,OACb3J,OAAQ2J,EAAA,OAAiBC,2CChB1B,IAAAD,EAAAtZ,EAAA,GAEsBsZ,EAAA,MAAgB,CACrC7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH1J,YAAayJ,EAAA,OACbxJ,SAAUwJ,EAAA,OAAiBC,WAC3BU,SAAUX,EAAA,OAAiBC,WAC3B7J,OAAQ4J,EAAA,QAAkBA,EAAA,QAAkBC,WAC5CzC,MAAOwC,EAAA,OAAiBC,2CChBzB,IAAAD,EAAAtZ,EAAA,GAEoBsZ,EAAA,MAAgB,CACnC7V,IAAK6V,EAAA,OAAiBC,WACtB8B,OAAQ/B,EAAA,KACRvC,MAAOuC,EAAA,KACPgC,SAAUhC,EAAA,OACViC,YAAajC,EAAA,KACbkC,gBAAiBlC,EAAA,KACjBmC,SAAUnC,EAAA,UAAoB,CAC7BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHmC,QAASpC,EAAA,OAAiBC,WAC1B9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH1J,YAAayJ,EAAA,OACbvL,MAAOuL,EAAA,OACPqC,cAAerC,EAAA,KACf1K,SAAU0K,EAAA,OACVpN,UAAWoN,EAAA,OAAiBC,WAC5B7K,KAAM4K,EAAA,OACNsC,UAAWtC,EAAA,UAAoB,CAC9BA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHsC,YAAavC,EAAA,OAAiBC,WAC9BnN,SAAUkN,EAAA,OAAiBC,WAC3BpN,WAAYmN,EAAA,OACZwC,QAASxC,EAAA,OACTyC,OAAQzC,EAAA,OACR0C,qBAAsB1C,EAAA,KACtB2C,WAAY3C,EAAA,KACZ4C,iBAAkB5C,EAAA,KAClB6C,eAAgB7C,EAAA,KAChB3K,QAAS2K,EAAA,OACT8C,WAAY9C,EAAA,KACZ+C,aAAc/C,EAAA,qCC3Cf,IAAAA,EAAAtZ,EAAA,GAEqBsZ,EAAA,MAAgB,CACpC7V,IAAK6V,EAAA,OAAiBC,WACtB9S,YAAa6S,EAAA,UAAoB,CAChCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACHlW,aAAciW,EAAA,UAAoB,CACjCA,EAAA,OACAA,EAAA,WAAqBzW,QACnB0W,WACH1J,YAAayJ,EAAA,OAAiBC,WAC9BxL,MAAOuL,EAAA,OACP1K,SAAU0K,EAAA,OACVG,eAAgBH,EAAA,OAChBI,iBAAkBJ,EAAA,OAClBK,kBAAmBL,EAAA,OACnBM,OAAQN,EAAA,OACR5K,KAAM4K,EAAA,OACNzL,SAAUyL,EAAA,OAAiBC,WAC3B+C,SAAUhD,EAAA,OACV3Y,KAAM2Y,EAAA,OAAiBC,WACvBgD,eAAgBjD,EAAA,QACfA,EAAA,MAAgB,CACfkD,YAAalD,EAAA,OACb/O,KAAM+O,EAAA,KACNmD,YAAanD,EAAA,UAGf5J,OAAQ4J,EAAA,QAAkBA,EAAA,QAC1BoD,MAAOpD,EAAA,OACP3F,OAAQ2F,EAAA,QAAkBA,EAAA,QAC1B3K,QAAS2K,EAAA,OACTQ,QAASR,EAAA,yBClCV,WAAanZ,EAAAD,QAAAyC,KAAA,MAAb,mBCAA,WAAaxC,EAAAD,QAAAyC,KAAA,oBAAb,iCCAA3C,EAAAkB,EAAAkB,GAAA,SAAAjC,GAAA,IAAAmC,EAAAtC,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,wBAAAE,EAAA,QAAAqa,EAAA3c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,sCAAAua,EAAA,QAAArR,EAAAtL,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,yBAAAkJ,EAAA,WAAAC,EAAAvL,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAAmJ,EAAA,mBAAAqR,EAAA5c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,gCAAAwa,EAAA,kBAAAC,EAAA7c,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,oCAAAya,EAAA,sBAAAC,EAAA9c,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,wBAAA0a,EAAA,UAAAC,EAAA/c,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,gCAAA2a,EAAA,kBAAAC,EAAAhd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,6BAAA4a,EAAA,eAAAC,EAAAjd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,+BAAA6a,EAAA,QAAAC,EAAAld,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,qCAAA8a,EAAA,QAAAC,EAAAnd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAA+a,EAAA,mBAAAC,EAAApd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,yBAAAgb,EAAA,WAAAC,EAAArd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,yBAAAib,EAAA,WAAAC,EAAAtd,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,4BAAAkb,EAAA,cAAAC,EAAAvd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,mCAAAmb,EAAA,qBAAAC,EAAAxd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,2BAAAob,EAAA,aAAAC,EAAAzd,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,yBAAAqb,EAAA,WAAAC,EAAA1d,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,0BAAAsb,EAAA,QAqCCC,OAAeC,YAAczd,EAAOD,2DC5BrC,IAAA2d,EAA2B7d,EAAQ,IAEnC,SAAA8d,KACA,SAAAC,KACAA,EAAAC,kBAAAF,EAEA3d,EAAAD,QAAA,WACA,SAAA+d,EAAAvb,EAAAwb,EAAAC,EAAAtQ,EAAAuQ,EAAA/R,GACA,GAAAA,IAAAwR,EAAA,CAIA,IAAAQ,EAAA,IAAApa,MACA,mLAKA,MADAoa,EAAA1d,KAAA,sBACA0d,GAGA,SAAAC,IACA,OAAAL,EAFAA,EAAA1E,WAAA0E,EAMA,IAAAM,EAAA,CACAC,MAAAP,EACAQ,KAAAR,EACAS,KAAAT,EACAU,OAAAV,EACAnc,OAAAmc,EACAW,OAAAX,EACAY,OAAAZ,EAEAa,IAAAb,EACAc,QAAAT,EACAU,QAAAf,EACAgB,YAAAhB,EACAiB,WAAAZ,EACAa,KAAAlB,EACAmB,SAAAd,EACAe,MAAAf,EACAgB,UAAAhB,EACAiB,MAAAjB,EACAkB,MAAAlB,EAEAmB,eAAA1B,EACAC,kBAAAF,GAKA,OAFAS,EAAAmB,UAAAnB,EAEAA,iCCnDApe,EAAAD,QAFA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport interface DocumentI {\n\tModelName: string;\n\t_id: string;\n\treadonly dateCreated: string;\n\tdateModified: string;\n}\n\nexport class ModelClass<D extends DocumentI> {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, ModelClass<any>> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<Array<ModelClass<any>>>);\n\tpublic static findOne: ((criteria: any) => Promise<ModelClass<any> | null>);\n\tpublic static findById: ((id: string) => Promise<ModelClass<any> | null>);\n\n\t[propName: string]: any;\n\tpublic get id(): string | null {\n\t\treturn this.changes._id || this._id;\n\t}\n\tpublic set id(value: string | null) {\n\t\tif (this._id !== value && value) {\n\t\t\tthis.changes._id = value;\n\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t}\n\t}\n\tpublic changes: D;\n\tpublic readonly document: D;\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\n\tpublic static CacheGet<ModelT extends ModelClass<any>>(id: string): ModelT | null {\n\t\tif (typeof id === \"string\" && ModelClass.Cache.has(id)) {\n\t\t\tconst cache: ModelT | undefined = ModelClass.Cache.get(id) as ModelT;\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet<ModelT extends ModelClass<any>>(data: ModelClass<any>): ModelT | null {\n\t\tif (data._id && ModelClass.isValidId(data._id)) {\n\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\treturn data as ModelT;\n\t\t}\n\t\treturn data as ModelT;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tModelClass.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = ModelClass.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model && Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static async findByIdBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, id: string):\n\t\t\tPromise<ModelT|null> {\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (!!cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/:id`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (!!cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (!!socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (!!data && ModelClass.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tModelClass.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: Array<ModelClass<any>> = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items as ModelT[]; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tModelClass.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(propNames: Array<string | symbol | number>, props?: D) {\n\t\tconst self = this;\n\t\tthis.changes = new Object() as D;\n\t\tthis.document = (props ? props : new Object()) as D;\n\t\tpropNames.forEach((key) => {\n\t\t\tObject.defineProperty(self, key, {\n\t\t\t\tget: () => {\n\t\t\t\t\tconst value = self.changes[key];\n\t\t\t\t\tif (value !== undefined) { return value; }\n\t\t\t\t\treturn self.document[key];\n\t\t\t\t},\n\t\t\t\tset: (value: any) => {\n\t\t\t\t\tif (self.document[key] !== value) {\n\t\t\t\t\t\tself.changes[key] = value;\n\t\t\t\t\t\tself.changes.dateModified = (new Date()).toISOString();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.changes = new Object() as D;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.isValid() ? { ...this.document, ...this.changes } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = `${object._id}`;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tif (typeof this.document._id === \"undefined\") {\n\t\t\treturn new Error(\"_id is undefined\");\n\t\t}\n\n\t\tif (this.document._id && !ModelClass.isValidId(this.document._id)) {\n\t\t\treturn new Error(`Invalid id: ${this.document._id}`);\n\t\t}\n\n\t\tif (typeof this.document.dateModified === \"undefined\") {\n\t\t\treturn new Error(\"dateModified is undefined\");\n\t\t}\n\n\t\tif (this.document.dateModified &&\n\t\t\tisNaN(Date.parse(this.document.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.document.dateModified}`);\n\t\t}\n\n\t\tif (typeof this.document.dateCreated === \"undefined\") {\n\t\t\treturn new Error(\"dateCreated is undefined\");\n\t\t}\n\n\t\tif (this.document.dateCreated &&\n\t\t\tisNaN(Date.parse(this.document.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.document.dateCreated}`);\n\t\t}\n\n\t\tif (this.changes._id &&\n\t\t\t!ModelClass.isValidId(this.changes._id)) {\n\t\t\treturn new Error(`Invalid id: ${this.changes._id}`);\n\t\t}\n\n\t\tif (this.changes.dateModified && isNaN(Date.parse(this.changes.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.changes.dateModified}`);\n\t\t}\n\n\t\tif (this.changes.dateCreated && isNaN(Date.parse(this.changes.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.changes.dateCreated}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\ttry {\n\t\t\tconst superError = this.anyErrors();\n\t\t\tif (superError) { throw superError; }\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this.document[key]) { delete data[key]; }\n\t\t});\n\t\tdata._id = this.changes._id || this._id || undefined;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/:id`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tObject.assign(this, response);\n\t\t\tthis.clearChanges();\n\t\t\tModelClass.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t`/API/${modelName}/:id`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tmethod: \"DELETE\",\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t(res: any) => resolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tModelClass.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.close();\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.useSocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"deviceready\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\ntype OnlineStatusTypes = \"default\" | \"offline\" | \"busy\";\n\ninterface UserI extends DocumentI {\n\ticon: string | null;\n\tfirstName: string;\n\tmiddleName: string;\n\tlastName: string;\n\tbirthday: Date;\n\tcountry: string;\n\tbandManager: boolean;\n\tvenueManager: boolean;\n\tpassword?: string;\n\tconfirmPassword?: string;\n\tbetaFeatureUser: boolean;\n\tsendAnonymousReports: boolean;\n\tsendErrorReports: boolean;\n\tsendEmails: boolean;\n\tsendPromotions: boolean;\n\tuseCookies: boolean;\n\tdescription: string;\n\tactive: boolean;\n\tpaypal: string | null;\n\tfacebook: string | null;\n\ttwitter: string | null;\n\temailVerified: boolean;\n\tcanFind: boolean;\n\tpayment: string | null;\n\tverificationSecret: string | null;\n\tadmin: boolean;\n\tattempts: number;\n\tlastLogin: Date;\n\tlastLoginIP: string;\n\toptions: any;\n\tconnections: string[];\n\tblocked: string[];\n\temail: string;\n\thash: string;\n\tsalt: string;\n\tonlineStatus: OnlineStatusTypes;\n}\n\nexport class User extends ModelClass<UserI> {\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tpublic static async verifyEmail(id: string, secret: string): Promise<any> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\treturn new Promise((resovle) => {\n\t\t\t\t\tsocket.emit(\"/API/User/Verify\", { id, secret }, resovle);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\t\tid,\n\t\t\t\tsecret\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic static async sendEmailVerification(): Promise<any> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\treturn new Promise((resovle) => {\n\t\t\t\t\tsocket.emit(\"/API/User/Verify\", null, resovle);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t\t}\n\t}\n\n\tpublic static getAllConnections(): Promise<User[]> {\n\t\treturn ModelClass.findManyBase(User, null) as\n\t\t\tPromise<User[]>;\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(Notification, null) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase(Upload, null) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<Array<Band | Location | Page | Upload | User | Venue>> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: Array<Band | Location | Page | Upload | User | Venue>) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve([]);\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"null\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (skip !== 0 && Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn ModelClass.findManyBase(User, criteria) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn ModelClass.findOneBase(User, criteria) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: UserI | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/FindOne\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, id) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.isValid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email !== null || userData.email !== \"\") {\n\t\t\t\t\tif (User.EmailRegex[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic constructor(props: UserI) {\n\t\tsuper(keys<UserI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getConnections(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.connections.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic getBlocked(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.blocked.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (this.id) {\n\t\t\t// Type checks\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.firstName)) {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.lastName)) {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.password)) {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.confirmPassword)) {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.email)) {\n\t\t\t\treturn new Error(`Invalid email: ${this.changes.email}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Type checks\n\t\t\tif (typeof this.changes.firstName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.lastName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.password !== \"string\") {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.confirmPassword !== \"string\") {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: More validation checks?\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface UploadI extends DocumentI {\n\tfileData: string;\n\tsrcMIMEType: string;\n\tcroppedFileData: string;\n\towners: string[];\n\tdescription: string;\n\thash: string;\n\tbytes: number;\n\twidth: number;\n\theight: number;\n\toffsetWidth: number;\n\toffsetHeight: number;\n\toffsetLeft: number;\n\toffsetTop: number;\n}\n\nexport class Upload extends ModelClass<UploadI> {\n\tpublic static ModelName: string = \"Upload\";\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase<Upload>(Upload, id);\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn ModelClass.findOneBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, null);\n\t}\n\n\tpublic constructor(props: UploadI) {\n\t\tsuper(keys<UploadI>(), props);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase<User>(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (!this.description) { return new Error(`Invalid description: ${this.description}`); }\n\t\tif (!this.fileData) { return new Error(`Invalid fileData: ${this.fileData}`); }\n\t\tif (!this.width) { return new Error(`Invalid width: ${this.width}`); }\n\t\tif (!this.height) { return new Error(`Invalid height: ${this.height}`); }\n\t\tif (!this.offsetWidth) { return new Error(`Invalid offsetWidth: ${this.offsetWidth}`); }\n\t\tif (!this.offsetHeight) { return new Error(`Invalid offsetHeight: ${this.offsetHeight}`); }\n\t\tif (typeof this.offsetLeft !== \"number\" ||\n\t\t\tthis.offsetLeft < 0) {\n\t\t\t\treturn new Error(`Invalid offsetLeft: ${this.offsetLeft}`);\n\t\t\t}\n\t\tif (typeof this.offsetTop !== \"number\" ||\n\t\t\tthis.offsetTop < 0) {\n\t\t\treturn new Error(`Invalid offsetTop: ${this.offsetTop}`);\n\t\t}\n\n\t\tif (!this.document.hash) { return new Error(`Invalid hash: ${this.document.hash}`); }\n\t\tif (!this.document.bytes) { return new Error(`Invalid bytes: ${this.document.bytes}`); }\n\t\tif (!Array.isArray(this.document.owners) ||\n\t\t\tthis.document.owners.length === 0) {\n\t\t\treturn new Error(`Invalid owners: ${this.document.owners}`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface FacebookAccountI extends DocumentI {\n\taccountId: string;\n\tpageToken: string;\n\tprofile: any;\n\tuserAccessToken: string;\n\tuserRefreshToken: string;\n\tuserId: string;\n}\n\nexport class FacebookAccount extends ModelClass<FacebookAccountI> {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findOneBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn ModelClass.findManyBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic constructor(props: FacebookAccountI) {\n\t\tsuper(keys<FacebookAccountI>(), props);\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Venue } from \"./Venue\";\n\nexport interface Coord {\n\tlat: number;\n\tlng: number;\n}\n\ninterface GigI extends DocumentI {\n\tstartTime: Date;\n\tstopTime: Date;\n\tlocation: string;\n\tvenue: string;\n\tbands: string[];\n\ttoBeAnnounced: boolean;\n\tbandOwnersAccepted: string[];\n\tvenueOwnerAccepted: string;\n\towners: string[];\n}\n\nexport class Gig extends ModelClass<GigI> {\n\tpublic static ModelName: string = \"Gig\";\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn ModelClass.findByIdBase(Gig, id) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, criteria) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: Coord,\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic constructor(props: GigI) {\n\t\tsuper(keys<GigI>(), props);\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, { _id: this.bands }) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, this.venue) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn ModelClass.findByIdBase(Location, this.location) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface TwitterAccountI extends DocumentI {\n\tuserId: string;\n\taccountId: string;\n\taccessToken: string;\n\ttokenSecret: string;\n\tprofile: any;\n}\n\nexport class TwitterAccount extends ModelClass<TwitterAccountI> {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findOneBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn ModelClass.findManyBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic constructor(props: TwitterAccountI) {\n\t\tsuper(keys<TwitterAccountI>(), props);\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface BandI extends DocumentI {\n\tname: string;\n\twebsite: string;\n\temail: string;\n\tcityName: string;\n\tcityPlaceID: string;\n\tdescription: string;\n\tmetadata: string;\n\ticon: string | null;\n\tphotos: string[];\n\towners: string[];\n\tfacebook: string | null;\n\tfacebookPageId: string | null;\n\tfacebookPageName: string | null;\n\tfacebookPageToken: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n}\n\nexport class Band extends ModelClass<BandI> {\n\tpublic static ModelName: string = \"Band\";\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn ModelClass.findOneBase(Band, criteria) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, criteria) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn ModelClass.findByIdBase(Band, id) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic constructor(props: BandI) {\n\t\tsuper(keys<BandI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn ModelClass.findByIdBase(Upload, this.icon) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn ModelClass.findManyBase(\n\t\t\t\t\tUpload, { _id: photos }\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst error = super.anyErrors();\n\t\tif (error) { return error; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") {\n\t\t\treturn new Error(`cityPlaceID is not a string, it's ${typeof this.cityPlaceID} instead`);\n\t\t}\n\t\tif (this.cityPlaceID === \"\") {\n\t\t\treturn new Error(\"cityPlaceID is empty\");\n\t\t}\n\n\t\tif (typeof this.name !== \"string\") {\n\t\t\treturn new Error(\"name is not a string\");\n\t\t}\n\t\tif (this.name === \"\") {\n\t\t\treturn new Error(\"name is empty\");\n\t\t}\n\n\t\tif (typeof this.description !== \"string\") {\n\t\t\treturn new Error(\"description is not a string\");\n\t\t}\n\t\tif (this.description === \"\") {\n\t\t\treturn new Error(\"description is empty\");\n\t\t}\n\t\tif (this.description === \"<p><br></p>\") {\n\t\t\treturn new Error(\"description is practically empty\");\n\t\t}\n\n\t\tif (!Array.isArray(this.owners)) {\n\t\t\treturn new Error(\"owners is not an array\");\n\t\t}\n\t\tif (this.owners.length === 0) {\n\t\t\treturn new Error(\"owners does not contain a single id\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ntype LocationType = \"Point\" | \"LineString\" | \"Polygon\";\n\ninterface LocationI extends DocumentI {\n\ttype: LocationType;\n\tplaceId: string;\n\taddress: string;\n\tpoint: number[];\n\tutcOffset: number;\n}\n\nexport class Location extends ModelClass<LocationI> {\n\tpublic static ModelName: string = \"Location\";\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn ModelClass.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn ModelClass.findManyBase(Location, criteria) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic constructor(props: LocationI) {\n\t\tsuper(keys<LocationI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface VenueI extends DocumentI {\n\towners: string[];\n\tname: string;\n\tdescription: string;\n\twebsite: string;\n\tphone: string;\n\temail: string;\n\tlocation: string;\n\topenCloseTimes: Array<{\n\t\topen: boolean;\n\t\topeningTime: string;\n\t\tclosingTime: string;\n\t}>;\n\ticon: string | null;\n\tphotos: string[];\n\tfacebook: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n\tmetadata: string;\n\tfacebookPageId: string;\n\tfacebookPageName: string;\n\tfacebookPageToken: string;\n}\n\nexport class Venue extends ModelClass<VenueI> {\n\tpublic static ModelName: string = \"Venue\";\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn ModelClass.findOneBase(Venue, criteria) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, criteria) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, id) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic constructor(props: VenueI) {\n\t\tsuper(keys<VenueI>(), props);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUpload, { _id: photos }\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, this.location || \"\") as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!ModelClass.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","\nexport const ModelNameToModel = async (name: string):\n\tPromise<any> => {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n};\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\ninterface ConversationI extends DocumentI {\n\tevents: ConversationEvent[];\n\tusers: string[];\n}\n\nexport class Conversation extends ModelClass<ConversationI> {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tModelClass.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tModelClass.CacheSet<Conversation>(conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn ModelClass.findByIdBase(Conversation, id) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn ModelClass.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, criteria) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic constructor(props: ConversationI) {\n\t\tsuper(keys<ConversationI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface GooglePlaceI extends DocumentI {\n\tplaceId: string;\n\tdetails: any;\n}\n\nexport class GooglePlace extends ModelClass<GooglePlaceI> {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn ModelClass.findManyBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic constructor(props: GooglePlaceI) {\n\t\tsuper(keys<GooglePlaceI>(), props);\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\ninterface NotificationI extends DocumentI {\n\tactions: NotificationAction[];\n\tlabel: string;\n\tmessage: string;\n\tseenByUser: boolean;\n\tuserId: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends ModelClass<NotificationI> {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification/FindMany\", null);\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(\"Notification\", null) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn ModelClass.findByIdBase(\"Notification\", id) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic constructor(props: NotificationI) {\n\t\tsuper(keys<NotificationI>(), props);\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PostI extends DocumentI {\n\taccountId: string;\n\tcoordinates: number[];\n\tdone: boolean;\n\terror: any;\n\tnetwork: string;\n\tpageId: string;\n\tpostDate: Date;\n\tpostText: string;\n\tuserId: string;\n}\n\nexport class Post extends ModelClass<PostI> {\n\tpublic static ModelName: string = \"Post\";\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn ModelClass.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn ModelClass.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic constructor(props: PostI) {\n\t\tsuper(keys<PostI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface ErrorReportI extends DocumentI {\n\tworthReporting: boolean;\n\tuserId: string | null;\n\tversion: string;\n\tstack: string;\n\tmessage: string;\n\tname: string;\n\tfileName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport class ErrorReport extends ModelClass<ErrorReportI> {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn ModelClass.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic constructor(props: ErrorReportI) {\n\t\tsuper(keys<ErrorReportI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PageI extends DocumentI {\n\tadmin: string;\n\tmetadata: string;\n\tdata: string;\n\ttitle: string;\n\tlink: string;\n\tvisits: number;\n\trevisions: number;\n\thide: boolean;\n\tblog: boolean;\n\tdoc: boolean;\n}\n\nexport class Page extends ModelClass<PageI> {\n\tpublic static ModelName: string = \"Page\";\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn ModelClass.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn ModelClass.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn ModelClass.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic constructor(props: PageI) {\n\t\tsuper(keys<PageI>(), props);\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { keys } from \"ts-transformer-keys\";\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface RequestI extends DocumentI {\n\tto: string;\n\tfrom: string;\n\temailSent: boolean;\n\tstatus: string;\n\toptions: string[];\n\ttype: string;\n\tuserData: any;\n}\n\nexport class Request extends ModelClass<RequestI> {\n\tpublic static ModelName: string = \"Request\";\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn ModelClass.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn ModelClass.findByIdBase(Request, id);\n\t}\n\n\tpublic constructor(props: RequestI) {\n\t\tsuper(keys<RequestI>(), props);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\nexport default GigGizmoPropTypes;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { API } from \"./API\";\nexport { default as GigGizmoPropTypes } from \"./PropTypes\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationCallback,\n\tConversationCallbackDestroyer,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Coord, Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport { DocumentI, ModelClass } from \"./Model\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\nexport {\n\tNotification,\n\tNotificationAction,\n\tNotificationCallback,\n\tNotificationCallbackDestroyer\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User, UserCallback, UserCallbackDestroyer } from \"./User\";\nexport { Venue } from \"./Venue\";\n\n(global as any).GigGizmoSDK = module.exports;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}