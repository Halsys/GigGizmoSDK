{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/RESTModel.ts","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","RESTModel","_API__WEBPACK_IMPORTED_MODULE_0__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_1__","[object Object]","dataMaybe","this","expiration","Date","getTime","document","changes","data","JSON","parse","ModelName","assign","e","console","log","error","dateCreated","dateModified","getField","toJSON","id","setField","_id","Cache","has","cache","isValidId","set","delete","ModelMaybe","Error","Model","modelName","getModelName","pattern","RegExp","test","constructor","hasWebSocket","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","CacheSet","isArray","items","forEach","push","map","itemData","item","isValid","toObject","stringify","isNaN","superError","anyErrors","response","clearChanges","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","toISOString","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_Band__WEBPACK_IMPORTED_MODULE_1__","_Conversation__WEBPACK_IMPORTED_MODULE_2__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_3__","_Gig__WEBPACK_IMPORTED_MODULE_4__","_Notification__WEBPACK_IMPORTED_MODULE_5__","_Post__WEBPACK_IMPORTED_MODULE_6__","_RESTModel__WEBPACK_IMPORTED_MODULE_7__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_8__","_Upload__WEBPACK_IMPORTED_MODULE_9__","_Venue__WEBPACK_IMPORTED_MODULE_10__","password","confirmPassword","icon","active","admin","firstName","middleName","lastName","birthday","country","bandManager","venueManager","betaFeatureUser","sendAnonymousReports","sendErrorReports","sendEmails","sendPromotions","useCookies","fullName","email","salt","hash","facebook","twitter","description","emailVerified","attempts","lastLoginIP","lastLogin","canContact","canFind","options","connections","blocked","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","undefined","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","findById","maybePassword","lowercaseFirstName","lowercaseLastName","super","includes","validatePassword","save","remove","agreement","EmailRegex","Upload","_RESTModel__WEBPACK_IMPORTED_MODULE_0__","_User__WEBPACK_IMPORTED_MODULE_1__","fileData","croppedFileData","owners","bytes","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","dataUrl","upload","userId","find","FacebookAccount","_RESTModel__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","accountId","userAccessToken","userRefreshToken","profile","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","Gig","_Location__WEBPACK_IMPORTED_MODULE_2__","_RESTModel__WEBPACK_IMPORTED_MODULE_3__","_Venue__WEBPACK_IMPORTED_MODULE_4__","startTime","stopTime","venue","bands","toBeAnnounced","bandOwnersAccepted","venueOwnerAccepted","bandId","venueId","gigData","band","times","filtered","filter","time","dayDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","TwitterAccount","accessToken","tokenSecret","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_0__","_Gig__WEBPACK_IMPORTED_MODULE_1__","_RESTModel__WEBPACK_IMPORTED_MODULE_2__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_3__","_Upload__WEBPACK_IMPORTED_MODULE_4__","_User__WEBPACK_IMPORTED_MODULE_5__","website","cityName","cityPlaceID","metadata","photos","facebookPageId","facebookPageName","facebookPageToken","google","findByBand","self","owner","userIsOwner","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_1__","type","placeId","address","point","utcOffset","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","phone","openCloseTimes","findByVenue","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","events","users","callbackId","conv","cb","message","dateTimePosted","details","maybeType","changeCallbacks","label","actions","seenByUser","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","body","timestamp","requestPermission","network","postText","postDate","coordinates","done","version","stack","fileName","columnNumber","lineNumber","title","link","visits","revisions","hide","Boolean","blog","doc","page","to","emailSent","gig","gigId","option","request","str","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","bandOwnerAccepted","payment","paypal","metaData","closingTime","openingTime","_PropTypes__WEBPACK_IMPORTED_MODULE_0__","_API__WEBPACK_IMPORTED_MODULE_1__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Notification__WEBPACK_IMPORTED_MODULE_9__","_Page__WEBPACK_IMPORTED_MODULE_10__","_Post__WEBPACK_IMPORTED_MODULE_11__","_Request__WEBPACK_IMPORTED_MODULE_12__","_RESTModel__WEBPACK_IMPORTED_MODULE_13__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_14__","_Upload__WEBPACK_IMPORTED_MODULE_15__","_User__WEBPACK_IMPORTED_MODULE_16__","_Venue__WEBPACK_IMPORTED_MODULE_17__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_18__","GigGizmoAPI","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport interface Document {\n\tModelName: string;\n\t_id: string;\n\tid: string;\n\tdateCreated: string;\n\tdateModified: string;\n}\n\nexport abstract class RESTModel<D extends Document> {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, RESTModel<any>> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<Array<RESTModel<any>>>);\n\tpublic static findOne: ((criteria: any) => Promise<RESTModel<any> | null>);\n\tpublic static findById: ((id: string) => Promise<RESTModel<any> | null>);\n\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\tprotected changes: D;\n\tprotected document: D;\n\n\tget ModelName(): string {\n\t\treturn this.document.ModelName || this.ModelName;\n\t}\n\n\tget dateCreated(): Date {\n\t\tconst dateCreated =\n\t\t\tthis.document.dateCreated || null;\n\t\treturn dateCreated ?\n\t\t\tnew Date(dateCreated) :\n\t\t\tnew Date();\n\t}\n\n\tget dateModified(): Date {\n\t\tconst dateModified =\n\t\t\tthis.getField<string>(\"dateModified\");\n\t\treturn dateModified ?\n\t\t\tnew Date(dateModified) :\n\t\t\tnew Date();\n\t}\n\n\tset dateModified(value: Date) {\n\t\tthis.changes.dateModified = value.toJSON();\n\t}\n\n\tget id(): string | null {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset id(value: string | null) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tget _id(): string | null {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset _id(value: string | null) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tpublic static CacheGet<ModelT extends RESTModel<any>>(id: string): ModelT | null {\n\t\tif (typeof id === \"string\" && RESTModel.Cache.has(id)) {\n\t\t\tconst cache: ModelT | undefined = RESTModel.Cache.get(id) as ModelT;\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet<ModelT extends RESTModel<any>>(data: RESTModel<any>): ModelT | null {\n\t\tif (data._id && RESTModel.isValidId(data._id)) {\n\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\treturn data as ModelT;\n\t\t}\n\t\treturn data as ModelT;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tRESTModel.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = RESTModel.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static async findByIdBase<ModelT extends RESTModel<any>>(\n\t\tModelMaybe: any,\n\t\tid: string,\n\t\thasWebSocket?: boolean\n\t): Promise<ModelT|null> {\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase<ModelT extends RESTModel<any>>(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<ModelT|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tRESTModel.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase<ModelT extends RESTModel<any>>(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<ModelT[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: Array<RESTModel<any>> = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items as ModelT[]; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tRESTModel.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(dataMaybe?: any) {\n\t\tthis.document = new Object() as D;\n\t\tthis.changes = new Object() as D;\n\t\tif (typeof dataMaybe === \"string\") {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(dataMaybe);\n\t\t\t\tif (data !== null && typeof data.ModelName !== \"undefined\") {\n\t\t\t\t\tdelete data.ModelName;\n\t\t\t\t}\n\t\t\t\tObject.assign(this.document, data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(dataMaybe);\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else if (dataMaybe) {\n\t\t\tif (typeof dataMaybe.document === \"object\" && dataMaybe.document) {\n\t\t\t\tObject.assign(this.document, dataMaybe.document);\n\t\t\t}\n\t\t\tif (typeof dataMaybe.changes === \"object\" && dataMaybe.changes) {\n\t\t\t\tObject.assign(this.changes, dataMaybe.changes);\n\t\t\t} else {\n\t\t\t\tObject.assign(this.document, dataMaybe);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.changes = new Object() as D;\n\t}\n\n\tprotected setField<T>(name: string, value: T): void {\n\t\tif (this.getField(name) !== value) {\n\t\t\tthis.changes[name] = value;\n\t\t\tthis.dateModified = new Date();\n\t\t}\n\t}\n\n\tprotected getField<T>(name: string): T {\n\t\treturn this.changes[name] || this.document[name];\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.isValid() ? { ...this.changes, ...this.document } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = `${object._id}`;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tif (this.document.id &&\n\t\t\t!RESTModel.isValidId(this.document.id)) {\n\t\t\treturn new Error(`Invalid id: ${this.document.id}`);\n\t\t}\n\n\t\tif (this.document.dateModified && isNaN(Date.parse(this.document.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.document.dateModified}`);\n\t\t}\n\n\t\tif (this.document.dateCreated && isNaN(Date.parse(this.document.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.document.dateCreated}`);\n\t\t}\n\n\t\tif (this.changes.id &&\n\t\t\t!RESTModel.isValidId(this.changes.id)) {\n\t\t\treturn new Error(`Invalid id: ${this.document.id}`);\n\t\t}\n\n\t\tif (this.changes.dateModified && isNaN(Date.parse(this.changes.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.changes.dateModified}`);\n\t\t}\n\n\t\tif (this.changes.dateCreated && isNaN(Date.parse(this.changes.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.changes.dateCreated}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\ttry {\n\t\t\tconst superError = this.anyErrors();\n\t\t\tif (superError) { throw superError; }\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(hasWebSocket?: boolean): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this.document._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this.document[key]) { delete data[key]; }\n\t\t});\n\t\tdata.id = `${this.changes._id || this.document._id || null}`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tthis.document = response;\n\t\t\tthis.clearChanges();\n\t\t\tRESTModel.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(hasWebSocket?: boolean): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tRESTModel.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.SocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\ninterface UserI extends Document {\n\ticon: string | null;\n\tfirstName: string;\n\tmiddleName: string;\n\tlastName: string;\n\tbirthday: Date;\n\tcountry: string;\n\tbandManager: boolean;\n\tvenueManager: boolean;\n\tpassword?: string;\n\tconfirmPassword?: string;\n\tbetaFeatureUser: boolean;\n\tsendAnonymousReports: boolean;\n\tsendErrorReports: boolean;\n\tsendEmails: boolean;\n\tsendPromotions: boolean;\n\tuseCookies: boolean;\n\tdescription: string;\n\tactive: boolean;\n\tpaypal: string | null;\n\tfacebook: string | null;\n\ttwitter: string | null;\n\temailVerified: boolean;\n\tcanContact: boolean;\n\tcanFind: boolean;\n\tpayment: string | null;\n\tverificationSecret: string | null;\n\tadmin: boolean;\n\tattempts: number;\n\tlastLogin: Date;\n\tlastLoginIP: string;\n\toptions: any;\n\tconnections: string[];\n\tblocked: string[];\n\temail: string;\n\thash: string;\n\tsalt: string;\n}\n\nexport class User extends RESTModel<UserI> {\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tget password(): string | null { return this.getField(\"password\"); }\n\tset password(value: string | null) { this.setField(\"password\", value); }\n\n\tget confirmPassword(): string | null { return this.getField(\"confirmPassword\"); }\n\tset confirmPassword(value: string | null) { this.setField(\"confirmPassword\", value); }\n\n\tget icon(): string | null { return this.getField(\"icon\"); }\n\tset icon(value: string | null) { this.setField(\"icon\", value); }\n\n\tset active(value: boolean) { this.setField(\"active\", value); }\n\tget active(): boolean { return this.getField(\"active\"); }\n\n\tset admin(value: boolean) { this.setField(\"admin\", value); }\n\tget admin(): boolean { return this.getField(\"admin\") === true; }\n\n\tget firstName(): string { return this.getField(\"firstName\"); }\n\tset firstName(value: string) { this.setField(\"firstName\", value); }\n\n\tget middleName(): string { return this.getField(\"middleName\"); }\n\tset middleName(value: string) { this.setField(\"middleName\", value); }\n\n\tget lastName(): string { return this.getField(\"lastName\"); }\n\tset lastName(value: string) { this.setField(\"lastName\", value); }\n\n\tget birthday(): Date { return new Date(this.getField(\"birthday\")); }\n\n\tset birthday(value: Date) { this.setField(\"birthday\", (value || new Date()).toJSON()); }\n\tget country(): string { return this.getField(\"country\"); }\n\n\tset country(value: string) { this.setField(\"country\", value); }\n\tget bandManager(): boolean { return this.getField(\"bandManager\") === true; }\n\n\tset bandManager(value: boolean) { this.setField(\"bandManager\", value); }\n\n\tget venueManager(): boolean { return this.getField(\"venueManager\") === true; }\n\tset venueManager(value: boolean) { this.setField(\"venueManager\", value); }\n\n\tget betaFeatureUser(): boolean { return this.getField(\"betaFeatureUser\") === true; }\n\tset betaFeatureUser(value: boolean) { this.setField(\"betaFeatureUser\", value); }\n\n\tget sendAnonymousReports(): boolean { return this.getField(\"sendAnonymousReports\") === true; }\n\tset sendAnonymousReports(value: boolean) { this.setField(\"sendAnonymousReports\", value); }\n\n\tget sendErrorReports(): boolean { return this.getField(\"sendErrorReports\") === true; }\n\n\tset sendErrorReports(value: boolean) { this.setField(\"sendErrorReports\", value); }\n\n\tget sendEmails(): boolean { return this.getField(\"sendEmails\") === true; }\n\tset sendEmails(value: boolean) { this.setField(\"sendEmails\", value); }\n\n\tget sendPromotions(): boolean { return this.getField(\"sendPromotions\") === true; }\n\tset sendPromotions(value: boolean) { this.setField(\"sendPromotions\", value); }\n\n\tget useCookies(): boolean { return this.getField(\"useCookies\") === true; }\n\tset useCookies(value: boolean) { this.setField(\"useCookies\", value); }\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\n\tget email(): string { return this.getField(\"email\"); }\n\tset email(value: string) { this.setField(\"email\", value); }\n\n\tget salt(): string { return this.getField(\"salt\"); }\n\n\tget hash(): string { return this.getField(\"hash\"); }\n\n\tget facebook(): string | null { return this.getField(\"facebook\"); }\n\tset facebook(value: string | null) { this.setField(\"facebook\", value); }\n\n\tget twitter(): string | null { return this.getField(\"twitter\"); }\n\tset twitter(value: string | null) { this.setField(\"twitter\", value); }\n\n\tget description(): string { return this.getField(\"description\"); }\n\tset description(value: string) { this.setField(\"description\", value); }\n\n\tget emailVerified(): boolean { return this.getField(\"emailVerified\"); }\n\tset emailVerified(value: boolean) { this.setField(\"emailVerified\", value); }\n\n\tget attempts(): number { return this.getField(\"attempts\"); }\n\n\tget lastLoginIP(): string { return this.getField(\"lastLoginIP\"); }\n\tset lastLoginIP(value: string) { this.setField(\"lastLoginIP\", value); }\n\n\tget lastLogin(): Date { return new Date(this.getField(\"lastLogin\")); }\n\tset lastLogin(value: Date) { this.setField(\"lastLogin\", (value || new Date()).toJSON()); }\n\n\tget canContact(): boolean { return this.getField(\"canContact\") === true; }\n\tset canContact(value: boolean) { this.setField(\"canContact\", value); }\n\n\tget canFind(): boolean { return this.getField(\"canFind\") === true; }\n\tset canFind(value: boolean) { this.setField(\"canFind\", value); }\n\n\tget options(): any { return this.getField(\"options\"); }\n\tset options(value: any) { this.setField(\"options\", value); }\n\n\tget connections(): string[] { return this.getField(\"connections\"); }\n\tset connections(value: string[]) { this.setField(\"connections\", value); }\n\n\tget blocked(): string[] { return this.getField(\"blocked\"); }\n\tset blocked(value: string[]) { this.setField(\"blocked\", value); }\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(Notification, null, true) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null, true) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<Array<Band | Location | Page | Upload | User | Venue>> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: Array<Band | Location | Page | Upload | User | Venue>) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve([]);\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"null\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (skip !== 0 && Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn RESTModel.findManyBase(User, criteria, true) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn RESTModel.findOneBase(User, criteria, true) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, id, true) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.isValid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getConnections(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.connections.map((id: string) => {\n\t\t\t\treturn User.findById(id);\n\t\t}));\n\t}\n\n\tpublic getBlocked(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.blocked.map((id: string) => {\n\t\t\t\treturn User.findById(id);\n\t\t}));\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (this.id) {\n\t\t\t// Type checks\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.firstName)) {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.lastName)) {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.password)) {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.confirmPassword)) {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.email)) {\n\t\t\t\treturn new Error(`Invalid email: ${this.changes.email}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Type checks\n\t\t\tif (typeof this.changes.firstName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.lastName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.password !== \"string\") {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.confirmPassword !== \"string\") {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: More validation checks?\n\t\treturn null;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\ninterface UploadI extends Document {\n\tfileData: string;\n\tsrcMIMEType: string;\n\tcroppedFileData: string;\n\towners: string[];\n\tdescription: string;\n\thash: string;\n\tbytes: number;\n\twidth: number;\n\theight: number;\n\toffsetWidth: number;\n\toffsetHeight: number;\n\toffsetLeft: number;\n\toffsetTop: number;\n}\n\nexport class Upload extends RESTModel<UploadI> {\n\tpublic static ModelName: string = \"Upload\";\n\n\tget fileData(): string { return this.getField(\"fileData\"); }\n\tset fileData(value: string) { this.setField(\"fileData\", value); }\n\n\tget croppedFileData(): string { return this.getField(\"croppedFileData\"); }\n\tset croppedFileData(value: string) { this.setField(\"croppedFileData\", value); }\n\n\tget description(): string { return this.getField(\"description\"); }\n\tset description(value: string) { this.setField(\"description\", value); }\n\n\tget owners(): string[] { return this.getField(\"owners\"); }\n\tset owners(value: string[]) { this.setField(\"owners\", value); }\n\n\tget hash(): string { return this.getField(\"hash\"); }\n\tset hash(value: string) { this.setField(\"hash\", value); }\n\n\tget bytes(): number { return this.getField(\"bytes\"); }\n\tset bytes(value: number) { this.setField(\"bytes\", value); }\n\n\tget width(): number { return this.getField(\"width\"); }\n\tset width(value: number) { this.setField(\"width\", value); }\n\n\tget height(): number { return this.getField(\"height\"); }\n\tset height(value: number) { this.setField(\"height\", value); }\n\n\tget offsetWidth(): number { return this.getField(\"offsetWidth\"); }\n\tset offsetWidth(value: number) { this.setField(\"offsetWidth\", value); }\n\n\tget offsetHeight(): number { return this.getField(\"offsetHeight\"); }\n\tset offsetHeight(value: number) { this.setField(\"offsetHeight\", value); }\n\n\tget offsetLeft(): number { return this.getField(\"offsetLeft\"); }\n\tset offsetLeft(value: number) { this.setField(\"offsetLeft\", value); }\n\n\tget offsetTop(): number { return this.getField(\"offsetTop\"); }\n\tset offsetTop(value: number) { this.setField(\"offsetTop\", value); }\n\n\tpublic static async uploadFile(dataUrl: string): Promise<Upload> {\n\t\tlet upload = new Upload({ fileData: dataUrl });\n\t\tupload = await upload.save(true);\n\t\treturn upload;\n\t}\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase<Upload>(Upload, id);\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase<Upload>(Upload, criteria, true);\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn RESTModel.findOneBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase<Upload>(Upload, null, true);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase<User>(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (!this.description) { return new Error(`Invalid description: ${this.description}`); }\n\t\tif (!this.fileData) { return new Error(`Invalid fileData: ${this.fileData}`); }\n\t\tif (!this.width) { return new Error(`Invalid width: ${this.width}`); }\n\t\tif (!this.height) { return new Error(`Invalid height: ${this.height}`); }\n\t\tif (!this.offsetWidth) { return new Error(`Invalid offsetWidth: ${this.offsetWidth}`); }\n\t\tif (!this.offsetHeight) { return new Error(`Invalid offsetHeight: ${this.offsetHeight}`); }\n\t\tif (typeof this.offsetLeft !== \"number\" ||\n\t\t\tthis.offsetLeft < 0) {\n\t\t\t\treturn new Error(`Invalid offsetLeft: ${this.offsetLeft}`);\n\t\t\t}\n\t\tif (typeof this.offsetTop !== \"number\" ||\n\t\t\tthis.offsetTop < 0) {\n\t\t\treturn new Error(`Invalid offsetTop: ${this.offsetTop}`);\n\t\t}\n\n\t\tif (!this.document.hash) { return new Error(`Invalid hash: ${this.document.hash}`); }\n\t\tif (!this.document.bytes) { return new Error(`Invalid bytes: ${this.document.bytes}`); }\n\t\tif (!Array.isArray(this.document.owners) ||\n\t\t\tthis.document.owners.length === 0) {\n\t\t\treturn new Error(`Invalid owners: ${this.document.owners}`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\ninterface FacebookAccountI extends Document {\n\taccountId: string;\n\tpageToken: string;\n\tprofile: any;\n\tuserAccessToken: string;\n\tuserRefreshToken: string;\n\tuserId: string;\n}\n\nexport class FacebookAccount extends RESTModel<FacebookAccountI> {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget accountId(): string { return this.getField(\"accountId\"); }\n\tset accountId(value: string) { this.setField(\"accountId\", value); }\n\n\tget userAccessToken(): string { return this.getField(\"userAccessToken\"); }\n\tset userAccessToken(value: string) { this.setField(\"userAccessToken\", value); }\n\n\tget userRefreshToken(): string { return this.getField(\"userRefreshToken\"); }\n\tset userRefreshToken(value: string) { this.setField(\"userRefreshToken\", value); }\n\n\tget profile(): any { return this.getField(\"profile\"); }\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findOneBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn RESTModel.findManyBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { Venue } from \"./Venue\";\n\ninterface GigI extends Document {\n\tstartTime: Date;\n\tstopTime: Date;\n\tlocation: string;\n\tvenue: string;\n\tbands: string[];\n\ttoBeAnnounced: boolean;\n\tbandOwnersAccepted: string[];\n\tvenueOwnerAccepted: string;\n\towners: string[];\n}\n\nexport class Gig extends RESTModel<GigI> {\n\tpublic static ModelName: string = \"Gig\";\n\n\tget startTime(): Date { return new Date(this.getField(\"startTime\")); }\n\tset startTime(value: Date) { this.setField(\"startTime\", value); }\n\n\tget stopTime(): Date { return new Date(this.getField(\"stopTime\")); }\n\tset stopTime(value: Date) { this.setField(\"stopTime\", value.toJSON()); }\n\n\tget location(): string { return this.getField(\"location\"); }\n\tset location(value: string) { this.setField(\"location\", value); }\n\n\tget venue(): string { return this.getField(\"venue\"); }\n\tset venue(value: string) { this.setField(\"venue\", value); }\n\n\tget bands(): string[] { return this.getField(\"bands\"); }\n\tset bands(value: string[]) { this.setField(\"bands\", value); }\n\n\tget active(): boolean { return this.getField(\"active\"); }\n\n\tget toBeAnnounced(): boolean { return this.getField(\"toBeAnnounced\"); }\n\tset toBeAnnounced(value: boolean) { this.setField(\"toBeAnnounced\", value); }\n\n\tget bandOwnersAccepted(): string[] { return this.getField(\"bandOwnersAccepted\"); }\n\tset bandOwnersAccepted(value: string[]) { this.setField(\"bandOwnersAccepted\", value); }\n\n\tget venueOwnerAccepted(): string { return this.getField(\"venueOwnerAccepted\"); }\n\tset venueOwnerAccepted(value: string) { this.setField(\"venueOwnerAccepted\", value); }\n\n\tget owners(): string[] { return this.getField(\"owners\"); }\n\tset owners(value: string[]) { this.setField(\"owners\", value); }\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn RESTModel.findByIdBase(Gig, id, true) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, criteria, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, { _id: this.bands }, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, this.venue, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn RESTModel.findByIdBase(Location, this.location, true) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\ninterface TwitterAccountI extends Document {\n\tuserId: string;\n\taccountId: string;\n\taccessToken: string;\n\ttokenSecret: string;\n\tprofile: any;\n}\n\nexport class TwitterAccount extends RESTModel<TwitterAccountI> {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget accessToken(): string { return this.getField(\"accessToken\"); }\n\tset accessToken(value: string) { this.setField(\"accessToken\", value); }\n\n\tget tokenSecret(): string { return this.getField(\"tokenSecret\"); }\n\tset tokenSecret(value: string) { this.setField(\"tokenSecret\", value); }\n\n\tget profile(): any { return this.getField(\"profile\"); }\n\tset profile(value: any) { this.setField(\"profile\", value); }\n\n\tget accountId(): string { return this.getField(\"accountId\"); }\n\tset accountId(value: string) { this.setField(\"accountId\", value); }\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findOneBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn RESTModel.findManyBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface BandI extends Document {\n\tname: string;\n\twebsite: string;\n\temail: string;\n\tcityName: string;\n\tcityPlaceID: string;\n\tdescription: string;\n\tmetadata: string;\n\ticon: string | null;\n\tphotos: string[];\n\towners: string[];\n\tfacebook: string | null;\n\tfacebookPageId: string | null;\n\tfacebookPageName: string | null;\n\tfacebookPageToken: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n}\n\nexport class Band extends RESTModel<BandI> {\n\tpublic static ModelName: string = \"Band\";\n\tget name(): string { return this.getField(\"name\"); }\n\tset name(value: string) { this.setField(\"name\", value); }\n\n\tget website(): string { return this.getField(\"website\"); }\n\tset website(value: string) { this.setField(\"website\", value); }\n\n\tget email(): string { return this.getField(\"email\"); }\n\tset email(value: string) { this.setField(\"email\", value); }\n\n\tget cityName(): string { return this.getField(\"cityName\"); }\n\tset cityName(value: string) { this.setField(\"cityName\", value); }\n\n\tget cityPlaceID(): string { return this.getField(\"cityPlaceID\"); }\n\tset cityPlaceID(value: string) { this.setField(\"cityPlaceID\", value); }\n\n\tget description(): string { return this.getField(\"description\"); }\n\tset description(value: string) { this.setField(\"description\", value); }\n\n\tget metadata(): string { return this.getField(\"metadata\"); }\n\tset metadata(value: string) { this.setField(\"metadata\", value); }\n\n\tget icon(): string | null { return this.getField(\"icon\"); }\n\tset icon(value: string | null) { this.setField(\"icon\", value); }\n\n\tget photos(): string[] { return this.getField(\"photos\"); }\n\tset photos(value: string[]) { this.setField(\"photos\", value); }\n\n\tget owners(): string[] { return this.getField(\"owners\"); }\n\tset owners(value: string[]) { this.setField(\"owners\", value); }\n\n\tget facebook(): string | null { return this.getField(\"facebook\"); }\n\tset facebook(value: string | null) { this.setField(\"facebook\", value); }\n\n\tget facebookPageId(): string | null { return this.getField(\"facebookPageId\"); }\n\tset facebookPageId(value: string | null) { this.setField(\"facebookPageId\", value); }\n\n\tget facebookPageName(): string | null { return this.getField(\"facebookPageName\"); }\n\tset facebookPageName(value: string | null) { this.setField(\"facebookPageName\", value); }\n\n\tget facebookPageToken(): string | null { return this.getField(\"facebookPageToken\"); }\n\tset facebookPageToken(value: string | null) { this.setField(\"facebookPageToken\", value); }\n\n\tget twitter(): string | null { return this.getField(\"twitter\"); }\n\tset twitter(value: string | null) { this.setField(\"twitter\", value); }\n\n\tget google(): string | null { return this.getField(\"google\"); }\n\tset google(value: string | null) { this.setField(\"google\", value); }\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn RESTModel.findOneBase(Band, criteria, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, criteria, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn RESTModel.findByIdBase(Band, id, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn RESTModel.findByIdBase(Upload, this.icon, true) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn RESTModel.findManyBase(\n\t\t\t\t\tUpload,\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: photos\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\ntype LocationType = \"Point\" | \"LineString\" | \"Polygon\";\n\ninterface LocationI extends Document {\n\ttype: LocationType;\n\tplaceId: string;\n\taddress: string;\n\tpoint: number[];\n\tutcOffset: number;\n}\n\nexport class Location extends RESTModel<LocationI> {\n\tpublic static ModelName: string = \"Location\";\n\n\tget type(): LocationType { return this.getField(\"type\") || \"Point\"; }\n\tset type(value: LocationType) { this.setField(\"type\", value); }\n\n\tget placeId(): string { return this.getField(\"placeId\"); }\n\tset placeId(value: string) { this.setField(\"placeId\", value); }\n\n\tget address(): string { return this.getField(\"address\"); }\n\tset address(value: string) { this.setField(\"address\", value); }\n\n\tget point(): number[] { return this.getField(\"point\"); }\n\tset point(value: number[]) { this.setField(\"point\", value); }\n\n\tget utcOffset(): number { return this.getField(\"utcOffset\"); }\n\tset utcOffset(value: number) { this.setField(\"utcOffset\", value); }\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn RESTModel.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn RESTModel.findManyBase(Location, criteria, false) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { Document, RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface VenueI extends Document {\n\towners: string[];\n\tname: string;\n\tdescription: string;\n\twebsite: string;\n\tphone: string;\n\temail: string;\n\tlocation: string;\n\topenCloseTimes: Array<{\n\t\topen: boolean;\n\t\topeningTime: string;\n\t\tclosingTime: string;\n\t}>;\n\ticon: string | null;\n\tphotos: string[];\n\tfacebook: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n\tmetadata: string;\n\tfacebookPageId: string;\n\tfacebookPageName: string;\n\tfacebookPageToken: string;\n}\n\nexport class Venue extends RESTModel<VenueI> {\n\tpublic static ModelName: string = \"Venue\";\n\n\tget name(): string { return this.getField(\"name\"); }\n\tset name(value: string) { this.setField(\"name\", value); }\n\n\tget description(): string { return this.getField(\"description\"); }\n\tset description(value: string) { this.setField(\"description\", value); }\n\n\tget email(): string  { return this.getField(\"email\"); }\n\tset email(value: string) { this.setField(\"email\", value); }\n\n\tget website(): string { return this.getField(\"website\"); }\n\tset website(value: string) { this.setField(\"website\", value); }\n\n\tget phone(): string { return this.getField(\"phone\"); }\n\tset phone(value: string) { this.setField(\"phone\", value); }\n\n\tget location(): string | null { return this.getField(\"location\"); }\n\tset location(value: string | null) { this.setField(\"location\", value); }\n\n\tget openCloseTimes(): string { return this.getField(\"openCloseTimes\"); }\n\tset openCloseTimes(value: string) { this.setField(\"openCloseTimes\", value); }\n\n\tget icon(): string | null { return this.getField(\"icon\"); }\n\tset icon(value: string | null) { this.setField(\"icon\", value); }\n\n\tget photos(): string[] { return this.getField(\"photos\"); }\n\tset photos(value: string[]) { this.setField(\"photos\", value); }\n\n\tget owners(): string[] { return this.getField(\"owners\"); }\n\tset owners(value: string[]) { this.setField(\"owners\", value); }\n\n\tget facebook(): string | null { return this.getField(\"facebook\"); }\n\tset facebook(value: string | null) { this.setField(\"facebook\", value); }\n\n\tget facebookPageId(): string | null { return this.getField(\"facebookPageId\"); }\n\tset facebookPageId(value: string | null) { this.setField(\"facebookPageId\", value); }\n\n\tget facebookPageName(): string | null { return this.getField(\"facebookPageName\"); }\n\tset facebookPageName(value: string | null) { this.setField(\"facebookPageName\", value); }\n\n\tget facebookPageToken(): string | null { return this.getField(\"facebookPageToken\"); }\n\tset facebookPageToken(value: string | null) { this.setField(\"facebookPageToken\", value); }\n\n\tget twitter(): string | null { return this.getField(\"twitter\"); }\n\tset twitter(value: string | null) { this.setField(\"twitter\", value); }\n\n\tget google(): string | null { return this.getField(\"google\"); }\n\tset google(value: string | null) { this.setField(\"google\", value); }\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn RESTModel.findOneBase(Venue, criteria, true) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, criteria, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, id, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUpload,\n\t\t\t\t{\n\t\t\t\t\t_id: photos\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\", true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\", true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, this.location || \"\", true) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!RESTModel.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\ninterface ConversationDocument extends Document {\n\tevents: ConversationEvent[];\n\tusers: string[];\n}\n\nexport class Conversation extends RESTModel<ConversationDocument> {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tget events(): ConversationEvent[] { return this.getField(\"events\"); }\n\tset events(value: ConversationEvent[]) { this.setField(\"events\", value); }\n\n\tget users(): string[] { return this.getField(\"users\"); }\n\tset users(value: string[]) { this.setField(\"users\", value); }\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tRESTModel.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tRESTModel.CacheSet<Conversation>(conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn RESTModel.findByIdBase(Conversation, id, true) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn RESTModel.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, criteria, false) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\ninterface GooglePlaceI extends Document {\n\tplaceId: string;\n\tdetails: any;\n}\n\nexport class GooglePlace extends RESTModel<GooglePlaceI> {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tget placeId(): string { return this.getField(\"placeId\") || this.getField(\"place_id\"); }\n\tset placeId(value: string) { this.setField(\"placeId\", value); }\n\n\tget details(): string { return this.getField(\"details\"); }\n\tset details(value: string) { this.setField(\"details\", value); }\n\n\tget description(): string { return this.getField(\"description\"); }\n\tset description(value: string) { this.setField(\"description\", value); }\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn RESTModel.findManyBase(GooglePlace, criteria, false) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\ninterface NotificationI extends Document {\n\tactions: NotificationAction[];\n\tlabel: string;\n\tmessage: string;\n\tseenByUser: boolean;\n\tuserId: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends RESTModel<NotificationI> {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget label(): string { return this.getField(\"label\"); }\n\n\tset label(value: string) { this.setField(\"label\", value); }\n\n\tget message(): string { return this.getField(\"message\"); }\n\n\tset message(value: string) { this.setField(\"message\", value); }\n\n\tget actions(): NotificationAction[] { return this.getField(\"actions\"); }\n\n\tset actions(value: NotificationAction[]) { this.setField(\"actions\", value); }\n\n\tget seenByUser(): boolean { return this.getField(\"seenByUser\"); }\n\n\tset seenByUser(value: boolean) { this.setField(\"seenByUser\", value); }\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(\"Notification\", null, true) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn RESTModel.findByIdBase(\"Notification\", id, true) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { Document, RESTModel } from \"./RESTModel\";\n\ninterface PostI extends Document {\n\taccountId: string;\n\tcoordinates: number[];\n\tdone: boolean;\n\terror: any;\n\tnetwork: string;\n\tpageId: string;\n\tpostDate: Date;\n\tpostText: string;\n\tuserId: string;\n}\n\nexport class Post extends RESTModel<PostI> {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget network(): string { return this.getField(\"network\"); }\n\tset network(value: string) { this.setField(\"network\", value); }\n\n\tget accountId(): string { return this.getField(\"accountId\"); }\n\tset accountId(value: string) { this.setField(\"accountId\", value); }\n\n\tget pageId(): string { return this.getField(\"pageId\"); }\n\tset pageId(value: string) { this.setField(\"pageId\", value); }\n\n\tget postText(): string { return this.getField(\"postText\"); }\n\tset postText(value: string) { this.setField(\"postText\", value); }\n\n\tget postDate(): string { return this.getField(\"postDate\"); }\n\tset postDate(value: string) { this.setField(\"postDate\", value); }\n\n\tget coordinates(): number[] { return this.getField(\"coordinates\"); }\n\tset coordinates(value: number[]) { this.setField(\"coordinates\", value); }\n\n\tget error(): string { return this.getField(\"error\"); }\n\tset error(value: string) { this.setField(\"error\", value); }\n\n\tget done(): boolean { return this.getField(\"done\"); }\n\tset done(value: boolean) { this.setField(\"done\", value); }\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn RESTModel.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn RESTModel.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { Document, RESTModel } from \"./RESTModel\";\n\ninterface ErrorReportI extends Document {\n\tworthReporting: boolean;\n\tuserId: string | null;\n\tversion: string;\n\tstack: string;\n\tmessage: string;\n\tname: string;\n\tfileName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport class ErrorReport extends RESTModel<ErrorReportI> {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tget version(): string { return this.getField(\"version\"); }\n\tset version(value: string) { this.setField(\"version\", value); }\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget stack(): string { return this.getField(\"stack\"); }\n\tset stack(value: string) { this.setField(\"stack\", value); }\n\n\tget message(): string { return this.getField(\"message\"); }\n\tset message(value: string) { this.setField(\"message\", value); }\n\n\tget name(): string { return this.getField(\"name\"); }\n\tset name(value: string) { this.setField(\"name\", value); }\n\n\tget fileName(): string { return this.getField(\"fileName\"); }\n\tset fileName(value: string) { this.setField(\"fileName\", value); }\n\n\tget columnNumber(): number { return this.getField(\"columnNumber\"); }\n\tset columnNumber(value: number) { this.setField(\"columnNumber\", value); }\n\n\tget lineNumber(): number { return this.getField(\"lineNumber\"); }\n\tset lineNumber(value: number) { this.setField(\"lineNumber\", value); }\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn RESTModel.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\ninterface PageI extends Document {\n\tadmin: string;\n\tmetadata: string;\n\tdata: string;\n\ttitle: string;\n\tlink: string;\n\tvisits: number;\n\trevisions: number;\n\thide: boolean;\n\tblog: boolean;\n\tdoc: boolean;\n}\n\nexport class Page extends RESTModel<PageI> {\n\tpublic static ModelName: string = \"Page\";\n\n\tget data(): string { return this.getField(\"data\"); }\n\tset data(value: string) { this.setField(\"data\", value); }\n\n\tget metadata(): string { return this.getField(\"metadata\"); }\n\tset metadata(value: string) { this.setField(\"metadata\", value); }\n\n\tget title(): string { return this.getField(\"title\"); }\n\tset title(value: string) { this.setField(\"title\", value); }\n\n\tget link(): string { return this.getField(\"link\"); }\n\tset link(value: string) { this.setField(\"link\", value); }\n\n\tget visits(): number { return this.getField(\"visits\") || 0; }\n\tset visits(value: number) { this.setField(\"visits\", value); }\n\n\tget revisions(): number { return this.getField(\"revisions\") || 0; }\n\tset revisions(value: number) { this.setField(\"revisions\", value); }\n\n\tget hide(): boolean {\n\t\tconst value = this.getField(\"hide\");\n\t\treturn value === null ? true : Boolean(value);\n\t}\n\tset hide(value: boolean) { this.setField(\"hide\", value); }\n\n\tget blog(): boolean {\n\t\tconst value = this.getField(\"blog\");\n\t\treturn Boolean(value);\n\t}\n\tset blog(value: boolean) { this.setField(\"blog\", value); }\n\n\tget doc(): boolean {\n\t\tconst value = this.getField(\"doc\");\n\t\treturn Boolean(value);\n\t}\n\tset doc(value: boolean) { this.setField(\"doc\", value); }\n\n\tget admin(): string { return this.getField(\"admin\"); }\n\tset admin(value: string) { this.setField(\"admin\", value); }\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn RESTModel.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn RESTModel.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn RESTModel.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { API } from \"./API\";\nimport { Document, RESTModel } from \"./RESTModel\";\n\ninterface RequestI extends Document {\n\tto: string;\n\tfrom: string;\n\temailSent: boolean;\n\tstatus: string;\n\toptions: string[];\n\ttype: string;\n\tuserData: any;\n}\n\nexport class Request extends RESTModel<RequestI> {\n\tpublic static ModelName: string = \"Request\";\n\n\tget to(): string { return this.getField(\"to\"); }\n\tset to(value: string) { this.setField(\"to\", value); }\n\n\tget from(): string { return this.getField(\"from\"); }\n\tset from(value: string) { this.setField(\"from\", value); }\n\n\tget status(): string { return this.getField(\"status\"); }\n\tset status(value: string) { this.setField(\"status\", value); }\n\n\tget options(): string[] { return this.getField(\"options\"); }\n\tset options(value: string[]) { this.setField(\"options\", value); }\n\n\tget type(): string { return this.getField(\"type\"); }\n\tset type(value: string) { this.setField(\"type\", value); }\n\n\tget userData(): any { return this.getField(\"userData\"); }\n\tset userData(value: any) { this.setField(\"userData\", value); }\n\n\tget emailSent(): boolean { return this.getField(\"emailSent\"); }\n\tset emailSent(value: boolean) { this.setField(\"emailSent\", value); }\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn RESTModel.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn RESTModel.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { GigGizmoPropTypes } from \"./PropTypes\";\nexport { API } from \"./API\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport {\n\tNotification,\n\tNotificationAction\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { RESTModel } from \"./RESTModel\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}