{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/Model.ts","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","ModelClass","_API__WEBPACK_IMPORTED_MODULE_0__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_1__","[object Object]","props","this","expiration","Date","getTime","self","changes","ModelName","_id","dateCreated","dateModified","document","set","toISOString","id","Cache","has","cache","data","isValidId","delete","ModelMaybe","Error","Model","modelName","getModelName","constructor","pattern","RegExp","test","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","e","CacheSet","isArray","items","forEach","push","map","itemData","item","isValid","toObject","JSON","stringify","isNaN","parse","superError","anyErrors","assign","response","clearChanges","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","console","error","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_Band__WEBPACK_IMPORTED_MODULE_1__","_Conversation__WEBPACK_IMPORTED_MODULE_2__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_3__","_Gig__WEBPACK_IMPORTED_MODULE_4__","_Model__WEBPACK_IMPORTED_MODULE_5__","_Notification__WEBPACK_IMPORTED_MODULE_6__","_Post__WEBPACK_IMPORTED_MODULE_7__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_8__","_Upload__WEBPACK_IMPORTED_MODULE_9__","_Venue__WEBPACK_IMPORTED_MODULE_10__","dataMaybe","super","fullName","firstName","middleName","lastName","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","undefined","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","email","password","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","icon","twitter","facebook","connections","findById","blocked","maybePassword","lowercaseFirstName","lowercaseLastName","includes","confirmPassword","validatePassword","agreement","EmailRegex","Upload","_Model__WEBPACK_IMPORTED_MODULE_0__","_User__WEBPACK_IMPORTED_MODULE_1__","owners","userId","find","description","fileData","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","hash","bytes","FacebookAccount","_Model__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","profile","accountId","Gig","_Location__WEBPACK_IMPORTED_MODULE_2__","_Model__WEBPACK_IMPORTED_MODULE_3__","_Venue__WEBPACK_IMPORTED_MODULE_4__","bandId","venueId","gigData","band","venue","times","filtered","filter","time","dayDate","startTime","stopTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","bands","TwitterAccount","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_0__","_Gig__WEBPACK_IMPORTED_MODULE_1__","_Model__WEBPACK_IMPORTED_MODULE_2__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_3__","_Upload__WEBPACK_IMPORTED_MODULE_4__","_User__WEBPACK_IMPORTED_MODULE_5__","photos","findByBand","cityPlaceID","owner","userIsOwner","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_1__","placeId","address","utcOffset","point","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","findByVenue","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","callbackId","conv","cb","message","events","dateTimePosted","save","maybeType","type","changeCallbacks","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","label","body","timestamp","requestPermission","getField","setField","network","postText","postDate","coordinates","done","link","page","title","admin","to","gig","gigId","option","request","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","cityName","facebookPageId","facebookPageName","facebookPageToken","google","metadata","website","users","columnNumber","fileName","lineNumber","stack","version","userAccessToken","userRefreshToken","bandOwnerAccepted","toBeAnnounced","venueOwnerAccepted","actions","seenByUser","blog","doc","hide","revisions","visits","accessToken","tokenSecret","active","attempts","bandManager","betaFeatureUser","birthday","country","emailVerified","lastLogin","lastLoginIP","payment","paypal","sendAnonymousReports","sendEmails","sendErrorReports","sendPromotions","useCookies","venueManager","metaData","openCloseTimes","closingTime","openingTime","phone","_PropTypes__WEBPACK_IMPORTED_MODULE_0__","_API__WEBPACK_IMPORTED_MODULE_1__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Notification__WEBPACK_IMPORTED_MODULE_9__","_Page__WEBPACK_IMPORTED_MODULE_10__","_Post__WEBPACK_IMPORTED_MODULE_11__","_Request__WEBPACK_IMPORTED_MODULE_12__","_Model__WEBPACK_IMPORTED_MODULE_13__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_14__","_Upload__WEBPACK_IMPORTED_MODULE_15__","_User__WEBPACK_IMPORTED_MODULE_16__","_Venue__WEBPACK_IMPORTED_MODULE_17__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_18__","GigGizmoAPI","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport interface DocumentI {\n\tModelName: string;\n\t_id: string;\n\treadonly dateCreated: string;\n\tdateModified: string;\n\t[propName: string]: any;\n}\n\nexport class ModelClass<D extends DocumentI> {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, ModelClass<any>> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<Array<ModelClass<any>>>);\n\tpublic static findOne: ((criteria: any) => Promise<ModelClass<any> | null>);\n\tpublic static findById: ((id: string) => Promise<ModelClass<any> | null>);\n\n\t[propName: string]: any;\n\tpublic get id(): string | null {\n\t\treturn this.changes._id || this._id;\n\t}\n\tpublic set id(value: string | null) {\n\t\tif (this._id !== value && value) {\n\t\t\tthis.changes._id = value;\n\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t}\n\t}\n\tpublic changes: D;\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\n\tpublic static CacheGet<ModelT extends ModelClass<any>>(id: string): ModelT | null {\n\t\tif (typeof id === \"string\" && ModelClass.Cache.has(id)) {\n\t\t\tconst cache: ModelT | undefined = ModelClass.Cache.get(id) as ModelT;\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet<ModelT extends ModelClass<any>>(data: ModelClass<any>): ModelT | null {\n\t\tif (data._id && ModelClass.isValidId(data._id)) {\n\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\treturn data as ModelT;\n\t\t}\n\t\treturn data as ModelT;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tModelClass.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = ModelClass.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static async findByIdBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, id: string):\n\t\t\tPromise<ModelT|null> {\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tModelClass.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache as ModelT;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && ModelClass.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tModelClass.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase<\n\t\tModelT extends ModelClass<any>\n\t\t>(ModelMaybe: any, criteria: any = {}):\n\t\t\tPromise<ModelT[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: Array<ModelClass<any>> = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = ModelClass.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items as ModelT[]; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await ModelClass.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tModelClass.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(props?: DocumentI) {\n\t\tconst self = this;\n\t\tthis.changes = new Object() as D;\n\t\tif (props) {\n\t\t\tthis.ModelName = props.ModelName;\n\t\t\tthis._id = props._id;\n\t\t\tthis.dateCreated = props.dateCreated;\n\t\t\tthis.dateModified = props.dateModified;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (key in props) {\n\t\t\t\t\tObject.defineProperty(document, key, {\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn self.changes[key] || self[key as string];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: (value: any) => {\n\t\t\t\t\t\t\tif (this[key as string] !== value) {\n\t\t\t\t\t\t\t\tthis.changes[key] = value;\n\t\t\t\t\t\t\t\tthis.changes.dateModified = (new Date()).toISOString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.changes = new Object() as D;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.isValid() ? { ...this, ...this.changes } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = `${object._id}`;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tif (this.id &&\n\t\t\t!ModelClass.isValidId(this.id)) {\n\t\t\treturn new Error(`Invalid id: ${this.id}`);\n\t\t}\n\n\t\tif (this.dateModified && isNaN(Date.parse(this.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.dateModified}`);\n\t\t}\n\n\t\tif (this.dateCreated && isNaN(Date.parse(this.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.dateCreated}`);\n\t\t}\n\n\t\tif (this.changes.id &&\n\t\t\t!ModelClass.isValidId(this.changes.id)) {\n\t\t\treturn new Error(`Invalid id: ${this.changes.id}`);\n\t\t}\n\n\t\tif (this.changes.dateModified && isNaN(Date.parse(this.changes.dateModified))) {\n\t\t\treturn new Error(`Invalid dateModified: ${this.changes.dateModified}`);\n\t\t}\n\n\t\tif (this.changes.dateCreated && isNaN(Date.parse(this.changes.dateCreated))) {\n\t\t\treturn new Error(`Invalid dateCreated: ${this.changes.dateCreated}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\ttry {\n\t\t\tconst superError = this.anyErrors();\n\t\t\tif (superError) { throw superError; }\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this[key]) { delete data[key]; }\n\t\t});\n\t\tdata.id = `${this.changes._id || this._id || null}`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ModelClass.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tObject.assign(this, response);\n\t\t\tthis.clearChanges();\n\t\t\tModelClass.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (ModelClass.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tModelClass.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.SocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\ntype OnlineStatusTypes = \"default\" | \"offline\" | \"busy\";\n\ninterface UserI extends DocumentI {\n\ticon: string | null;\n\tfirstName: string;\n\tmiddleName: string;\n\tlastName: string;\n\tbirthday: Date;\n\tcountry: string;\n\tbandManager: boolean;\n\tvenueManager: boolean;\n\tpassword?: string;\n\tconfirmPassword?: string;\n\tbetaFeatureUser: boolean;\n\tsendAnonymousReports: boolean;\n\tsendErrorReports: boolean;\n\tsendEmails: boolean;\n\tsendPromotions: boolean;\n\tuseCookies: boolean;\n\tdescription: string;\n\tactive: boolean;\n\tpaypal: string | null;\n\tfacebook: string | null;\n\ttwitter: string | null;\n\temailVerified: boolean;\n\tcanFind: boolean;\n\tpayment: string | null;\n\tverificationSecret: string | null;\n\tadmin: boolean;\n\tattempts: number;\n\tlastLogin: Date;\n\tlastLoginIP: string;\n\toptions: any;\n\tconnections: string[];\n\tblocked: string[];\n\temail: string;\n\thash: string;\n\tsalt: string;\n\tonlineStatus: OnlineStatusTypes;\n}\n\nexport class User extends ModelClass<UserI> {\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(Notification, null) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase(Upload, null) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<Array<Band | Location | Page | Upload | User | Venue>> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: Array<Band | Location | Page | Upload | User | Venue>) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve([]);\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"null\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (skip !== 0 && Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn ModelClass.findManyBase(User, criteria) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn ModelClass.findOneBase(User, criteria) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, id) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.isValid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tconstructor(dataMaybe?: any) {\n\t\tsuper(dataMaybe);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getConnections(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.connections.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic getBlocked(): Promise<Array<User | null>> {\n\t\treturn Promise.all(\n\t\t\tthis.blocked.map((id: string) => User.findById(id)) as\n\t\t\tArray<Promise<User | null>>);\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (this.id) {\n\t\t\t// Type checks\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.firstName)) {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.lastName)) {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.password)) {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.confirmPassword)) {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\tif (![\"string\", \"undefined\"].includes(typeof this.changes.email)) {\n\t\t\t\treturn new Error(`Invalid email: ${this.changes.email}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Type checks\n\t\t\tif (typeof this.changes.firstName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid firstName: ${this.changes.firstName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.lastName !== \"string\") {\n\t\t\t\treturn new Error(`Invalid lastName: ${this.changes.lastName}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.password !== \"string\") {\n\t\t\t\treturn new Error(`Invalid password: ${this.changes.password}`);\n\t\t\t}\n\t\t\tif (typeof this.changes.confirmPassword !== \"string\") {\n\t\t\t\treturn new Error(`Invalid confirmPassword: ${this.changes.confirmPassword}`);\n\t\t\t}\n\t\t\t// Value checks\n\t\t\tif (this.changes.firstName === \"\") {\n\t\t\t\treturn new Error(\"Blank firstName\");\n\t\t\t}\n\t\t\tif (this.changes.lastName === \"\") {\n\t\t\t\treturn new Error(\"Blank lastName\");\n\t\t\t}\n\t\t\tif (this.changes.password) {\n\t\t\t\tconst error = this.validatePassword(this.changes.password);\n\t\t\t\tif (error) { return error; }\n\t\t\t}\n\t\t\tif (this.changes.password !== this.changes.confirmPassword) {\n\t\t\t\treturn new Error(\"Passwords do not match\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: More validation checks?\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface UploadI extends DocumentI {\n\tfileData: string;\n\tsrcMIMEType: string;\n\tcroppedFileData: string;\n\towners: string[];\n\tdescription: string;\n\thash: string;\n\tbytes: number;\n\twidth: number;\n\theight: number;\n\toffsetWidth: number;\n\toffsetHeight: number;\n\toffsetLeft: number;\n\toffsetTop: number;\n}\n\nexport class Upload extends ModelClass<UploadI> {\n\tpublic static ModelName: string = \"Upload\";\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase<Upload>(Upload, id);\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn ModelClass.findOneBase<Upload>(Upload, criteria);\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn ModelClass.findManyBase<Upload>(Upload, null);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase<User>(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic anyErrors(): Error | null {\n\t\tconst superError = super.anyErrors();\n\t\tif (superError) { return superError; }\n\n\t\tif (!this.description) { return new Error(`Invalid description: ${this.description}`); }\n\t\tif (!this.fileData) { return new Error(`Invalid fileData: ${this.fileData}`); }\n\t\tif (!this.width) { return new Error(`Invalid width: ${this.width}`); }\n\t\tif (!this.height) { return new Error(`Invalid height: ${this.height}`); }\n\t\tif (!this.offsetWidth) { return new Error(`Invalid offsetWidth: ${this.offsetWidth}`); }\n\t\tif (!this.offsetHeight) { return new Error(`Invalid offsetHeight: ${this.offsetHeight}`); }\n\t\tif (typeof this.offsetLeft !== \"number\" ||\n\t\t\tthis.offsetLeft < 0) {\n\t\t\t\treturn new Error(`Invalid offsetLeft: ${this.offsetLeft}`);\n\t\t\t}\n\t\tif (typeof this.offsetTop !== \"number\" ||\n\t\t\tthis.offsetTop < 0) {\n\t\t\treturn new Error(`Invalid offsetTop: ${this.offsetTop}`);\n\t\t}\n\n\t\tif (!this.document.hash) { return new Error(`Invalid hash: ${this.document.hash}`); }\n\t\tif (!this.document.bytes) { return new Error(`Invalid bytes: ${this.document.bytes}`); }\n\t\tif (!Array.isArray(this.document.owners) ||\n\t\t\tthis.document.owners.length === 0) {\n\t\t\treturn new Error(`Invalid owners: ${this.document.owners}`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface FacebookAccountI extends DocumentI {\n\taccountId: string;\n\tpageToken: string;\n\tprofile: any;\n\tuserAccessToken: string;\n\tuserRefreshToken: string;\n\tuserId: string;\n}\n\nexport class FacebookAccount extends ModelClass<FacebookAccountI> {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findOneBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn ModelClass.findManyBase(FacebookAccount, criteria) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { Venue } from \"./Venue\";\n\ninterface GigI extends DocumentI {\n\tstartTime: Date;\n\tstopTime: Date;\n\tlocation: string;\n\tvenue: string;\n\tbands: string[];\n\ttoBeAnnounced: boolean;\n\tbandOwnersAccepted: string[];\n\tvenueOwnerAccepted: string;\n\towners: string[];\n}\n\nexport class Gig extends ModelClass<GigI> {\n\tpublic static ModelName: string = \"Gig\";\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn ModelClass.findByIdBase(Gig, id) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tModelClass.CacheSet<Gig>(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, null) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn ModelClass.findManyBase(Gig, criteria) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, { _id: this.bands }) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, this.venue) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn ModelClass.findByIdBase(Location, this.location) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { User } from \"./User\";\n\ninterface TwitterAccountI extends DocumentI {\n\tuserId: string;\n\taccountId: string;\n\taccessToken: string;\n\ttokenSecret: string;\n\tprofile: any;\n}\n\nexport class TwitterAccount extends ModelClass<TwitterAccountI> {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findOneBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn ModelClass.findManyBase(TwitterAccount, criteria) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn ModelClass.findByIdBase(User, this.userId) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface BandI extends DocumentI {\n\tname: string;\n\twebsite: string;\n\temail: string;\n\tcityName: string;\n\tcityPlaceID: string;\n\tdescription: string;\n\tmetadata: string;\n\ticon: string | null;\n\tphotos: string[];\n\towners: string[];\n\tfacebook: string | null;\n\tfacebookPageId: string | null;\n\tfacebookPageName: string | null;\n\tfacebookPageToken: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n}\n\nexport class Band extends ModelClass<BandI> {\n\tpublic static ModelName: string = \"Band\";\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn ModelClass.findOneBase(Band, criteria) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, criteria) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn ModelClass.findByIdBase(Band, id) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn ModelClass.findManyBase(Band, null) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn ModelClass.findByIdBase(Upload, this.icon) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn ModelClass.findManyBase(\n\t\t\t\t\tUpload, { _id: photos }\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ntype LocationType = \"Point\" | \"LineString\" | \"Polygon\";\n\ninterface LocationI extends DocumentI {\n\ttype: LocationType;\n\tplaceId: string;\n\taddress: string;\n\tpoint: number[];\n\tutcOffset: number;\n}\n\nexport class Location extends ModelClass<LocationI> {\n\tpublic static ModelName: string = \"Location\";\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn ModelClass.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn ModelClass.findManyBase(Location, criteria) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { DocumentI, ModelClass } from \"./Model\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\ninterface VenueI extends DocumentI {\n\towners: string[];\n\tname: string;\n\tdescription: string;\n\twebsite: string;\n\tphone: string;\n\temail: string;\n\tlocation: string;\n\topenCloseTimes: Array<{\n\t\topen: boolean;\n\t\topeningTime: string;\n\t\tclosingTime: string;\n\t}>;\n\ticon: string | null;\n\tphotos: string[];\n\tfacebook: string | null;\n\ttwitter: string | null;\n\tgoogle: string | null;\n\tmetadata: string;\n\tfacebookPageId: string;\n\tfacebookPageName: string;\n\tfacebookPageToken: string;\n}\n\nexport class Venue extends ModelClass<VenueI> {\n\tpublic static ModelName: string = \"Venue\";\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn ModelClass.findOneBase(Venue, criteria) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, criteria) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn ModelClass.findByIdBase(Venue, id) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn ModelClass.findManyBase(Venue, null) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn ModelClass.findByIdBase(Upload, this.icon || \"\") as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUpload, { _id: photos }\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn ModelClass.findManyBase(\n\t\t\t\tUser, { _id: owners }\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn ModelClass.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn ModelClass.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn ModelClass.findByIdBase(Location, this.location || \"\") as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!ModelClass.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\ninterface ConversationDocument extends DocumentI {\n\tevents: ConversationEvent[];\n\tusers: string[];\n}\n\nexport class Conversation extends ModelClass<ConversationDocument> {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tModelClass.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tModelClass.CacheSet<Conversation>(conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn ModelClass.findByIdBase(Conversation, id) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn ModelClass.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, criteria) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn ModelClass.findManyBase(Conversation, null) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface GooglePlaceI extends DocumentI {\n\tplaceId: string;\n\tdetails: any;\n}\n\nexport class GooglePlace extends ModelClass<GooglePlaceI> {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn ModelClass.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn ModelClass.findManyBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\ninterface NotificationI extends DocumentI {\n\tactions: NotificationAction[];\n\tlabel: string;\n\tmessage: string;\n\tseenByUser: boolean;\n\tuserId: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends ModelClass<NotificationI> {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn ModelClass.findManyBase(\"Notification\", null) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn ModelClass.findByIdBase(\"Notification\", id) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PostI extends DocumentI {\n\taccountId: string;\n\tcoordinates: number[];\n\tdone: boolean;\n\terror: any;\n\tnetwork: string;\n\tpageId: string;\n\tpostDate: Date;\n\tpostText: string;\n\tuserId: string;\n}\n\nexport class Post extends ModelClass<PostI> {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string { return this.getField(\"userId\"); }\n\tset userId(value: string) { this.setField(\"userId\", value); }\n\n\tget network(): string { return this.getField(\"network\"); }\n\tset network(value: string) { this.setField(\"network\", value); }\n\n\tget accountId(): string { return this.getField(\"accountId\"); }\n\tset accountId(value: string) { this.setField(\"accountId\", value); }\n\n\tget pageId(): string { return this.getField(\"pageId\"); }\n\tset pageId(value: string) { this.setField(\"pageId\", value); }\n\n\tget postText(): string { return this.getField(\"postText\"); }\n\tset postText(value: string) { this.setField(\"postText\", value); }\n\n\tget postDate(): string { return this.getField(\"postDate\"); }\n\tset postDate(value: string) { this.setField(\"postDate\", value); }\n\n\tget coordinates(): number[] { return this.getField(\"coordinates\"); }\n\tset coordinates(value: number[]) { this.setField(\"coordinates\", value); }\n\n\tget error(): string { return this.getField(\"error\"); }\n\tset error(value: string) { this.setField(\"error\", value); }\n\n\tget done(): boolean { return this.getField(\"done\"); }\n\tset done(value: boolean) { this.setField(\"done\", value); }\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn ModelClass.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn ModelClass.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn ModelClass.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface ErrorReportI extends DocumentI {\n\tworthReporting: boolean;\n\tuserId: string | null;\n\tversion: string;\n\tstack: string;\n\tmessage: string;\n\tname: string;\n\tfileName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport class ErrorReport extends ModelClass<ErrorReportI> {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn ModelClass.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn ModelClass.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface PageI extends DocumentI {\n\tadmin: string;\n\tmetadata: string;\n\tdata: string;\n\ttitle: string;\n\tlink: string;\n\tvisits: number;\n\trevisions: number;\n\thide: boolean;\n\tblog: boolean;\n\tdoc: boolean;\n}\n\nexport class Page extends ModelClass<PageI> {\n\tpublic static ModelName: string = \"Page\";\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn ModelClass.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn ModelClass.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn ModelClass.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { API } from \"./API\";\nimport { DocumentI, ModelClass } from \"./Model\";\n\ninterface RequestI extends DocumentI {\n\tto: string;\n\tfrom: string;\n\temailSent: boolean;\n\tstatus: string;\n\toptions: string[];\n\ttype: string;\n\tuserData: any;\n}\n\nexport class Request extends ModelClass<RequestI> {\n\tpublic static ModelName: string = \"Request\";\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn ModelClass.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn ModelClass.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { GigGizmoPropTypes } from \"./PropTypes\";\nexport { API } from \"./API\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport {\n\tNotification,\n\tNotificationAction\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { DocumentI, ModelClass } from \"./Model\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}