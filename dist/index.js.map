{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./src/RESTModel.ts","webpack:///./src/API.ts","webpack:///./src/User.ts","webpack:///./src/Upload.ts","webpack:///./src/FacebookAccount.ts","webpack:///./src/Gig.ts","webpack:///./src/TwitterAccount.ts","webpack:///./src/Band.ts","webpack:///./src/Location.ts","webpack:///./src/Venue.ts","webpack:///./src/ModelNameToModel.ts","webpack:///./src/Conversation.ts","webpack:///./src/GooglePlace.ts","webpack:///./src/Notification.ts","webpack:///./src/Post.ts","webpack:///./src/ErrorReport.ts","webpack:///./src/Page.ts","webpack:///./src/Request.ts","webpack:///./node_modules/cookie/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/PropTypes/index.ts","webpack:///./src/PropTypes/Band.ts","webpack:///./src/PropTypes/Conversation.ts","webpack:///./src/PropTypes/ErrorReport.ts","webpack:///./src/PropTypes/FacebookAccount.ts","webpack:///./src/PropTypes/Gig.ts","webpack:///./src/PropTypes/Location.ts","webpack:///./src/PropTypes/Notification.ts","webpack:///./src/PropTypes/Page.ts","webpack:///./src/PropTypes/Post.ts","webpack:///./src/PropTypes/TwitterAccount.ts","webpack:///./src/PropTypes/Upload.ts","webpack:///./src/PropTypes/User.ts","webpack:///./src/PropTypes/Venue.ts","webpack:///external \"axios\"","webpack:///external \"socket.io-client\"","webpack:///./src/index.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","RESTModel","_API__WEBPACK_IMPORTED_MODULE_0__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_1__","[object Object]","dataMaybe","this","expiration","Date","getTime","changes","document","data","JSON","parse","ModelName","assign","e","console","log","error","dateCreated","dateModified","getField","toJSON","id","setField","_id","Cache","has","cache","isValidId","set","delete","ModelMaybe","Error","Model","modelName","getModelName","pattern","RegExp","test","constructor","hasWebSocket","CacheGet","deduceModelAndName","useSocketIO","ShouldUseSocketIO","Promise","resolve","reject","getSocket","then","socket","emit","criteria","Array","from","keys","length","route","CacheSet","isArray","items","forEach","push","map","itemData","item","undefined","valid","toString","toObject","stringify","response","res","CacheRemove","Map","API","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","cookie__WEBPACK_IMPORTED_MODULE_1__","socket_io_client__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_2___default","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_3__","expires","_expires","_token","LocalStorageSupported","localStorage","getItem","removeItem","setItem","toISOString","token","dateNow","cookie","path","sameSite","rootURL","url","secure","hostname","port","securePort","webSocketRootURL","every","arr","mapData","promises","async","deserializeData","all","entries","objectValue","method","fetchRequest","headers","x-gig-gizmo-token","toLowerCase","params","responseType","xsrfCookieName","xsrfHeaderName","Axios","statusText","status","killSocket","webSocket","open","onReady","SocketIO","on","readyState","addEventListener","a","SessionStorageSupported","Storage","window","dev","defaults","withCredentials","User","_Band__WEBPACK_IMPORTED_MODULE_1__","_Conversation__WEBPACK_IMPORTED_MODULE_2__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_3__","_Gig__WEBPACK_IMPORTED_MODULE_4__","_Notification__WEBPACK_IMPORTED_MODULE_5__","_Post__WEBPACK_IMPORTED_MODULE_6__","_RESTModel__WEBPACK_IMPORTED_MODULE_7__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_8__","_Upload__WEBPACK_IMPORTED_MODULE_9__","_Venue__WEBPACK_IMPORTED_MODULE_10__","password","confirmPassword","icon","active","admin","firstName","middleName","lastName","birthday","country","bandManager","venueManager","betaFeatureUser","sendAnonymousReports","sendErrorReports","sendEmails","sendPromotions","useCookies","fullName","email","salt","hash","facebook","twitter","description","emailVerified","attempts","lastLoginIP","lastLogin","canContact","canFind","options","secret","findManyBase","term","q","skip","limit","Number","POSITIVE_INFINITY","bands","locations","pages","totalFound","uploads","users","venues","model","isFinite","Return","results","query","findOneBase","callback","now","Callbacks","Current","sessionStorage","force","saved","setUser","findByIdBase","location","href","user","userData","join","search","symbolTest","numberTest","lowercasePassword","indexOf","rej","maybePassword","lowercaseFirstName","lowercaseLastName","super","isValid","save","remove","agreement","EmailRegex","Upload","_RESTModel__WEBPACK_IMPORTED_MODULE_0__","_User__WEBPACK_IMPORTED_MODULE_1__","fileName","fileData","title","owners","dataUrl","upload","userId","find","FacebookAccount","_RESTModel__WEBPACK_IMPORTED_MODULE_1__","_User__WEBPACK_IMPORTED_MODULE_2__","accountId","userAccessToken","userRefreshToken","profile","found","account","pageName","format","text","pageId","postDateTime","fb_page_id","post_format","post_text","publish_time","Gig","_Location__WEBPACK_IMPORTED_MODULE_2__","_RESTModel__WEBPACK_IMPORTED_MODULE_3__","_Venue__WEBPACK_IMPORTED_MODULE_4__","startTime","stopTime","venue","toBeAnnounced","bandOwnersAccepted","venueOwnerAccepted","bandId","venueId","gigData","band","times","filtered","filter","time","dayDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDay","gigs","distance","lat","lng","dis","TwitterAccount","accessToken","tokenSecret","Band","_FacebookAccount__WEBPACK_IMPORTED_MODULE_0__","_Gig__WEBPACK_IMPORTED_MODULE_1__","_RESTModel__WEBPACK_IMPORTED_MODULE_2__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_3__","_Upload__WEBPACK_IMPORTED_MODULE_4__","_User__WEBPACK_IMPORTED_MODULE_5__","website","cityName","cityPlaceID","metadata","photos","facebookPageId","facebookPageName","facebookPageToken","google","findByBand","self","owner","userIsOwner","Location","_GooglePlace__WEBPACK_IMPORTED_MODULE_1__","type","placeId","address","point","utcOffset","getPlaceDetails","Venue","_TwitterAccount__WEBPACK_IMPORTED_MODULE_4__","_Upload__WEBPACK_IMPORTED_MODULE_5__","_User__WEBPACK_IMPORTED_MODULE_6__","phone","openCloseTimes","findByVenue","ModelNameToModel","Conversation","ErrorReport","GooglePlace","Notification","Page","Post","Request","events","callbackId","conv","cb","message","dateTimePosted","details","maybeType","changeCallbacks","label","actions","seenByUser","note","notes","returnNew","onNewNotification","PushSupported","webNotification","setup","permission","body","timestamp","requestPermission","network","postText","postDate","coordinates","done","version","stack","columnNumber","lineNumber","link","visits","revisions","hide","Boolean","blog","doc","page","to","emailSent","gig","gigId","option","request","str","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","pair","eq_idx","substr","trim","val","slice","tryDecode","serialize","enc","encode","fieldContentRegExp","maxAge","isNaN","Math","floor","domain","toUTCString","httpOnly","decodeURIComponent","encodeURIComponent","originalModule","webpackPolyfill","children","GigGizmoPropTypes","prop_types__WEBPACK_IMPORTED_MODULE_0__","isRequired","bandOwnerAccepted","payment","paypal","metaData","closingTime","openingTime","_PropTypes__WEBPACK_IMPORTED_MODULE_0__","_API__WEBPACK_IMPORTED_MODULE_1__","_Band__WEBPACK_IMPORTED_MODULE_2__","_Conversation__WEBPACK_IMPORTED_MODULE_3__","_ErrorReport__WEBPACK_IMPORTED_MODULE_4__","_FacebookAccount__WEBPACK_IMPORTED_MODULE_5__","_Gig__WEBPACK_IMPORTED_MODULE_6__","_GooglePlace__WEBPACK_IMPORTED_MODULE_7__","_Location__WEBPACK_IMPORTED_MODULE_8__","_Notification__WEBPACK_IMPORTED_MODULE_9__","_Page__WEBPACK_IMPORTED_MODULE_10__","_Post__WEBPACK_IMPORTED_MODULE_11__","_Request__WEBPACK_IMPORTED_MODULE_12__","_RESTModel__WEBPACK_IMPORTED_MODULE_13__","_TwitterAccount__WEBPACK_IMPORTED_MODULE_14__","_Upload__WEBPACK_IMPORTED_MODULE_15__","_User__WEBPACK_IMPORTED_MODULE_16__","_Venue__WEBPACK_IMPORTED_MODULE_17__","_ModelNameToModel__WEBPACK_IMPORTED_MODULE_18__","GigGizmoAPI","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","propFullName","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { API } from \"./API\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class RESTModel {\n\tpublic static ModelName: string = \"RESTModel\";\n\tpublic static Cache: Map<string, RESTModel> = new Map();\n\tpublic static findMany: ((criteria: any) => Promise<RESTModel[]>);\n\tpublic static findOne: ((criteria: any) => Promise<RESTModel | null>);\n\tpublic static findById: ((id: string) => Promise<RESTModel | null>);\n\n\tprivate expiration: number = (\n\t\t(new Date())\n\t\t\t.getTime() +\n\t\t1 * // Hours\n\t\t60 * // Minutess\n\t\t60 * // Seconds\n\t\t1000 // Milliseconds\n\t);\n\tprivate changes: any = new Object();\n\tprivate document: any = new Object();\n\n\tget dateCreated(): Date {\n\t\tconst dateCreated = this.document.dateCreated || null;\n\t\treturn dateCreated ? new Date(dateCreated) : dateCreated;\n\t}\n\n\tget dateModified(): Date {\n\t\tconst dateModified = this.getField(\"dateModified\") || null;\n\t\treturn dateModified ? new Date(dateModified) : dateModified;\n\t}\n\n\tset dateModified(value: Date) {\n\t\tthis.changes.dateModified = (value) ? value.toJSON() : null;\n\t}\n\n\tget id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tget _id(): string {\n\t\treturn this.getField(\"_id\");\n\t}\n\n\tset _id(value: string) {\n\t\tthis.setField(\"_id\", value);\n\t}\n\n\tpublic static CacheGet(id: string): RESTModel | null {\n\t\tif (typeof id === \"string\" && RESTModel.Cache.has(id)) {\n\t\t\tconst cache: RESTModel | undefined = RESTModel.Cache.get(id);\n\t\t\tif (cache && new Date(cache.expiration) < new Date()) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static CacheSet(data: RESTModel): RESTModel | null {\n\t\tif (RESTModel.isValidId(data._id)) {\n\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\treturn data;\n\t\t}\n\t\treturn data;\n\t}\n\n\tpublic static CacheRemove(id: string): void {\n\t\tRESTModel.Cache.delete(id);\n\t}\n\n\tpublic static async deduceModelAndName(ModelMaybe: any): Promise<{\n\t\t\tModel: any;\n\t\t\tmodelName: string;\n\t\t}> {\n\t\tif (ModelMaybe === null) {\n\t\t\tthrow new Error(\"Model Name or Model Missing\");\n\t\t}\n\n\t\tlet Model: any = null;\n\t\tlet modelName: string | null = null;\n\t\tif (typeof ModelMaybe === \"string\") {\n\t\t\tModel = await ModelNameToModel(ModelMaybe);\n\t\t\tmodelName = ModelMaybe;\n\t\t} else if (typeof ModelMaybe === \"function\") {\n\t\t\tModel = ModelMaybe;\n\t\t\tmodelName = RESTModel.getModelName(ModelMaybe);\n\t\t} else {\n\t\t\tthrow new Error(`Invalid first agument, expected string or function, got ${ModelMaybe}`);\n\t\t}\n\n\t\tif (typeof modelName !== \"string\") {\n\t\t\tthrow new Error(`Missing model name from ${Model}`);\n\t\t}\n\n\t\tif (typeof Model !== \"function\") {\n\t\t\tthrow new Error(`Model name (${modelName}) did not map to constructor`);\n\t\t}\n\n\t\treturn {\n\t\t\tModel,\n\t\t\tmodelName\n\t\t};\n\t}\n\n\tpublic static isValidId(id: any): boolean {\n\t\tconst pattern = RegExp(\"^([0-9a-fA-F]{24}|[0-9a-fA-F]{12})$\", \"g\");\n\t\treturn (\n\t\t\ttypeof id === \"string\" && pattern.test(id)\n\t\t);\n\t}\n\n\tpublic static getModelName(Model: any): string {\n\t\tif (Model && Model.ModelName) { return Model.ModelName; }\n\t\tif (Model.constructor && ((Model.constructor as any).ModelName)) {\n\t\t\treturn (Model.constructor as any).ModelName;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic static async findByIdBase(\n\t\tModelMaybe: any,\n\t\tid: string,\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel|null> {\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t} else {\n\t\t\t\tlet data: any = null;\n\t\t\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Retreive`, id, resolve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = await API.call(\"GET\", `/API/${modelName}/${id}`, null);\n\t\t\t\t}\n\t\t\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\t\t\tdata = new Model(data);\n\t\t\t\t\tRESTModel.Cache.set(data._id, data);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findOneBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel|null> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && typeof criteria._id === \"string\") {\n\t\t\tconst id = criteria._id;\n\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\tif (cache) {\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindOne`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tconst socket: any = await API.getSocket();\n\t\t\tif (socket) {\n\t\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (data && RESTModel.isValidId(data._id)) {\n\t\t\tdata = new Model(data);\n\t\t\tRESTModel.CacheSet(data);\n\t\t\treturn data;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static async findManyBase(\n\t\tModelMaybe: any,\n\t\tcriteria: any = {},\n\t\thasWebSocket?: boolean\n\t): Promise<RESTModel[]> {\n\t\tif (criteria === null) { criteria = {}; }\n\t\tif (Array.from(Object.keys(criteria)).length === 1 && Array.isArray((criteria._id || criteria.id))) {\n\t\t\tconst items: RESTModel[] = [];\n\t\t\t(criteria._id || criteria.id).forEach((id: string) => {\n\t\t\t\tconst cache = RESTModel.CacheGet(id);\n\t\t\t\tif (cache) {\n\t\t\t\t\titems.push(cache);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (items.length === (criteria._id || criteria.id)) { return items; }\n\t\t}\n\t\tlet data: any = null;\n\t\tconst { Model, modelName } = await RESTModel.deduceModelAndName(ModelMaybe);\n\t\tconst route = `/API/${modelName}/FindMany`;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tdata = await new Promise((resolve, reject) =>\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(route, criteria, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject)\n\t\t\t);\n\t\t}\n\t\tcriteria = criteria || {};\n\t\tif (!data) { data = await API.call(\"GET\", route, criteria); }\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Model(itemData);\n\t\t\t\tRESTModel.CacheSet(item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic constructor(dataMaybe?: any) {\n\t\tthis.document = new Object();\n\t\tthis.changes = new Object();\n\t\tif (typeof dataMaybe === \"string\") {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(dataMaybe);\n\t\t\t\tif (data !== null && typeof data.ModelName !== \"undefined\") {\n\t\t\t\t\tdelete data.ModelName;\n\t\t\t\t}\n\t\t\t\tObject.assign(this.document, data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(dataMaybe);\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else if (dataMaybe) {\n\t\t\tif (typeof dataMaybe.document === \"object\" && dataMaybe.document) {\n\t\t\t\tObject.assign(this.document, dataMaybe.document);\n\t\t\t}\n\t\t\tif (typeof dataMaybe.changes === \"object\" && dataMaybe.changes) {\n\t\t\t\tObject.assign(this.changes, dataMaybe.changes);\n\t\t\t} else {\n\t\t\t\tObject.assign(this.document, dataMaybe);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setField(name: string, value: any): void {\n\t\tif (this) {\n\t\t\tconst currentValue = this.getField(name) || undefined;\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.changes[name] = value;\n\t\t\t\tthis.dateModified = new Date();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getField(name: string): any {\n\t\tif (this) {\n\t\t\tlet data = this.changes[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t\tdata = this.document[name];\n\t\t\tif (typeof data !== \"undefined\") { return data; }\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic toObject(): any {\n\t\tconst object = this.valid() ? { ...this.changes, ...this.document } : null;\n\t\tif (typeof object === \"object\" && object) {\n\t\t\tif (typeof object.id !== \"undefined\") { delete object.id; }\n\t\t\tif (typeof object._id !== \"undefined\") {\n\t\t\t\tobject._id = (object._id.toString() ? object._id : null);\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic toString(): string {\n\t\tconst object = this.toObject();\n\t\treturn JSON.stringify(object);\n\t}\n\n\tpublic valid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\tthrow new Error(`Invalid id: ${this.id}`);\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\tthrow new Error(`Invalid dateModified: ${this.dateModified}`);\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\tthrow new Error(`Invalid dateCreated: ${this.dateCreated}`);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!RESTModel.isValidId(this.id)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateModified) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.dateCreated) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic assign(data: object = {}): this {\n\t\tObject.assign(this.changes, data);\n\t\treturn this;\n\t}\n\n\tpublic async save(hasWebSocket?: boolean): Promise<this> {\n\t\tconst modelName = (this.constructor as any).ModelName;\n\t\tlet response: any = null;\n\t\tconst id = this.document._id || null;\n\t\tconst data = this.changes;\n\t\tObject.keys(this.changes).forEach((key) => {\n\t\t\tif (data[key] === this.document[key]) { delete data[key]; }\n\t\t});\n\t\tdata.id = this.changes._id || this.document._id || null;\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Update`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresponse = await new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Create`, data, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (RESTModel.isValidId(id)) {\n\t\t\t\tresponse = await API.call(\"PUT\", `/API/${modelName}/${id}`, data);\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", `/API/${modelName}/`, data);\n\t\t\t}\n\t\t}\n\t\tif (response && response._id) {\n\t\t\tthis.document = response;\n\t\t\tthis.changes = {};\n\t\t\tRESTModel.CacheSet(this);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`returned ${response}`);\n\t}\n\n\tpublic async remove(hasWebSocket?: boolean): Promise<this> {\n\t\tconst id = this._id || \"\";\n\t\tif (RESTModel.isValidId(id)) {\n\t\t\tconst modelName = (this.constructor as any).ModelName;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO && hasWebSocket) {\n\t\t\t\tawait new Promise((resolve, reject) =>\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(`/API/${modelName}/Delete`, id, (res: any) =>\n\t\t\t\t\t\t\t\t\tresolve(res));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait API.call(\"DELETE\", `/API/${modelName}/${id}`, null);\n\t\t\t}\n\n\t\t\tRESTModel.CacheRemove(id);\n\t\t\treturn this;\n\t\t}\n\t\tthrow new Error(`Invalid id: ${id}`);\n\t}\n}\n","/**\n * Created by corynull on 6/19/17.\n */\nimport Axios, { AxiosRequestConfig, AxiosStatic } from \"axios\";\nimport { parse as ParseCookie, serialize as SerializeCookie } from \"cookie\";\nimport SocketIO from \"socket.io-client\";\nimport { ModelNameToModel } from \"./ModelNameToModel\";\n\nexport abstract class API {\n\tpublic static SocketIO: SocketIOClientStatic | null = SocketIO;\n\tpublic static Axios: AxiosStatic | null = Axios;\n\tpublic static readonly SessionStorageSupported =\n\t\ttypeof Storage !== \"undefined\";\n\tpublic static readonly LocalStorageSupported =\n\t\ttypeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\";\n\tpublic static readonly ShouldUseSocketIO = true;\n\tpublic static dev = false;\n\tpublic static secure = !API.dev;\n\tpublic static port = 80;\n\tpublic static securePort = 443;\n\tpublic static hostname = \"giggizmo.com\";\n\tprivate static _token: string | null = null;\n\tprivate static _expires: Date | null = null;\n\tpublic static useSocketIO = false;\n\tprivate static webSocket: SocketIOClient.Socket | null = null;\n\tpublic static get expires(): Date | null {\n\t\tif (!API._expires && API._token) {\n\t\t\tlet value: string | null = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tvalue = localStorage.getItem(\"expires\");\n\t\t\t}\n\t\t\tAPI._expires = (value) ? new Date(value) : new Date();\n\t\t}\n\t\treturn API._expires;\n\t}\n\tpublic static set expires(value: Date | null) {\n\t\tAPI._expires = value;\n\t\tif (value === null && API.LocalStorageSupported) {\n\t\t\tlocalStorage.removeItem(\"expires\");\n\t\t} else if (API.LocalStorageSupported && API._expires) {\n\t\t\tlocalStorage.setItem(\"expires\", API._expires.toISOString());\n\t\t}\n\t}\n\tpublic static get token(): string | null {\n\t\tconst dateNow = new Date();\n\t\tif (API.expires && dateNow > API.expires) {\n\t\t\tAPI._token = null;\n\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage.\n\t\t\tconst value = localStorage.getItem(\"token\");\n\t\t\tif (value && value !== \"\") {\n\t\t\t\tAPI._token = JSON.parse(value);\n\t\t\t}\n\t\t}\n\t\tif (!API._token && typeof document !== \"undefined\" && document.cookie) {\n\t\t\t// We store it in the cookie.\n\t\t\tAPI._token = ParseCookie(document.cookie)[\"gig-gizmo-token\"];\n\t\t}\n\t\tif (API._token && API.LocalStorageSupported) {\n\t\t\t// We store it in local storage if found.\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(API._token));\n\t\t}\n\t\treturn API._token;\n\t}\n\tpublic static set token(value: string | null) {\n\t\tif (typeof value === \"string\" && value.length !== 124 && value !== null) {\n\t\t\tthrow new Error(`Token is not valid: ${value}`);\n\t\t} else {\n\t\t\tif (typeof value === \"string\" && value.length !== 0) {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(value));\n\t\t\t\t}\n\t\t\t\tAPI._token = value;\n\t\t\t} else {\n\t\t\t\tif (API.LocalStorageSupported) {\n\t\t\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\t\t}\n\t\t\t\tAPI._token = null;\n\t\t\t}\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tdocument.cookie = SerializeCookie(\"gig-gizmo-token\", API._token || \"\", {\n\t\t\t\t\tpath: \"/\",\n\t\t\t\t\tsameSite: \"strict\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static get rootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"https://\";\n\t\t} else {\n\t\t\turl += \"http://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static get webSocketRootURL(): string {\n\t\tlet url = \"\";\n\t\tif (API.secure) {\n\t\t\turl += \"wss://\";\n\t\t} else {\n\t\t\turl += \"ws://\";\n\t\t}\n\t\turl += `${API.hostname}`;\n\t\tif (API.port !== 80 && !API.secure) {\n\t\t\turl += `:${API.port}`;\n\t\t} else if (API.securePort !== 443 && API.secure) {\n\t\t\turl += `:${API.securePort}`;\n\t\t}\n\t\treturn url;\n\t}\n\n\tpublic static async deserializeData(data: any): Promise<any> {\n\t\ttry {\n\t\t\tif (// RESTModel\n\t\t\t\ttypeof data === \"object\" && data &&\n\t\t\t\ttypeof data._id === \"string\" &&\n\t\t\t\ttypeof data.ModelName === \"string\"\n\t\t\t) {\n\t\t\t\treturn new (await ModelNameToModel(data.ModelName))(data);\n\t\t\t} // END of RESTModel\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Map\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((arr) =>\n\t\t\t\t\tArray.isArray(arr) &&\n\t\t\t\t\tarr.length === 2 &&\n\t\t\t\t\ttypeof arr[0] === \"string\" &&\n\t\t\t\t\ttypeof arr[1] === \"object\" && arr[1] &&\n\t\t\t\t\ttypeof arr[1]._id === \"string\" &&\n\t\t\t\t\ttypeof arr[1].ModelName === \"string\"\n\t\t\t\t\t)) {\n\t\t\t\tconst mapData: Map<string, any> = new Map();\n\t\t\t\tconst promises: Array<Promise<void>> =\n\t\t\t\t\tdata.map(async (arr) => {\n\t\t\t\t\t\tconst [key, value] = arr;\n\t\t\t\t\t\tlet item: any = null;\n\t\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\t\titem = await API.deserializeData(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapData.set(key, item);\n\t\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn mapData;\n\t\t\t} // End of Map\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Array\n\t\t\t\tArray.isArray(data) &&\n\t\t\t\tdata.length > 0 &&\n\t\t\t\tdata.every((item) =>\n\t\t\t\t\ttypeof item === \"object\" && item &&\n\t\t\t\t\ttypeof item._id === \"string\" &&\n\t\t\t\t\ttypeof item.ModelName === \"string\")\n\t\t\t) {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tdata.map((item: any) => {\n\t\t\t\t\t\treturn API.deserializeData(item);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}// End of Array\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\ttry {\n\t\t\tif (// Object\n\t\t\t\ttypeof data === \"object\" && data && !Array.isArray(data)\n\t\t\t) {\n\t\t\t\tconst object = {};\n\t\t\t\tconst promises: Array<Promise<void>> = [];\n\t\t\t\tObject.entries(data).forEach(([key, value]: [string, any]) => {\n\t\t\t\t\tif (typeof value === \"object\" && value) {\n\t\t\t\t\t\tAPI.deserializeData(value).then((objectValue: any) => {\n\t\t\t\t\t\t\tobject[key] = objectValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait Promise.all(promises);\n\t\t\t\treturn object;\n\t\t\t} // End of Object\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tpublic static async call(method: string, route: string, data: any) {\n\t\tconst headers = {\n\t\t\t\"x-gig-gizmo-token\": API.token ? API._token : null\n\t\t};\n\t\tconst fetchRequest: AxiosRequestConfig = {\n\t\t\tdata: null,\n\t\t\theaders,\n\t\t\tmethod: method.toLowerCase(),\n\t\t\tparams: null,\n\t\t\tresponseType: \"json\",\n\t\t\turl: `${API.rootURL}${route}`,\n\t\t\txsrfCookieName: \"gig-gizmo-token\",\n\t\t\txsrfHeaderName: \"x-gig-gizmo-token\",\n\t\t};\n\t\tif (data) {\n\t\t\tif (method === \"HEAD\" || method === \"GET\") {\n\t\t\t\tfetchRequest.params = data;\n\t\t\t} else {\n\t\t\t\tfetchRequest.data = data;\n\t\t\t}\n\t\t}\n\n\t\tif (API.Axios) {\n\t\t\ttry {\n\t\t\t\tconst response = await API.Axios(fetchRequest);\n\t\t\t\tif (response.data) {\n\t\t\t\t\treturn response.data;\n\t\t\t\t} else if (response.statusText) {\n\t\t\t\t\treturn response.statusText;\n\t\t\t\t} else if (response.status) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Set Axios in GigGizmo API.\");\n\t\t}\n\t}\n\n\tpublic static async getSocket(): Promise<SocketIOClient.Socket | null> {\n\t\tconst killSocket = (error: any) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t\tif (API.webSocket) {\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t};\n\t\tconst onReady = () => {\n\t\t\tif (!API.webSocket && API.SocketIO) {\n\t\t\t\tAPI.webSocket = API.SocketIO();\n\t\t\t\tAPI.webSocket.on(\"connect_timeout\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"connect_error\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"disconnect\", killSocket);\n\t\t\t\tAPI.webSocket.on(\"error\", killSocket);\n\t\t\t\tAPI.webSocket.open();\n\t\t\t}\n\t\t\treturn API.webSocket;\n\t\t};\n\t\tif (API.SocketIO) {\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tswitch (document.readyState) {\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", resolve);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tcase \"interactive\":\n\t\t\t\t\tcase \"complete\":\n\t\t\t\t\t\treturn onReady();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unexpected readyState: ${document.readyState}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn onReady();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tprivate constructor() {\n\t\tthrow new Error(\"Cannot instantiate.\");\n\t}\n}\n\nif (typeof API.Axios !== \"undefined\" && API.Axios) {\n\tAPI.Axios.defaults.withCredentials = true;\n}\n","/**\n * Created by corynull on 4/1/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Conversation } from \"./Conversation\";\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { Notification } from \"./Notification\";\nimport { Page } from \"./Page\";\nimport { Post } from \"./Post\";\nimport { RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { Venue } from \"./Venue\";\n\nexport type UserCallback = (user: User | null) => void;\nexport type UserCallbackDestroyer = () => void;\n\nexport class User extends RESTModel {\n\tpublic static ModelName: string = \"User\";\n\tpublic static Current: User | null = null;\n\tpublic static Callbacks: Map<number, UserCallback> = new Map();\n\tpublic static agreement: any = null;\n\n\tpublic static EmailRegex: RegExp = // tslint:disable-next-line\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\tget password(): string | null {\n\t\treturn this.getField(\"password\");\n\t}\n\n\tset password(value: string | null) {\n\t\tthis.setField(\"password\", value);\n\t}\n\n\tget confirmPassword(): string | null {\n\t\treturn this.getField(\"confirmPassword\");\n\t}\n\n\tset confirmPassword(value: string | null) {\n\t\tthis.setField(\"confirmPassword\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tset active(value: boolean) {\n\t\tthis.setField(\"active\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tset admin(value: boolean) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tget admin(): boolean {\n\t\treturn this.getField(\"admin\") === true;\n\t}\n\n\tget firstName(): string {\n\t\treturn this.getField(\"firstName\");\n\t}\n\n\tset firstName(value: string) {\n\t\tthis.setField(\"firstName\", value);\n\t}\n\n\tget middleName(): string {\n\t\treturn this.getField(\"middleName\");\n\t}\n\n\tset middleName(value: string) {\n\t\tthis.setField(\"middleName\", value);\n\t}\n\n\tget lastName(): string {\n\t\treturn this.getField(\"lastName\");\n\t}\n\n\tset lastName(value: string) {\n\t\tthis.setField(\"lastName\", value);\n\t}\n\n\tget birthday(): Date {\n\t\tconst birthday = this.getField(\"birthday\") || null;\n\t\treturn birthday ? new Date(birthday) : birthday;\n\t}\n\n\tset birthday(value: Date) {\n\t\tthis.setField(\"birthday\", (value || new Date()).toJSON());\n\t}\n\n\tget country(): string {\n\t\treturn this.getField(\"country\");\n\t}\n\n\tset country(value: string) {\n\t\tthis.setField(\"country\", value);\n\t}\n\n\tget bandManager(): boolean {\n\t\treturn this.getField(\"bandManager\") === true;\n\t}\n\n\tset bandManager(value: boolean) {\n\t\tthis.setField(\"bandManager\", value);\n\t}\n\n\tget venueManager(): boolean {\n\t\treturn this.getField(\"venueManager\") === true;\n\t}\n\n\tset venueManager(value: boolean) {\n\t\tthis.setField(\"venueManager\", value);\n\t}\n\n\tget betaFeatureUser(): boolean {\n\t\treturn this.getField(\"betaFeatureUser\") === true;\n\t}\n\n\tset betaFeatureUser(value: boolean) {\n\t\tthis.setField(\"betaFeatureUser\", value);\n\t}\n\n\tget sendAnonymousReports(): boolean {\n\t\treturn this.getField(\"sendAnonymousReports\") === true;\n\t}\n\n\tset sendAnonymousReports(value: boolean) {\n\t\tthis.setField(\"sendAnonymousReports\", value);\n\t}\n\n\tget sendErrorReports(): boolean {\n\t\treturn this.getField(\"sendErrorReports\") === true;\n\t}\n\n\tset sendErrorReports(value: boolean) {\n\t\tthis.setField(\"sendErrorReports\", value);\n\t}\n\n\tget sendEmails(): boolean {\n\t\treturn this.getField(\"sendEmails\") === true;\n\t}\n\n\tset sendEmails(value: boolean) {\n\t\tthis.setField(\"sendEmails\", value);\n\t}\n\n\tget sendPromotions(): boolean {\n\t\treturn this.getField(\"sendPromotions\") === true;\n\t}\n\n\tset sendPromotions(value: boolean) {\n\t\tthis.setField(\"sendPromotions\", value);\n\t}\n\n\tget useCookies(): boolean {\n\t\treturn this.getField(\"useCookies\") === true;\n\t}\n\n\tset useCookies(value: boolean) {\n\t\tthis.setField(\"useCookies\", value);\n\t}\n\n\tget fullName(): string {\n\t\treturn `${this.firstName || \"\"} ${this.middleName || \"\"} ${this.lastName ||\n\t\t\t\"\"}`;\n\t}\n\n\tget email(): string {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget salt(): string {\n\t\treturn this.getField(\"salt\");\n\t}\n\n\tget hash(): string {\n\t\treturn this.getField(\"hash\");\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget emailVerified(): boolean {\n\t\treturn this.getField(\"emailVerified\");\n\t}\n\n\tset emailVerified(value: boolean) {\n\t\tthis.setField(\"emailVerified\", value);\n\t}\n\n\tget attempts(): number {\n\t\treturn this.getField(\"attempts\");\n\t}\n\n\tget lastLoginIP(): string {\n\t\treturn this.getField(\"lastLoginIP\");\n\t}\n\n\tset lastLoginIP(value: string) {\n\t\tthis.setField(\"lastLoginIP\", value);\n\t}\n\n\tget lastLogin(): Date {\n\t\tconst lastLogin = this.getField(\"lastLogin\") || null;\n\t\treturn lastLogin ? new Date(lastLogin) : lastLogin;\n\t}\n\n\tset lastLogin(value: Date) {\n\t\tthis.setField(\"lastLogin\", (value || new Date()).toJSON());\n\t}\n\n\tget canContact(): boolean {\n\t\treturn this.getField(\"canContact\") === true;\n\t}\n\n\tset canContact(value: boolean) {\n\t\tthis.setField(\"canContact\", value);\n\t}\n\n\tget canFind(): boolean {\n\t\treturn this.getField(\"canFind\") === true;\n\t}\n\n\tset canFind(value: boolean) {\n\t\tthis.setField(\"canFind\", value);\n\t}\n\n\tget options(): any {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: any) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tpublic static verifyEmail(id: string, secret: string): Promise<any> {\n\t\treturn API.call(\"GET\", \"/API/User/Verify\", {\n\t\t\tid,\n\t\t\tsecret\n\t\t});\n\t}\n\n\tpublic static sendEmailVerification(): Promise<any> {\n\t\treturn API.call(\"POST\", \"/API/User/Verify\", null);\n\t}\n\n\tpublic static getAllConversations(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllNotifications(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(Notification, null, true) as\n\t\t\tPromise<Notification[]>;\n\t}\n\n\tpublic static getAllPosts(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null, true) as\n\t\t\tPromise<Post[]>;\n\t}\n\n\tpublic static getAllBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static getAllVenues(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static getAllGigs(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as\n\t\t\tPromise<Gig[]>;\n\t}\n\n\tpublic static getAllUploads(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as\n\t\t\tPromise<Upload[]>;\n\t}\n\n\tpublic static findFacebookPages(term: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (term === \"\") {\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/FacebookAccount/FindPages\", { term }).then(\n\t\t\t\t\tresolve,\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static search(\n\t\tq: string,\n\t\tmodelName: string | null = null,\n\t\tskip: number = 0,\n\t\tlimit: number = Number.POSITIVE_INFINITY\n\t): Promise<{\n\t\tbands: Band[];\n\t\tlocations: Location[]\n\t\tpages: Page[]\n\t\ttotalFound: number;\n\t\tuploads: Upload[];\n\t\tusers: User[];\n\t\tvenues: Venue[];\n\t}> {\n\t\treturn new Promise(\n\t\t\t(resolve: ((query: {\n\t\t\t\tbands: Band[];\n\t\t\t\tlocations: Location[]\n\t\t\t\tpages: Page[]\n\t\t\t\ttotalFound: number;\n\t\t\t\tuploads: Upload[];\n\t\t\t\tusers: User[];\n\t\t\t\tvenues: Venue[];\n\t\t\t}) => void),\n\t\t\t reject: ((error: any) => void)) => {\n\t\t\tif (q === \"\" || q === undefined) {\n\t\t\t\tresolve({\n\t\t\t\t\tbands: [],\n\t\t\t\t\tlocations: [],\n\t\t\t\t\tpages: [],\n\t\t\t\t\ttotalFound: 0,\n\t\t\t\t\tuploads: [],\n\t\t\t\t\tusers: [],\n\t\t\t\t\tvenues: []\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst data: {\n\t\t\t\t\tlimit: number | undefined;\n\t\t\t\t\tmodel: string | undefined;\n\t\t\t\t\tq: string | undefined;\n\t\t\t\t\tskip: number | undefined;\n\t\t\t\t} = {\n\t\t\t\t\tlimit: undefined,\n\t\t\t\t\tmodel: undefined,\n\t\t\t\t\tq: undefined,\n\t\t\t\t\tskip: undefined\n\t\t\t\t};\n\t\t\t\tdata.q = q;\n\t\t\t\tif (modelName !== null && modelName !== \"Any\") {\n\t\t\t\t\tdata.model = modelName;\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(skip))) {\n\t\t\t\t\tdata.skip = Number(skip);\n\t\t\t\t}\n\n\t\t\t\tif (Number.isFinite(Number(limit))) {\n\t\t\t\t\tdata.limit = Number(limit);\n\t\t\t\t}\n\n\t\t\t\tconst Return = (results: any) => {\n\t\t\t\t\tconst query = results.query;\n\t\t\t\t\tif (!query) { reject(query); }\n\t\t\t\t\tAPI.deserializeData(query).then(resolve, reject);\n\t\t\t\t};\n\t\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/TextSearch\", data, Return);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.call(\"GET\", \"/API/TextSearch\", data).then(Return, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<User[]> {\n\t\treturn RESTModel.findManyBase(User, criteria, true) as Promise<User[]>;\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<User | null> {\n\t\treturn RESTModel.findOneBase(User, criteria, true) as Promise<User>;\n\t}\n\n\tpublic static onChange(callback: (user: User | null) => void):\n\t\tUserCallbackDestroyer {\n\t\tconst id = Date.now();\n\t\tUser.Callbacks.set(id, callback);\n\t\treturn () => {\n\t\t\tUser.Callbacks.delete(id);\n\t\t};\n\t}\n\n\tpublic static async setUser(data: object | null): Promise<User | null> {\n\t\ttry {\n\t\t\tif (typeof data === \"object\" && data) {\n\t\t\t\tUser.Current = new User(data);\n\t\t\t\tif (API.SessionStorageSupported) {\n\t\t\t\t\tsessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t}\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(User.Current));\n\t\t\t} else {\n\t\t\t\tUser.Current = null;\n\t\t\t\tAPI.token = null;\n\t\t\t\tAPI.expires = null;\n\t\t\t\tif (API.SessionStorageSupported) { sessionStorage.removeItem(\"user\"); }\n\t\t\t\tUser.Callbacks.forEach((callback: any) => callback(null));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn User.Current;\n\t}\n\n\tpublic static async getUser(force: boolean): Promise<User | null> {\n\t\tlet data = null;\n\t\tconst dateNow = new Date();\n\t\tif (!force && API.expires && dateNow < API.expires) {\n\t\t\tif (User.Current !== null) {\n\t\t\t\t/* If we already have the current user cached, return it... */\n\t\t\t\treturn User.Current;\n\t\t\t} else if (API.SessionStorageSupported) {\n\t\t\t\t/* If the user is stored in session storage. */\n\t\t\t\ttry {\n\t\t\t\t\tconst saved = sessionStorage.getItem(\"user\") || \"\";\n\t\t\t\t\tdata = JSON.parse(saved);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdata = \"\";\n\t\t\t\t}\n\t\t\t\tif (data) { return User.setUser(data); }\n\t\t\t}\n\t\t}\n\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tdata = await new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/Retreive\", resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else { data = await API.call(\"GET\", \"/API/User\", null); }\n\t\tif (data) { return User.setUser(data); }\n\t\treturn User.setUser(null);\n\t}\n\n\tpublic static findById(id: string): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, id, true) as Promise<User | null>;\n\t}\n\n\tpublic static connectFacebook() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/Facebook`;\n\t}\n\n\tpublic static facebookLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Login/Facebook`;\n\t}\n\n\tpublic static payPalLogIn() {\n\t\twindow.location.href = `${API.rootURL}/API/Auth/PayPal`;\n\t}\n\n\tpublic static async userLogIn(email: string, password: string): Promise<User | null> {\n\t\tif (!email || email === \"\") {\n\t\t\tthrow new Error(\"No email\");\n\t\t} else if (!password || password === \"\") {\n\t\t\tthrow new Error(\"No password\");\n\t\t} else {\n\t\t\tlet response = null;\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\tresponse = await new Promise((resolve, reject) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\n\t\t\t\t\t\t\t\t\t\"/API/User/SignIn\", {\n\t\t\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await API.call(\"POST\", \"/API/User/SignIn\", {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword\n\t\t\t\t});\n\t\t\t}\n\t\t\t// TODO: Create error for unauthorized access vs general error\n\t\t\tif (response && response.user && response.token && response.expires) {\n\t\t\t\tAPI.expires = new Date(response.expires);\n\t\t\t\tAPI.token = response.token;\n\t\t\t\treturn User.setUser(response.user);\n\t\t\t} else { throw new Error(`Unauthorized`); }\n\t\t}\n\t}\n\n\tpublic static async userLogOut(): Promise<User | null> {\n\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\tsocket.emit(\"/API/User/SignOut\", null, resolve);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject);\n\t\t\t});\n\t\t} else {\n\t\t\tawait API.call(\"POST\", \"/API/User/SignOut\", null);\n\t\t}\n\t\tconst user = await User.setUser(null);\n\t\tif (user && user.valid()) {\n\t\t\tthrow new Error(`${JSON.stringify(user)} returned, failed to log out?`);\n\t\t} else { return user; }\n\t}\n\n\tpublic static sendPasswordResetEmail(email: string): Promise<any> {\n\t\treturn API.call(\"POST\", \"/User/Reset\", { email });\n\t}\n\n\tpublic static registerUser(userData: any): Promise<User> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (userData && typeof userData === \"object\") {\n\t\t\t\tif (userData.email) {\n\t\t\t\t\tconst re = new RegExp(\n\t\t\t\t\t\t[`^(([^<>()[\\].,;:\\s@\"]+`,\n\t\t\t\t\t\t\t`(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))`,\n\t\t\t\t\t\t\t`@(([^<>()[\\].,;:\\s@\"]+\\.)+`,\n\t\t\t\t\t\t\t`[^<>()[\\].,;:\\s@\"]{2,})$`].join(\"\"),\n\t\t\t\t\t\t\"i\");\n\t\t\t\t\tif (re[Symbol.search](userData.email) !== 0) {\n\t\t\t\t\t\treturn reject(new Error(\"Invalid email address\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Email is required\")); }\n\t\t\t\tif (userData.password) {\n\t\t\t\t\tconst symbolTest = /[^a-zA-Z0-9]/gu;\n\t\t\t\t\tconst numberTest = /[0-9]/g;\n\t\t\t\t\tconst lowercasePassword = userData.password.toLowerCase();\n\t\t\t\t\tif (userData.password === \"\") {\n\t\t\t\t\t\treturn reject(new Error(\"Password is required\"));\n\t\t\t\t\t} else if (userData.password.length < 8) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too short\"));\n\t\t\t\t\t} else if (userData.password.length > 256) {\n\t\t\t\t\t\treturn reject(new Error(\"Password is too long\"));\n\t\t\t\t\t} else if (!symbolTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one symbol\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!numberTest.test(userData.password)) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password does not contain at least one number\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.firstName &&\n\t\t\t\t\t\tuserData.firstName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.firstName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tnew Error(\"Password can not contain your first name\")\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tuserData.lastName &&\n\t\t\t\t\t\tuserData.lastName.length !== 0 &&\n\t\t\t\t\t\tlowercasePassword.indexOf(userData.lastName.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn reject(new Error(\"Password can not contain your last name\"));\n\t\t\t\t\t}\n\t\t\t\t} else { return reject(new Error(\"Password is required\")); }\n\n\t\t\t\tif (userData.firstName) {\n\t\t\t\t\tif (userData.firstName.length !== 0) {\n\t\t\t\t\t\tif (userData.firstName[0] === userData.firstName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"First name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"First name is required\")); }\n\n\t\t\t\tif (userData.lastName) {\n\t\t\t\t\tif (userData.lastName.length !== 0) {\n\t\t\t\t\t\tif (userData.lastName[0] === userData.lastName[0].toLowerCase()) {\n\t\t\t\t\t\t\treturn reject(new Error(\"Last name is not title case\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t\t} else { return reject(new Error(\"Last name is required\")); }\n\t\t\t} else { return reject(new Error(\"User data is not an object\")); }\n\n\t\t\tif (API.useSocketIO && API.ShouldUseSocketIO) {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tAPI.getSocket().then(\n\t\t\t\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\t\t\t\tif (socket) {\n\t\t\t\t\t\t\t\tsocket.emit(\"/API/User/Create\", userData, res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trej);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.call(\"POST\", \"/API/User\", userData).then(\n\t\t\t\t(data) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tUser.setUser(data).then(\n\t\t\t\t\t\t\t(user: any) => {\n\t\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(`${JSON.stringify(data)} returned`));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static NotifyAdminsOfError() {\n\t\tconsole.error(\"Not implemented yet.\");\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\") as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\") as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic validatePassword(maybePassword: string): Error | null {\n\t\tconst password = maybePassword || \"\";\n\t\tconst decimalTest = /\\d/;\n\t\tconst symbolTest = /\\W/;\n\t\tconst lowercasePassword = password.toLowerCase();\n\t\tconst lowercaseFirstName =\n\t\t\tthis.firstName ? this.firstName.toLowerCase() : \"\";\n\t\tconst lowercaseLastName =\n\t\t\tthis.lastName ? this.lastName.toLowerCase() : \"\";\n\t\tif (password === \"\") {\n\t\t\treturn new Error(\"Password missing\");\n\t\t} else if (password.length < 8) {\n\t\t\treturn new Error(\"Password is too short\");\n\t\t} else if (password.length > 256) {\n\t\t\treturn new Error(\"Password is too long\");\n\t\t} else if (!decimalTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one number\");\n\t\t} else if (!symbolTest.test(password)) {\n\t\t\treturn new Error(\"Password does not have atleast one symbol\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseFirstName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your first name\");\n\t\t} else if (lowercasePassword.indexOf(lowercaseLastName) !== -1) {\n\t\t\treturn new Error(\"Password cannot contain your last name\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") { return false; }\n\t\tif (typeof this.lastName !== \"string\") { return false; }\n\t\tif (typeof this.email !== \"string\") { return false; }\n\t\t// Value checks\n\t\tif (this.firstName === \"\") { return false; }\n\t\tif (this.lastName === \"\") { return false; }\n\t\tif (this.email === \"\") { return false; }\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic valid(): boolean {\n\t\tsuper.valid();\n\t\t// Type checks\n\t\tif (typeof this.firstName !== \"string\") {\n\t\t\tthrow new Error(`Invalid firstName: ${this.firstName}`);\n\t\t}\n\t\tif (typeof this.lastName !== \"string\") {\n\t\t\tthrow new Error(`Invalid lastName: ${this.lastName}`);\n\t\t}\n\t\t// Value checks\n\t\tif (this.firstName === \"\") {\n\t\t\tthrow new Error(\"Blank firstName\");\n\t\t}\n\t\tif (this.lastName === \"\") {\n\t\t\tthrow new Error(\"Blank lastName\");\n\t\t}\n\t\t// TODO: More validation checks?\n\t\treturn true;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n}\n","/**\n * Created by corynull on 4/10/17.\n */\n\nimport { RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\nexport class Upload extends RESTModel {\n\tpublic static ModelName: string = \"Upload\";\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget fileData(): string {\n\t\treturn this.getField(\"fileData\");\n\t}\n\n\tset fileData(value: string) {\n\t\tthis.setField(\"fileData\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static async uploadFile(dataUrl: string, fileName: string): Promise<Upload> {\n\t\tlet upload = new Upload({ fileData: dataUrl, fileName });\n\t\tupload = await upload.save(true);\n\t\treturn upload;\n\t}\n\n\tpublic static findById(id: string): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, id) as Promise<Upload | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, criteria, true) as Promise<Upload[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Upload | null> {\n\t\treturn RESTModel.findOneBase(Upload, criteria) as Promise<Upload | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Upload[]> {\n\t\treturn RESTModel.findManyBase(Upload, null, true) as Promise<Upload[]>;\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (!this.description) { return false; }\n\t\tif (!this.fileData) { return false; }\n\t\tif (!this.fileName) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 9:08 AM.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\nexport class FacebookAccount extends RESTModel {\n\tpublic static ModelName: string = \"FacebookAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget userAccessToken(): string {\n\t\treturn this.getField(\"userAccessToken\");\n\t}\n\n\tset userAccessToken(value: string) {\n\t\tthis.setField(\"userAccessToken\", value);\n\t}\n\n\tget userRefreshToken(): string {\n\t\treturn this.getField(\"userRefreshToken\");\n\t}\n\n\tset userRefreshToken(value: string) {\n\t\tthis.setField(\"userRefreshToken\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findOneBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<FacebookAccount[]> {\n\t\treturn RESTModel.findManyBase(FacebookAccount, criteria, true) as\n\t\t\tPromise<FacebookAccount[]>;\n\t}\n\n\tpublic static findById(id: string):\n\t \tPromise<FacebookAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/FacebookAccount/${id}`, null).then(\n\t\t\t\t\t(found: any) => {\n\t\t\t\t\t\tconst account = found || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new FacebookAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findPage(pageName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof pageName !== \"string\") {\n\t\t\t\treject(new Error(\"pageName is not a string!\"));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", \"/API/Facebook/Page/Find\", {\n\t\t\t\t\tname: pageName\n\t\t\t\t}).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static PostToPage(\n\t\tformat: string,\n\t\ttext: string,\n\t\tpageId: string,\n\t\tpostDateTime: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Facebook/Page/Post\", {\n\t\t\t\tfb_page_id: pageId,\n\t\t\t\tpost_format: format,\n\t\t\t\tpost_text: text,\n\t\t\t\tpublish_time: postDateTime // .getTime() / 1000\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") {\n\t\t\treturn user === this.userId;\n\t\t} else if (typeof user === \"object\" && user) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\tif (!this.accountId || typeof this.accountId !== \"string\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { API } from \"./API\";\nimport { Band } from \"./Band\";\nimport { Location } from \"./Location\";\nimport { RESTModel } from \"./RESTModel\";\nimport { Venue } from \"./Venue\";\n\nexport class Gig extends RESTModel {\n\tpublic static ModelName: string = \"Gig\";\n\n\tget startTime(): Date {\n\t\tconst startTime = this.getField(\"startTime\");\n\t\treturn startTime ? new Date(startTime) : startTime;\n\t}\n\n\tset startTime(value: Date) {\n\t\tthis.setField(\"startTime\", value);\n\t}\n\n\tget stopTime(): Date {\n\t\tconst stopTime = this.getField(\"stopTime\");\n\t\treturn stopTime ? new Date(stopTime) : stopTime;\n\t}\n\n\tset stopTime(value: Date) {\n\t\tthis.setField(\"stopTime\", value.toJSON());\n\t}\n\n\tget location(): string {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget venue(): string {\n\t\treturn this.getField(\"venue\");\n\t}\n\n\tset venue(value: string) {\n\t\tthis.setField(\"venue\", value);\n\t}\n\n\tget bands(): string[] {\n\t\treturn this.getField(\"bands\");\n\t}\n\n\tset bands(value: string[]) {\n\t\tthis.setField(\"bands\", value);\n\t}\n\n\tget active(): boolean {\n\t\treturn this.getField(\"active\");\n\t}\n\n\tget toBeAnnounced(): boolean {\n\t\treturn this.getField(\"toBeAnnounced\");\n\t}\n\n\tset toBeAnnounced(value: boolean) {\n\t\tthis.setField(\"toBeAnnounced\", value);\n\t}\n\n\tget bandOwnersAccepted(): string[] {\n\t\treturn this.getField(\"bandOwnersAccepted\");\n\t}\n\n\tset bandOwnersAccepted(value: string[]) {\n\t\tthis.setField(\"bandOwnersAccepted\", value);\n\t}\n\n\tget venueOwnerAccepted(): string {\n\t\treturn this.getField(\"venueOwnerAccepted\");\n\t}\n\n\tset venueOwnerAccepted(value: string) {\n\t\tthis.setField(\"venueOwnerAccepted\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Gig | null> {\n\t\treturn RESTModel.findByIdBase(Gig, id, true) as Promise<Gig | null>;\n\t}\n\n\tpublic static async findByBand(bandId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Band/${bandId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static async findByVenue(venueId: string): Promise<Gig[]> {\n\t\tconst data = await API.call(\"GET\", `/API/Venue/${venueId}/Gigs`, null);\n\t\tif (data && Array.isArray(data)) {\n\t\t\treturn data.map((itemData: any) => {\n\t\t\t\tconst item = new Gig(itemData);\n\t\t\t\tRESTModel.Cache.set(item._id, item);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Expected Array, got ${data}`);\n\t}\n\n\tpublic static getAllOwned(): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, null, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Gig[]> {\n\t\treturn RESTModel.findManyBase(Gig, criteria, true) as Promise<Gig[]>;\n\t}\n\n\tpublic static createGigs(gigData: object): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst data: any = gigData || {};\n\t\t\tif (data && typeof data === \"object\") {\n\t\t\t\tif (!data.band || data.band === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Band is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.venue || data.venue === \"\") {\n\t\t\t\t\treturn reject(new Error(\"Venue is required\"));\n\t\t\t\t}\n\t\t\t\tif (!data.times || data.times.length === 0) {\n\t\t\t\t\treturn reject(new Error(\"Times is required\"));\n\t\t\t\t}\n\t\t\t\tconst filtered = data.times.filter(\n\t\t\t\t\t(\n\t\t\t\t\t\ttime: { dayDate: any; startTime: any; stopTime: any },\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (time.dayDate && time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tconst dayDate = new Date(time.dayDate);\n\n\t\t\t\t\t\t\tconst startTime = new Date(time.startTime);\n\t\t\t\t\t\t\tstartTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstartTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstartTime.setDate(dayDate.getDay());\n\n\t\t\t\t\t\t\tconst stopTime = new Date(time.stopTime);\n\t\t\t\t\t\t\tstopTime.setFullYear(dayDate.getFullYear());\n\t\t\t\t\t\t\tstopTime.setMonth(dayDate.getMonth());\n\t\t\t\t\t\t\tstopTime.setDate(dayDate.getDay());\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (time.startTime && time.stopTime) {\n\t\t\t\t\t\t\tdata.times[i] = {\n\t\t\t\t\t\t\t\tstartTime: time.startTime,\n\t\t\t\t\t\t\t\tstopTime: time.stopTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (filtered.length !== data.times.length) {\n\t\t\t\t\treturn reject(new Error(\"Not all times were valid\"));\n\t\t\t\t}\n\t\t\t\tdata.times = filtered;\n\t\t\t\tconst request = API.call(\"POST\", \"/API/Gig\", data);\n\t\t\t\treturn request.then(\n\t\t\t\t\t((response: any) => {\n\t\t\t\t\t\tlet gigs: Gig[] = [];\n\t\t\t\t\t\tgigs = Array.from(response || []).map((itemData: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(itemData);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresolve(gigs);\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic static getAllInDistance(\n\t\tlocation: { lat: number; lng: number },\n\t\tdistance: number\n\t): Promise<Gig[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof location !== \"object\") {\n\t\t\t\treturn reject(new Error(\"location is not a object!\"));\n\t\t\t}\n\t\t\tif (typeof location.lat !== \"number\" ||\n\t\t\t\ttypeof location.lng !== \"number\") {\n\t\t\t\treturn reject(new Error(\"location does not contain lat or lng!\"));\n\t\t\t}\n\t\t\tif (typeof distance !== \"number\") {\n\t\t\t\treturn reject(new Error(\"radius is not a number!\"));\n\t\t\t}\n\n\t\t\treturn API.call(\"GET\", \"/API/Gig/InDistance\", {\n\t\t\t\tdis: distance,\n\t\t\t\tlat: location.lat,\n\t\t\t\tlng: location.lng\n\t\t\t}).then(\n\t\t\t\t((gigs: object[]) => {\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tArray.from(gigs).map((item: any) => {\n\t\t\t\t\t\t\tconst gig = new Gig(item);\n\t\t\t\t\t\t\treturn gig;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic getBands(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, { _id: this.bands }, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic getVenue(): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, this.venue, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic getLocation(): Promise<Location> {\n\t\treturn RESTModel.findByIdBase(Location, this.location, true) as\n\t\t\tPromise<Location>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 5/17/17.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\nimport { User } from \"./User\";\n\nexport class TwitterAccount extends RESTModel {\n\tpublic static ModelName: string = \"TwitterAccount\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget accessToken(): string {\n\t\treturn this.getField(\"accessToken\");\n\t}\n\n\tset accessToken(value: string) {\n\t\tthis.setField(\"accessToken\", value);\n\t}\n\n\tget tokenSecret(): string {\n\t\treturn this.getField(\"tokenSecret\");\n\t}\n\n\tset tokenSecret(value: string) {\n\t\tthis.setField(\"tokenSecret\", value);\n\t}\n\n\tget profile(): any {\n\t\treturn this.getField(\"profile\");\n\t}\n\n\tset profile(value: any) {\n\t\tthis.setField(\"profile\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findOneBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<TwitterAccount[]> {\n\t\treturn RESTModel.findManyBase(TwitterAccount, criteria, true) as\n\t\t\tPromise<TwitterAccount[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<TwitterAccount | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof id === \"string\" && id !== \"\") {\n\t\t\t\tAPI.call(\"GET\", `/API/TwitterAccount/${id}`, null).then(\n\t\t\t\t\t(response: any) => {\n\t\t\t\t\t\tconst account = response || null;\n\t\t\t\t\t\tif (account) {\n\t\t\t\t\t\t\tresolve(new TwitterAccount(account));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${account} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treject\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getUser(): Promise<User | null> {\n\t\treturn RESTModel.findByIdBase(User, this.userId, true) as\n\t\t\tPromise<User | null>;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\") { return user._id === this.userId; }\n\t\treturn false;\n\t}\n\n\tpublic goToTwitterAccount(): void {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\t// We are on a browser\n\t\t\twindow.location.href = `https://twitter.com?profile_id=${this.accountId}`;\n\t\t}\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.userId || typeof this.userId !== \"string\") { return false; }\n\t\tif (!this.profile || typeof this.profile !== \"object\") { return false; }\n\t\treturn true;\n\t}\n}\n","/**\n * Created by corynull on 4/3/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\nexport class Band extends RESTModel {\n\tpublic static ModelName: string = \"Band\";\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget website(): string {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget email(): string {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget cityName(): string {\n\t\treturn this.getField(\"cityName\");\n\t}\n\n\tset cityName(value: string) {\n\t\tthis.setField(\"cityName\", value);\n\t}\n\n\tget cityPlaceID(): string {\n\t\treturn this.getField(\"cityPlaceID\");\n\t}\n\n\tset cityPlaceID(value: string) {\n\t\tthis.setField(\"cityPlaceID\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Band | null> {\n\t\treturn RESTModel.findOneBase(Band, criteria, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, criteria, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Band | null> {\n\t\treturn RESTModel.findByIdBase(Band, id, true) as\n\t\t\tPromise<Band | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Band[]> {\n\t\treturn RESTModel.findManyBase(Band, null, true) as\n\t\t\tPromise<Band[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\tif (this.icon) {\n\t\t\treturn RESTModel.findByIdBase(Upload, this.icon, true) as\n\t\t\t\tPromise<Upload | null>;\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\t\treturn RESTModel.findManyBase(\n\t\t\t\t\tUpload,\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: photos\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByBand(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\tif (!this.twitter) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter, true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\tif (!this.facebook) { return Promise.resolve(null); }\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook, true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (typeof this.cityPlaceID !== \"string\") { return false; }\n\t\tif (this.cityPlaceID === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner: string) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any) {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on 9/7/17.\n */\n\nimport { API } from \"./API\";\nimport { GooglePlace } from \"./GooglePlace\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport class Location extends RESTModel {\n\tpublic static ModelName: string = \"Location\";\n\n\tget type(): string {\n\t\treturn this.getField(\"type\") || \"Point\";\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget address(): string {\n\t\treturn this.getField(\"address\");\n\t}\n\n\tset address(value: string) {\n\t\tthis.setField(\"address\", value);\n\t}\n\n\tget point(): number[] {\n\t\treturn this.getField(\"point\");\n\t}\n\n\tset point(value: number[]) {\n\t\tthis.setField(\"point\", value);\n\t}\n\n\tget utcOffset(): number {\n\t\treturn this.getField(\"utcOffset\");\n\t}\n\n\tset utcOffset(value: number) {\n\t\tthis.setField(\"utcOffset\", value);\n\t}\n\n\tpublic static getLocationByPlaceId(placeId: string): Promise<Location> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!placeId) {\n\t\t\t\treject(new Error(`Invaild placeId: ${placeId}`));\n\t\t\t} else {\n\t\t\t\tAPI.call(\"GET\", `/API/Place/${placeId}`, null).then(\n\t\t\t\t\t((location: any) => {\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\tresolve(new Location(location));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`${location} returned`));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\treject);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static findById(id: string): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, id) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Location | null> {\n\t\treturn RESTModel.findOneBase(Location, criteria) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Location[]> {\n\t\treturn RESTModel.findManyBase(Location, criteria, false) as\n\t\t\tPromise<Location[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.placeId) { return false; }\n\t\tif (!this.address) { return false; }\n\t\tif (!this.utcOffset) { return false; }\n\t\tif (!Array.isArray(this.point)) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic getPlaceDetails(): Promise<any> {\n\t\treturn GooglePlace.getPlaceDetails(this.placeId);\n\t}\n}\n","/**\n * Created by corynull on 4/5/17.\n */\n\nimport { FacebookAccount } from \"./FacebookAccount\";\nimport { Gig } from \"./Gig\";\nimport { Location } from \"./Location\";\nimport { RESTModel } from \"./RESTModel\";\nimport { TwitterAccount } from \"./TwitterAccount\";\nimport { Upload } from \"./Upload\";\nimport { User } from \"./User\";\n\nexport class Venue extends RESTModel {\n\tpublic static ModelName: string = \"Venue\";\n\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tget email(): string  {\n\t\treturn this.getField(\"email\");\n\t}\n\n\tset email(value: string) {\n\t\tthis.setField(\"email\", value);\n\t}\n\n\tget website(): string {\n\t\treturn this.getField(\"website\");\n\t}\n\n\tset website(value: string) {\n\t\tthis.setField(\"website\", value);\n\t}\n\n\tget phone(): string {\n\t\treturn this.getField(\"phone\");\n\t}\n\n\tset phone(value: string) {\n\t\tthis.setField(\"phone\", value);\n\t}\n\n\tget location(): string | null {\n\t\treturn this.getField(\"location\");\n\t}\n\n\tset location(value: string | null) {\n\t\tthis.setField(\"location\", value);\n\t}\n\n\tget openCloseTimes(): string {\n\t\treturn this.getField(\"openCloseTimes\");\n\t}\n\n\tset openCloseTimes(value: string) {\n\t\tthis.setField(\"openCloseTimes\", value);\n\t}\n\n\tget icon(): string | null {\n\t\treturn this.getField(\"icon\");\n\t}\n\n\tset icon(value: string | null) {\n\t\tthis.setField(\"icon\", value);\n\t}\n\n\tget photos(): string[] {\n\t\treturn this.getField(\"photos\");\n\t}\n\n\tset photos(value: string[]) {\n\t\tthis.setField(\"photos\", value);\n\t}\n\n\tget owners(): string[] {\n\t\treturn this.getField(\"owners\");\n\t}\n\n\tset owners(value: string[]) {\n\t\tthis.setField(\"owners\", value);\n\t}\n\n\tget facebook(): string | null {\n\t\treturn this.getField(\"facebook\");\n\t}\n\n\tset facebook(value: string | null) {\n\t\tthis.setField(\"facebook\", value);\n\t}\n\n\tget facebookPageId(): string | null {\n\t\treturn this.getField(\"facebookPageId\");\n\t}\n\n\tset facebookPageId(value: string | null) {\n\t\tthis.setField(\"facebookPageId\", value);\n\t}\n\n\tget facebookPageName(): string | null {\n\t\treturn this.getField(\"facebookPageName\");\n\t}\n\n\tset facebookPageName(value: string | null) {\n\t\tthis.setField(\"facebookPageName\", value);\n\t}\n\n\tget facebookPageToken(): string | null {\n\t\treturn this.getField(\"facebookPageToken\");\n\t}\n\n\tset facebookPageToken(value: string | null) {\n\t\tthis.setField(\"facebookPageToken\", value);\n\t}\n\n\tget twitter(): string | null {\n\t\treturn this.getField(\"twitter\");\n\t}\n\n\tset twitter(value: string | null) {\n\t\tthis.setField(\"twitter\", value);\n\t}\n\n\tget google(): string | null {\n\t\treturn this.getField(\"google\");\n\t}\n\n\tset google(value: string | null) {\n\t\tthis.setField(\"google\", value);\n\t}\n\n\tpublic static findOne(criteria: object | null): Promise<Venue | null> {\n\t\treturn RESTModel.findOneBase(Venue, criteria, true) as\n\t\t\tPromise<Venue | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, criteria, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Venue> {\n\t\treturn RESTModel.findByIdBase(Venue, id, true) as\n\t\t\tPromise<Venue>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Venue[]> {\n\t\treturn RESTModel.findManyBase(Venue, null, true) as\n\t\t\tPromise<Venue[]>;\n\t}\n\n\tpublic save(): Promise<this> {\n\t\treturn super.save(true);\n\t}\n\n\tpublic remove(): Promise<this> {\n\t\treturn super.remove(true);\n\t}\n\n\tpublic getIcon(): Promise<Upload | null> {\n\t\treturn RESTModel.findByIdBase(Upload, this.icon || \"\", true) as\n\t\t\tPromise<Upload | null>;\n\t}\n\n\tpublic getPhotos(): Promise<Upload[]> {\n\t\tconst photos = Array.from(this.photos);\n\t\tif (photos.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUpload,\n\t\t\t\t{\n\t\t\t\t\t_id: photos\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<Upload[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getOwners(): Promise<User[]> {\n\t\tconst owners = Array.from(this.owners);\n\t\tif (owners.length !== 0) {\n\t\t\treturn RESTModel.findManyBase(\n\t\t\t\tUser,\n\t\t\t\t{\n\t\t\t\t\t_id: owners\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t) as Promise<User[]>;\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getGigs(): Promise<Gig[]> {\n\t\treturn Gig.findByVenue(this._id || \"\") as Promise<Gig[]>;\n\t}\n\n\tpublic getTwitterAccount(): Promise<TwitterAccount | null> {\n\t\treturn RESTModel.findByIdBase(TwitterAccount, this.twitter || \"\", true) as\n\t\t\tPromise<TwitterAccount | null>;\n\t}\n\n\tpublic getFacebookAccount(): Promise<FacebookAccount | null> {\n\t\treturn RESTModel.findByIdBase(FacebookAccount, this.facebook || \"\", true) as\n\t\t\tPromise<FacebookAccount | null>;\n\t}\n\n\tpublic getLocation(): Promise<Location | null> {\n\t\treturn RESTModel.findByIdBase(Location, this.location || \"\", true) as\n\t\t\tPromise<Location | null>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tconst self = this;\n\t\tif (!super.isValid()) { return false; }\n\n\t\tif (!RESTModel.isValidId(this.location)) { return false; }\n\t\tif (this.location === \"\") { return false; }\n\n\t\tif (typeof this.name !== \"string\") { return false; }\n\t\tif (this.name === \"\") { return false; }\n\n\t\tif (typeof this.description !== \"string\") { return false; }\n\t\tif (this.description === \"\") { return false; }\n\t\tif (this.description === \"<p><br></p>\") { return false; }\n\n\t\tif (!Array.isArray(this.owners)) { return false; }\n\t\tif (this.owners.length === 0) { return false; }\n\t\tif (!this.owners.every((owner) => self.userIsOwner(owner))) { return false; }\n\n\t\treturn true;\n\t}\n\n\t// TODO: Create isOpen method\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (Array.isArray(this.owners)) {\n\t\t\tlet userId: string;\n\t\t\tif (typeof user === \"string\") {\n\t\t\t\tuserId = user;\n\t\t\t} else if (typeof user === \"object\" && user) {\n\t\t\t\tuserId = user._id;\n\t\t\t}\n\t\t\treturn this.owners.find((id: string) => id === userId) !== undefined;\n\t\t}\n\t\treturn false;\n\t}\n}\n","export async function ModelNameToModel(name: string):\n\tPromise<any> {\n\tswitch (name) {\n\t\tcase \"Band\":\n\t\t\treturn (await import(\"./Band\")).Band;\n\t\tcase \"Conversation\":\n\t\t\treturn (await import(\"./Conversation\")).Conversation;\n\t\tcase \"ErrorReport\":\n\t\t\treturn (await import(\"./ErrorReport\")).ErrorReport;\n\t\tcase \"FacebookAccount\":\n\t\t\treturn (await import(\"./FacebookAccount\")).FacebookAccount;\n\t\tcase \"Gig\":\n\t\t\treturn (await import(\"./Gig\")).Gig;\n\t\tcase \"GooglePlace\":\n\t\t\treturn (await import(\"./GooglePlace\")).GooglePlace;\n\t\tcase \"Location\":\n\t\t\treturn (await import(\"./Location\")).Location;\n\t\tcase \"Notification\":\n\t\t\treturn (await import(\"./Notification\")).Notification;\n\t\tcase \"Page\":\n\t\t\treturn (await import(\"./Page\")).Page;\n\t\tcase \"Post\":\n\t\t\treturn (await import(\"./Post\")).Post;\n\t\tcase \"Request\":\n\t\t\treturn (await import(\"./Request\")).Request;\n\t\tcase \"TwitterAccount\":\n\t\t\treturn (await import(\"./TwitterAccount\")).TwitterAccount;\n\t\tcase \"Upload\":\n\t\t\treturn (await import(\"./Upload\")).Upload;\n\t\tcase \"User\":\n\t\t\treturn (await import(\"./User\")).User;\n\t\tcase \"Venue\":\n\t\t\treturn (await import(\"./Venue\")).Venue;\n\t\tdefault:\n\t\t\treturn Promise.resolve(null);\n\t}\n}\n","/**\n * Created by corynull on Dec 30 2017 11:14:11 AM.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport interface ConversationEvent {\n\tdateTimePosted: Date;\n\tmessage: string;\n\tuser: string;\n}\n\nexport type ConversationCallback = (c: Conversation | null) => void;\nexport type ConversationCallbackDestroyer = () => void;\n\nexport class Conversation extends RESTModel {\n\tpublic static ModelName: string = \"Conversation\";\n\tpublic static Callbacks:\n\t\tMap<number, ConversationCallback> = new Map();\n\n\tget events(): ConversationEvent[] {\n\t\treturn this.getField(\"events\") || [];\n\t}\n\n\tset events(value: ConversationEvent[]) {\n\t\tthis.setField(\"events\", value);\n\t}\n\n\tget users(): string[] {\n\t\treturn this.getField(\"users\") || [];\n\t}\n\n\tset users(value: string[]) {\n\t\tthis.setField(\"users\", value);\n\t}\n\n\tpublic static newCallback(callback: ConversationCallback):\n\t\tConversationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tConversation.Callbacks.set(callbackId, callback);\n\t\treturn () => Conversation.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static connectSocket(): void {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"/API/Conversation/Update\", (data: any) => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlet conv: Conversation | null =\n\t\t\t\t\t\t\t\tRESTModel.CacheGet(data._id) as Conversation | null;\n\t\t\t\t\t\t\tif (conv) {\n\t\t\t\t\t\t\t\tObject.assign(conv, data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconv = new Conversation(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tRESTModel.Cache.set(conv._id, conv);\n\t\t\t\t\t\t\tConversation.Callbacks.forEach((cb) => cb(conv));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static findById(id: string): Promise<Conversation | null> {\n\t\treturn RESTModel.findByIdBase(Conversation, id, true) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Conversation | null> {\n\t\treturn RESTModel.findOneBase(Conversation, criteria) as\n\t\t\tPromise<Conversation | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, criteria, false) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Conversation[]> {\n\t\treturn RESTModel.findManyBase(Conversation, null, true) as\n\t\t\tPromise<Conversation[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n\tpublic pushMessage(user: string, message: string):\n\t\tPromise<this> {\n\t\tthis.events.push({\n\t\t\tdateTimePosted: new Date(),\n\t\t\tmessage,\n\t\t\tuser,\n\t\t});\n\t\treturn this.save();\n\t}\n\n\t// TODO: inviteNewUser(user, newUser, token) {}\n\n}\n","/**\n * Created by corynull on 4/7/17.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport class GooglePlace extends RESTModel {\n\tpublic static ModelName: string = \"GooglePlace\";\n\n\tget placeId(): string {\n\t\treturn this.getField(\"placeId\") || this.getField(\"place_id\");\n\t}\n\n\tset placeId(value: string) {\n\t\tthis.setField(\"placeId\", value);\n\t}\n\n\tget details(): string {\n\t\treturn this.getField(\"details\");\n\t}\n\n\tset details(value: string) {\n\t\tthis.setField(\"details\", value);\n\t}\n\n\tget description(): string {\n\t\treturn this.getField(\"description\");\n\t}\n\n\tset description(value: string) {\n\t\tthis.setField(\"description\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findByIdBase(GooglePlace, id) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<GooglePlace | null> {\n\t\treturn RESTModel.findOneBase(GooglePlace, criteria) as\n\t\t\tPromise<GooglePlace | null>;\n\t}\n\n\tpublic static findMany(criteria: any): Promise<GooglePlace[]> {\n\t\treturn RESTModel.findManyBase(GooglePlace, criteria, false) as\n\t\t\tPromise<GooglePlace[]>;\n\t}\n\n\tpublic static getPlaceDetails(placeId: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof placeId !== \"string\") {\n\t\t\t\treturn reject(new Error(\"placeId is not a string!\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace\", { placeId }).then(\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic static queryPlace(text: string, maybeType: string):\n\t\tPromise<GooglePlace[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst type = maybeType || \"locality\";\n\t\t\tif (typeof text !== \"string\") {\n\t\t\t\treturn reject(new Error(\"text is not a string!\"));\n\t\t\t}\n\t\t\tif (text.length === 0) {\n\t\t\t\treturn reject(new Error(\"text is blank\"));\n\t\t\t}\n\t\t\treturn API.call(\"GET\", \"/API/GooglePlace/Query\", {\n\t\t\t\tterm: text,\n\t\t\t\ttype\n\t\t\t}).then(resolve, reject);\n\t\t});\n\t}\n}\n","/**\n * Created by corynull on 8/15/17.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport interface NotificationAction {\n\tlabel: string;\n\tlink: string;\n\trequest: string;\n}\n\nexport type NotificationCallback = (note: Notification) => void;\nexport type NotificationCallbackDestroyer = () => void;\n\nexport class Notification extends RESTModel {\n\tpublic static ModelName: string = \"Notification\";\n\tpublic static Callbacks: Map<number, NotificationCallback> = new Map();\n\tprivate changeCallbacks: Map<number, NotificationCallback> = new Map();\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget label(): string {\n\t\treturn this.getField(\"label\");\n\t}\n\n\tset label(value: string) {\n\t\tthis.setField(\"label\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget actions(): NotificationAction[] {\n\t\treturn this.getField(\"actions\");\n\t}\n\n\tset actions(value: NotificationAction[]) {\n\t\tthis.setField(\"actions\", value);\n\t}\n\n\tget seenByUser(): boolean {\n\t\treturn this.getField(\"seenByUser\");\n\t}\n\n\tset seenByUser(value: boolean) {\n\t\tthis.setField(\"seenByUser\", value);\n\t}\n\n\tpublic static onNewNotification(note: any) {\n\t\tNotification.Callbacks.forEach((callback: any) => callback(note));\n\t}\n\n\tpublic static newCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst callbackId = Date.now();\n\t\tNotification.Callbacks.set(callbackId, callback);\n\t\treturn () => Notification.Callbacks.delete(callbackId);\n\t}\n\n\tpublic static async getNewNotifications(): Promise<Notification[]> {\n\t\tif (API.token !== null) {\n\t\t\tconst notes = await API.call(\"GET\", \"/API/Notification\", {\n\t\t\t\treturnNew: true\n\t\t\t});\n\t\t\tif (Array.isArray(notes)) {\n\t\t\t\treturn notes.map((item: any) => new Notification(item));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic static getAllOwned(): Promise<Notification[]> {\n\t\treturn RESTModel.findManyBase(\"Notification\", null, true) as Promise<Notification[]>;\n\t}\n\n\tpublic static findById(id: string): Promise<Notification | null> {\n\t\treturn RESTModel.findByIdBase(\"Notification\", id, true) as Promise<Notification | null>;\n\t}\n\n\tpublic static connectSocket() {\n\t\tAPI.getSocket().then(\n\t\t\t(socket: SocketIOClient.Socket | null) => {\n\t\t\t\tif (socket) {\n\t\t\t\t\tsocket.on(\"notification\", (data: any) =>\n\t\t\t\t\t\tNotification.onNewNotification(new Notification(data))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tconsole.error);\n\t}\n\n\tpublic static setUpPushNotifications() {\n\t\tconst PushSupported =\n\t\t\ttypeof window !== \"undefined\" &&\n\t\t\ttypeof (window as any).Notification !== \"undefined\";\n\t\tconst webNotification = (PushSupported) ? (window as any).Notification : null;\n\t\tif (PushSupported) {\n\t\t\tconst setup = (permission: string) => {\n\t\t\t\tif (permission === \"granted\") {\n\t\t\t\t\tNotification.onNewNotification((note: Notification) => {\n\t\t\t\t\t\treturn new webNotification(note.label, {\n\t\t\t\t\t\t\tbody: note.message,\n\t\t\t\t\t\t\tdata: note,\n\t\t\t\t\t\t\ticon: \"/LogoSmall.png\",\n\t\t\t\t\t\t\ttimestamp: note.dateCreated\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (webNotification.permission === \"granted\") {\n\t\t\t\tsetup(webNotification.permission);\n\t\t\t} else {\n\t\t\t\twebNotification.requestPermission(setup);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic newChangeCallback(callback: any): NotificationCallbackDestroyer {\n\t\tconst i = Date.now();\n\t\tthis.changeCallbacks.set(i, callback);\n\t\treturn () => { this.changeCallbacks.delete(i); };\n\t}\n}\n","/**\n * Created by corynull on 5/23/17.\n */\n\nimport { RESTModel } from \"./RESTModel\";\n\nexport class Post extends RESTModel {\n\tpublic static ModelName: string = \"Post\";\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget network(): string {\n\t\treturn this.getField(\"network\");\n\t}\n\n\tset network(value: string) {\n\t\tthis.setField(\"network\", value);\n\t}\n\n\tget accountId(): string {\n\t\treturn this.getField(\"accountId\");\n\t}\n\n\tset accountId(value: string) {\n\t\tthis.setField(\"accountId\", value);\n\t}\n\n\tget pageId(): string {\n\t\treturn this.getField(\"pageId\");\n\t}\n\n\tset pageId(value: string) {\n\t\tthis.setField(\"pageId\", value);\n\t}\n\n\tget postText(): string {\n\t\treturn this.getField(\"postText\");\n\t}\n\n\tset postText(value: string) {\n\t\tthis.setField(\"postText\", value);\n\t}\n\n\tget postDate(): string {\n\t\treturn this.getField(\"postDate\");\n\t}\n\n\tset postDate(value: string) {\n\t\tthis.setField(\"postDate\", value);\n\t}\n\n\tget coordinates(): number[] {\n\t\treturn this.getField(\"coordinates\");\n\t}\n\n\tset coordinates(value: number[]) {\n\t\tthis.setField(\"coordinates\", value);\n\t}\n\n\tget error(): string {\n\t\treturn this.getField(\"error\");\n\t}\n\n\tset error(value: string) {\n\t\tthis.setField(\"error\", value);\n\t}\n\n\tget done(): boolean {\n\t\treturn this.getField(\"done\");\n\t}\n\n\tset done(value: boolean) {\n\t\tthis.setField(\"done\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<Post | null> {\n\t\treturn RESTModel.findByIdBase(Post, id) as Promise<Post | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Post | null> {\n\t\treturn RESTModel.findOneBase(Post, criteria) as Promise<Post | null>;\n\t}\n\n\tpublic static getAllOwned(): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, null) as Promise<Post[]>;\n\t}\n\n\tpublic static findMany(criteria: object | null): Promise<Post[]> {\n\t\treturn RESTModel.findManyBase(Post, criteria) as Promise<Post[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\treturn true;\n\t}\n\n\tpublic canSave(): boolean {\n\t\tif (!this.postDate) { return false; }\n\t\tif (!this.postText || this.postText === \"\") { return false; }\n\t\tif (!this.network) {\n\t\t\t// TODO: Do network validation\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.userId; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.userId;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Jan 8 2018 8:58:54 PM.\n */\n\nimport { RESTModel } from \"./RESTModel\";\n\nexport class ErrorReport extends RESTModel {\n\tpublic static ModelName: string = \"ErrorReport\";\n\n\tget version(): string {\n\t\treturn this.getField(\"version\");\n\t}\n\n\tset version(value: string) {\n\t\tthis.setField(\"version\", value);\n\t}\n\n\tget userId(): string {\n\t\treturn this.getField(\"userId\");\n\t}\n\n\tset userId(value: string) {\n\t\tthis.setField(\"userId\", value);\n\t}\n\n\tget stack(): string {\n\t\treturn this.getField(\"stack\");\n\t}\n\n\tset stack(value: string) {\n\t\tthis.setField(\"stack\", value);\n\t}\n\n\tget message(): string {\n\t\treturn this.getField(\"message\");\n\t}\n\n\tset message(value: string) {\n\t\tthis.setField(\"message\", value);\n\t}\n\n\tget name(): string {\n\t\treturn this.getField(\"name\");\n\t}\n\n\tset name(value: string) {\n\t\tthis.setField(\"name\", value);\n\t}\n\n\tget fileName(): string {\n\t\treturn this.getField(\"fileName\");\n\t}\n\n\tset fileName(value: string) {\n\t\tthis.setField(\"fileName\", value);\n\t}\n\n\tget columnNumber(): number {\n\t\treturn this.getField(\"columnNumber\");\n\t}\n\n\tset columnNumber(value: number) {\n\t\tthis.setField(\"columnNumber\", value);\n\t}\n\n\tget lineNumber(): number {\n\t\treturn this.getField(\"lineNumber\");\n\t}\n\n\tset lineNumber(value: number) {\n\t\tthis.setField(\"lineNumber\", value);\n\t}\n\n\tpublic static findById(id: string): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findByIdBase(ErrorReport, id) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<ErrorReport | null> {\n\t\treturn RESTModel.findOneBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport | null>;\n\t}\n\n\tpublic static findMany(criteria: object | null):\n\t\tPromise<ErrorReport[]> {\n\t\treturn RESTModel.findManyBase(ErrorReport, criteria) as\n\t\t\tPromise<ErrorReport[]>;\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\t// TODO: do more tests...\n\t\treturn true;\n\t}\n\n}\n","/**\n * Created by corynull on 8/1/17.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport class Page extends RESTModel {\n\tpublic static ModelName: string = \"Page\";\n\n\tget data(): string {\n\t\treturn this.getField(\"data\");\n\t}\n\n\tset data(value: string) {\n\t\tthis.setField(\"data\", value);\n\t}\n\n\tget metadata(): string {\n\t\treturn this.getField(\"metadata\");\n\t}\n\n\tset metadata(value: string) {\n\t\tthis.setField(\"metadata\", value);\n\t}\n\n\tget title(): string {\n\t\treturn this.getField(\"title\");\n\t}\n\n\tset title(value: string) {\n\t\tthis.setField(\"title\", value);\n\t}\n\n\tget link(): string {\n\t\treturn this.getField(\"link\");\n\t}\n\n\tset link(value: string) {\n\t\tthis.setField(\"link\", value);\n\t}\n\n\tget visits(): number {\n\t\treturn this.getField(\"visits\") || 0;\n\t}\n\n\tset visits(value: number) {\n\t\tthis.setField(\"visits\", value);\n\t}\n\n\tget revisions(): number {\n\t\treturn this.getField(\"revisions\") || 0;\n\t}\n\n\tset revisions(value: number) {\n\t\tthis.setField(\"revisions\", value);\n\t}\n\n\tget hide(): boolean {\n\t\tconst value = this.getField(\"hide\");\n\t\treturn value === null ? true : Boolean(value);\n\t}\n\n\tset hide(value: boolean) {\n\t\tthis.setField(\"hide\", value);\n\t}\n\n\tget blog(): boolean {\n\t\tconst value = this.getField(\"blog\");\n\t\treturn Boolean(value);\n\t}\n\n\tset blog(value: boolean) {\n\t\tthis.setField(\"blog\", value);\n\t}\n\n\tget doc(): boolean {\n\t\tconst value = this.getField(\"doc\");\n\t\treturn Boolean(value);\n\t}\n\n\tset doc(value: boolean) {\n\t\tthis.setField(\"doc\", value);\n\t}\n\n\tget admin(): string {\n\t\treturn this.getField(\"admin\");\n\t}\n\n\tset admin(value: string) {\n\t\tthis.setField(\"admin\", value);\n\t}\n\n\tpublic static findMany(criteria: any, skip?: number, limit?: number):\n\t\tPromise<Page[]> {\n\t\tif (criteria) {\n\t\t\tcriteria.skip = criteria.skip || skip;\n\t\t\tcriteria.limit = criteria.limit || limit;\n\t\t}\n\t\treturn RESTModel.findManyBase(Page, criteria) as Promise<Page[]>;\n\t}\n\n\tpublic static findOne(criteria: any): Promise<Page | null> {\n\t\treturn RESTModel.findOneBase(Page, criteria) as Promise<Page | null>;\n\t}\n\n\tpublic static findById(id: string): Promise<Page | null> {\n\t\treturn RESTModel.findByIdBase(Page, id) as Promise<Page | null>;\n\t}\n\n\tpublic static findByLink(link: string): Promise<Page | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"GET\", `/API/Link/${link}`, null).then(\n\t\t\t\t(page: any) => {\n\t\t\t\t\tresolve(new Page(page));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic isValid(): boolean {\n\t\tif (!super.isValid()) { return false; }\n\t\tif (!this.title) { return false; }\n\t\tif (this.title === \"\") { return false; }\n\t\treturn true;\n\t}\n\n\tpublic userIsOwner(user: any): boolean {\n\t\tif (typeof user === \"string\") { return user === this.admin; }\n\t\tif (typeof user === \"function\" && user && user.isValid()) {\n\t\t\treturn user._id === this.admin || user.admin;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/**\n * Created by corynull on Nov 30 2017 5:27 AM.\n */\n\nimport { API } from \"./API\";\nimport { RESTModel } from \"./RESTModel\";\n\nexport class Request extends RESTModel {\n\tpublic static ModelName: string = \"Request\";\n\n\tget to(): string {\n\t\treturn this.getField(\"to\");\n\t}\n\n\tset to(value: string) {\n\t\tthis.setField(\"to\", value);\n\t}\n\n\tget from(): string {\n\t\treturn this.getField(\"from\");\n\t}\n\n\tset from(value: string) {\n\t\tthis.setField(\"from\", value);\n\t}\n\n\tget status(): string {\n\t\treturn this.getField(\"status\");\n\t}\n\n\tset status(value: string) {\n\t\tthis.setField(\"status\", value);\n\t}\n\n\tget options(): string[] {\n\t\treturn this.getField(\"options\");\n\t}\n\n\tset options(value: string[]) {\n\t\tthis.setField(\"options\", value);\n\t}\n\n\tget type(): string {\n\t\treturn this.getField(\"type\");\n\t}\n\n\tset type(value: string) {\n\t\tthis.setField(\"type\", value);\n\t}\n\n\tget userData(): any {\n\t\treturn this.getField(\"userData\");\n\t}\n\n\tset userData(value: any) {\n\t\tthis.setField(\"userData\", value);\n\t}\n\n\tget emailSent(): boolean {\n\t\treturn this.getField(\"emailSent\");\n\t}\n\n\tset emailSent(value: boolean) {\n\t\tthis.setField(\"emailSent\", value);\n\t}\n\n\tpublic static createBandOwnershipRequest(band: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"BandOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tbandId: band\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createVenueOwnershipRequest(venue: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"VenueOwnership\",\n\t\t\t\tuserData: {\n\t\t\t\t\tvenueId: venue\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static createGigNegotiation(gig: string, from: string, to: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAPI.call(\"POST\", \"/API/Request\", {\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\ttype: \"GigNegotiation\",\n\t\t\t\tuserData: {\n\t\t\t\t\tgigId: gig\n\t\t\t\t}\n\t\t\t}).then(\n\t\t\t\t(data: any) => {\n\t\t\t\t\tresolve(new Request(data));\n\t\t\t\t},\n\t\t\t\treject);\n\t\t});\n\t}\n\n\tpublic static getAllOwned() {\n\t\treturn RESTModel.findManyBase(Request, null);\n\t}\n\n\tpublic static findById(id: string) {\n\t\treturn RESTModel.findByIdBase(Request, id);\n\t}\n\n\tpublic async execute(option: string) {\n\t\tconst request = await API.call(\n\t\t\t\"POST\",\n\t\t\t`/API/Request/${this._id}/${option}`,\n\t\t\tnull\n\t\t);\n\t\tthis.assign(request);\n\t\treturn this;\n\t}\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { Band } from \"./Band\";\nexport { Conversation } from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { Location } from \"./Location\";\nexport { Notification } from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\n\nexport const GigGizmoPropTypes = module.exports;\n","import * as PropTypes from \"prop-types\";\n\nexport const Band = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcityName: PropTypes.string,\n\tcityPlaceID: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tmetadata: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Conversation = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tevents: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdateTimePosted: PropTypes.string.isRequired,\n\t\t\tmessage: PropTypes.string.isRequired,\n\t\t\tuser: PropTypes.string.isRequired\n\t\t})\n\t),\n\tusers: PropTypes.arrayOf(PropTypes.string.isRequired)\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const ErrorReport = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tcolumnNumber: PropTypes.number,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tfileName: PropTypes.string,\n\tlineNumber: PropTypes.number,\n\tmessage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tstack: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n\tversion: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const FacebookAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\tuserAccessToken: PropTypes.string,\n\tuserId: PropTypes.string.isRequired,\n\tuserRefreshToken: PropTypes.string,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Gig = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tbandOwnerAccepted: PropTypes.string,\n\tbands: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tstartTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\tstopTime: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired, // Date,\n\ttoBeAnnounced: PropTypes.bool,\n\tvenue: PropTypes.string.isRequired,\n\tvenueOwnerAccepted: PropTypes.string\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Location = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taddress: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tplaceId: PropTypes.string.isRequired,\n\tpoint: PropTypes.arrayOf(PropTypes.number).isRequired,\n\ttype: PropTypes.string.isRequired,\n\tutcOffset: PropTypes.number.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Notification = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactions: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tlink: PropTypes.string,\n\t\t\trequest: PropTypes.string\n\t\t})\n\t),\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tseenByUser: PropTypes.bool,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Page = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tblog: PropTypes.bool,\n\tdata: PropTypes.string,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdoc: PropTypes.bool,\n\thide: PropTypes.bool,\n\tlink: PropTypes.string,\n\tmetadata: PropTypes.string,\n\trevisions: PropTypes.number,\n\ttitle: PropTypes.string,\n\tvisits: PropTypes.number\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Post = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccountId: PropTypes.string.isRequired,\n\tcoordinates: PropTypes.arrayOf(PropTypes.number), // coord = [longitude, latitude]\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdone: PropTypes.bool.isRequired,\n\terror: PropTypes.any,\n\tnetwork: PropTypes.string.isRequired,\n\tpageId: PropTypes.string.isRequired,\n\tpostDate: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tpostText: PropTypes.string.isRequired,\n\tuserId: PropTypes.string.isRequired,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const TwitterAccount = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\taccessToken: PropTypes.string,\n\taccountId: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tprofile: PropTypes.any,\n\ttokenSecret: PropTypes.string,\n\tuserId: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Upload = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\tfileData: PropTypes.string.isRequired,\n\tfileName: PropTypes.string.isRequired,\n\towners: PropTypes.arrayOf(PropTypes.string).isRequired,\n\ttitle: PropTypes.string.isRequired\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const User = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tactive: PropTypes.bool,\n\tadmin: PropTypes.bool,\n\tattempts: PropTypes.number,\n\tbandManager: PropTypes.bool,\n\tbetaFeatureUser: PropTypes.bool,\n\tbirthday: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string,\n\temail: PropTypes.string,\n\temailVerified: PropTypes.bool,\n\tfacebook: PropTypes.string,\n\tfirstName: PropTypes.string.isRequired,\n\ticon: PropTypes.string,\n\tlastLogin: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tlastLoginIP: PropTypes.string.isRequired,\n\tlastName: PropTypes.string.isRequired,\n\tmiddleName: PropTypes.string,\n\tpayment: PropTypes.string,\n\tpaypal: PropTypes.string,\n\tsendAnonymousReports: PropTypes.bool,\n\tsendEmails: PropTypes.bool,\n\tsendErrorReports: PropTypes.bool,\n\tsendPromotions: PropTypes.bool,\n\ttwitter: PropTypes.string,\n\tuseCookies: PropTypes.bool,\n\tvenueManager: PropTypes.bool,\n});\n","import * as PropTypes from \"prop-types\";\n\nexport const Venue = PropTypes.shape({\n\t_id: PropTypes.string.isRequired,\n\tdateCreated: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdateModified: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(Date)\n\t]).isRequired,\n\tdescription: PropTypes.string.isRequired,\n\temail: PropTypes.string,\n\tfacebook: PropTypes.string,\n\tfacebookPageId: PropTypes.string,\n\tfacebookPageName: PropTypes.string,\n\tfacebookPageToken: PropTypes.string,\n\tgoogle: PropTypes.string,\n\ticon: PropTypes.string,\n\tlocation: PropTypes.string.isRequired,\n\tmetaData: PropTypes.string,\n\tname: PropTypes.string.isRequired,\n\topenCloseTimes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tclosingTime: PropTypes.string,\n\t\t\topen: PropTypes.bool,\n\t\t\topeningTime: PropTypes.string\n\t\t})\n\t),\n\towners: PropTypes.arrayOf(PropTypes.string),\n\tphone: PropTypes.string,\n\tphotos: PropTypes.arrayOf(PropTypes.string),\n\ttwitter: PropTypes.string,\n\twebsite: PropTypes.string\n});\n","(function() { module.exports = this[\"axios\"]; }());","(function() { module.exports = this[\"socket.io-client\"]; }());","/**\n * Created by corynull on 7/15/17.\n */\n\n// Extras\nexport { GigGizmoPropTypes } from \"./PropTypes\";\nexport { API } from \"./API\";\n\n// Models\nexport { Band } from \"./Band\";\nexport {\n\tConversation,\n\tConversationEvent\n} from \"./Conversation\";\nexport { ErrorReport } from \"./ErrorReport\";\nexport { FacebookAccount } from \"./FacebookAccount\";\nexport { Gig } from \"./Gig\";\nexport { GooglePlace } from \"./GooglePlace\";\nexport { Location } from \"./Location\";\nexport {\n\tNotification,\n\tNotificationAction\n} from \"./Notification\";\nexport { Page } from \"./Page\";\nexport { Post } from \"./Post\";\nexport { Request } from \"./Request\";\nexport { RESTModel } from \"./RESTModel\";\nexport { TwitterAccount } from \"./TwitterAccount\";\nexport { Upload } from \"./Upload\";\nexport { User } from \"./User\";\nexport { Venue } from \"./Venue\";\nexport { ModelNameToModel } from \"./ModelNameToModel\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).GigGizmoAPI = module.exports;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}