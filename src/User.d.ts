/**
 * Created by corynull on 4/1/17.
 */
import RESTModel from "./RESTModel";
export default class User extends RESTModel {
		public static ModelName: string;
		public static Current: any;
		public static Callbacks: Map<number, (user: User) => any>;
		public static agreement: any;
		public static EmailRegex: RegExp;
		public password: string;
		public confirmPassword: string;
		public icon: string;
		public active: boolean;
		public admin: boolean;
		public firstName: string;
		public middleName: string;
		public lastName: string;
		public birthday: Date;
		public country: string;
		public bandManager: boolean;
		public venueManager: boolean;
		public betaFeatureUser: boolean;
		public sendAnonymousReports: boolean;
		public sendErrorReports: boolean;
		public sendEmails: boolean;
		public sendPromotions: boolean;
		public useCookies: boolean;
		public readonly fullName: string;
		public email: string;
		public readonly salt: string;
		public readonly hash: string;
		public facebook: string;
		public twitter: string;
		public description: string;
		public emailVerified: boolean;
		public readonly attempts: number;
		public lastLoginIP: string;
		public lastLogin: Date;
		public canContact: boolean;
		public canFind: boolean;
		public options: any;
		public static verifyEmail(id: string, secret: string): Promise<any>;
		public static sendEmailVerification(): Promise<any>;
		public static getAllConversations(): Promise<any[]>;
		public static getAllNotifications(): Promise<any[]>;
		public static getAllPosts(): Promise<any[]>;
		public static getAllBands(): Promise<any[]>;
		public static getAllVenues(): Promise<any[]>;
		public static getAllGigs(): Promise<any[]>;
		public static getAllUploads(): Promise<any[]>;
		public static findFacebookPages(term: string): Promise<{}>;
		public static search(q: string, modelName?: string, skip?: number, limit?: number): Promise<{}>;
		public static findMany(criteria: object | null): Promise<any[]>;
		public static findOne(criteria: object | null): Promise<any>;
		public static onChange(callback: any): () => void;
		public static setUser(data: object | null): Promise<any>;
		public static getUser(force: boolean): Promise<any>;
		public static findById(id: string): Promise<any>;
		public static connectFacebook(): void;
		public static facebookLogIn(): void;
		public static payPalLogIn(): void;
		public static userLogIn(email: string, password: string): Promise<any>;
		public static userLogOut(): Promise<any>;
		public static sendPasswordResetEmail(email: string): Promise<any>;
		public static registerUser(userData: any): Promise<{}>;
		public static NotifyAdminsOfError(): void;
		public getIcon(): Promise<any>;
		public getTwitterAccount(): Promise<any>;
		public getFacebookAccount(): Promise<any>;
		public validatePassword(maybePassword: string): Error;
		public isValid(): boolean;
		public valid(): boolean;
		public save(): any;
		public remove(): any;
}
