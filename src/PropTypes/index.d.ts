declare const _default: {
    Band: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        name: import("prop-types").Validator<string>;
        website: import("prop-types").Requireable<string>;
        email: import("prop-types").Requireable<string>;
        cityName: import("prop-types").Requireable<string>;
        cityPlaceID: import("prop-types").Requireable<string>;
        description: import("prop-types").Requireable<string>;
        icon: import("prop-types").Requireable<string>;
        photos: import("prop-types").Requireable<string[]>;
        owners: import("prop-types").Requireable<string[]>;
        facebook: import("prop-types").Requireable<string>;
        twitter: import("prop-types").Requireable<string>;
        google: import("prop-types").Requireable<string>;
        metadata: import("prop-types").Requireable<string>;
        facebookPageId: import("prop-types").Requireable<string>;
        facebookPageName: import("prop-types").Requireable<string>;
        facebookPageToken: import("prop-types").Requireable<string>;
    }>>;
    Conversation: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        users: import("prop-types").Requireable<string[]>;
        events: import("prop-types").Requireable<import("prop-types").InferProps<{
            user: import("prop-types").Validator<string>;
            message: import("prop-types").Validator<string>;
            dateTimePosted: import("prop-types").Validator<string>;
        }>[]>;
    }>>;
    ErrorReport: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        userId: import("prop-types").Validator<string>;
        version: import("prop-types").Validator<string>;
        stack: import("prop-types").Validator<string>;
        message: import("prop-types").Validator<string>;
        name: import("prop-types").Validator<string>;
        fileName: import("prop-types").Requireable<string>;
        columnNumber: import("prop-types").Requireable<number>;
        lineNumber: import("prop-types").Requireable<number>;
    }>>;
    FacebookAccount: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        userId: import("prop-types").Validator<string>;
        accountId: import("prop-types").Validator<string>;
        userAccessToken: import("prop-types").Requireable<string>;
        userRefreshToken: import("prop-types").Requireable<string>;
        profile: import("prop-types").Requireable<any>;
    }>>;
    Gig: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        startTime: import("prop-types").Validator<string | Date>;
        stopTime: import("prop-types").Validator<string | Date>;
        location: import("prop-types").Validator<string>;
        venue: import("prop-types").Validator<string>;
        band: import("prop-types").Requireable<string>;
        toBeAnnounced: import("prop-types").Requireable<boolean>;
        bandOwnerAccepted: import("prop-types").Requireable<string>;
        venueOwnerAccepted: import("prop-types").Requireable<string>;
        owners: import("prop-types").Requireable<string[]>;
    }>>;
    Location: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        placeId: import("prop-types").Validator<string>;
        address: import("prop-types").Validator<string>;
        type: import("prop-types").Validator<string>;
        point: import("prop-types").Validator<number[]>;
        utcOffset: import("prop-types").Validator<number>;
    }>>;
    Notification: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        userId: import("prop-types").Validator<string>;
        label: import("prop-types").Validator<string>;
        message: import("prop-types").Validator<string>;
        actions: import("prop-types").Requireable<import("prop-types").InferProps<{
            request: import("prop-types").Requireable<string>;
            link: import("prop-types").Requireable<string>;
            label: import("prop-types").Validator<string>;
        }>[]>;
        seenByUser: import("prop-types").Requireable<boolean>;
    }>>;
    Page: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        data: import("prop-types").Requireable<string>;
        metadata: import("prop-types").Requireable<string>;
        title: import("prop-types").Requireable<string>;
        link: import("prop-types").Requireable<string>;
        visits: import("prop-types").Requireable<number>;
        revisions: import("prop-types").Requireable<number>;
        hide: import("prop-types").Requireable<boolean>;
        blog: import("prop-types").Requireable<boolean>;
        doc: import("prop-types").Requireable<boolean>;
    }>>;
    Post: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        userId: import("prop-types").Validator<string>;
        network: import("prop-types").Validator<string>;
        accountId: import("prop-types").Validator<string>;
        pageId: import("prop-types").Validator<string>;
        postText: import("prop-types").Validator<string>;
        postDate: import("prop-types").Validator<string | Date>;
        coordinates: import("prop-types").Requireable<number[]>;
        error: import("prop-types").Requireable<any>;
        done: import("prop-types").Validator<boolean>;
    }>>;
    TwitterAccount: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        userId: import("prop-types").Validator<string>;
        accountId: import("prop-types").Validator<string>;
        accessToken: import("prop-types").Requireable<string>;
        tokenSecret: import("prop-types").Requireable<string>;
        profile: import("prop-types").Requireable<any>;
    }>>;
    Upload: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        title: import("prop-types").Validator<string>;
        description: import("prop-types").Requireable<string>;
        fileName: import("prop-types").Validator<string>;
        fileData: import("prop-types").Validator<string>;
        owners: import("prop-types").Validator<string[]>;
    }>>;
    User: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        icon: import("prop-types").Requireable<string>;
        email: import("prop-types").Requireable<string>;
        firstName: import("prop-types").Validator<string>;
        middleName: import("prop-types").Requireable<string>;
        lastName: import("prop-types").Validator<string>;
        birthday: import("prop-types").Validator<string | Date>;
        country: import("prop-types").Validator<string>;
        bandManager: import("prop-types").Requireable<boolean>;
        venueManager: import("prop-types").Requireable<boolean>;
        betaFeatureUser: import("prop-types").Requireable<boolean>;
        sendAnonymousReports: import("prop-types").Requireable<boolean>;
        sendErrorReports: import("prop-types").Requireable<boolean>;
        sendEmails: import("prop-types").Requireable<boolean>;
        sendPromotions: import("prop-types").Requireable<boolean>;
        useCookies: import("prop-types").Requireable<boolean>;
        description: import("prop-types").Requireable<string>;
        active: import("prop-types").Requireable<boolean>;
        paypal: import("prop-types").Requireable<string>;
        facebook: import("prop-types").Requireable<string>;
        twitter: import("prop-types").Requireable<string>;
        emailVerified: import("prop-types").Requireable<boolean>;
        payment: import("prop-types").Requireable<string>;
        admin: import("prop-types").Requireable<boolean>;
        attempts: import("prop-types").Requireable<number>;
        lastLogin: import("prop-types").Validator<string | Date>;
        lastLoginIP: import("prop-types").Validator<string>;
    }>>;
    Venue: import("prop-types").Requireable<import("prop-types").InferProps<{
        _id: import("prop-types").Validator<string>;
        dateCreated: import("prop-types").Validator<string | Date>;
        dateModified: import("prop-types").Validator<string | Date>;
        name: import("prop-types").Validator<string>;
        description: import("prop-types").Validator<string>;
        website: import("prop-types").Requireable<string>;
        phone: import("prop-types").Requireable<string>;
        email: import("prop-types").Requireable<string>;
        location: import("prop-types").Validator<string>;
        openCloseTimes: import("prop-types").Requireable<import("prop-types").InferProps<{
            open: import("prop-types").Requireable<boolean>;
            openingTime: import("prop-types").Requireable<string>;
            closingTime: import("prop-types").Requireable<string>;
        }>[]>;
        icon: import("prop-types").Requireable<string>;
        photos: import("prop-types").Requireable<string[]>;
        owners: import("prop-types").Requireable<string[]>;
        facebook: import("prop-types").Requireable<string>;
        twitter: import("prop-types").Requireable<string>;
        google: import("prop-types").Requireable<string>;
        metaData: import("prop-types").Requireable<string>;
        facebookPageId: import("prop-types").Requireable<string>;
        facebookPageName: import("prop-types").Requireable<string>;
        facebookPageToken: import("prop-types").Requireable<string>;
    }>>;
};
export default _default;
